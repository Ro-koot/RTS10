
ass07.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001918  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000164  08001ab8  08001ab8  00011ab8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001c1c  08001c1c  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08001c1c  08001c1c  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001c1c  08001c1c  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001c1c  08001c1c  00011c1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001c20  08001c20  00011c20  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08001c24  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000dc  20000070  08001c94  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000014c  08001c94  0002014c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   000001f9  00000000  00000000  000200a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000010f  00000000  00000000  00020299  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000070  00000000  00000000  000203a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000038  00000000  00000000  00020418  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001c06  00000000  00000000  00020450  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000006dc  00000000  00000000  00022056  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00007b66  00000000  00000000  00022732  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002a298  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000e38  00000000  00000000  0002a2e8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         00000024  00000000  00000000  0002b120  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      0000003c  00000000  00000000  0002b144  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000070 	.word	0x20000070
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001aa0 	.word	0x08001aa0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000074 	.word	0x20000074
 80001dc:	08001aa0 	.word	0x08001aa0

080001e0 <multiply>:
	.globl power
	.text
	.thumb_func

multiply:
	MOVS.N R2, #0				// making variable for return value, R2 = m, R3 = i
 80001e0:	2200      	movs	r2, #0
	MOVS.N R3, #0
 80001e2:	2300      	movs	r3, #0

080001e4 <check>:
check:
	CMP.N	R0, #0				// if A = 0
 80001e4:	2800      	cmp	r0, #0
	BNE.N 	loop				// als ie niet gelijk is aan 0, jump naar loop
 80001e6:	d101      	bne.n	80001ec <loop>
	MOVS.N 	R0, R2				// return M als return waarde
 80001e8:	0010      	movs	r0, r2
	BX.N	LR					// weten we niet helemaal zeker
 80001ea:	4770      	bx	lr

080001ec <loop>:
loop:
	ADD.N	R2, R2, R1			// m = m + b
 80001ec:	440a      	add	r2, r1
	SUBS.N	R0, #1				// A = A - 1
 80001ee:	3801      	subs	r0, #1
	B.N		check
 80001f0:	e7f8      	b.n	80001e4 <check>

080001f2 <power>:

power:
	PUSH.N 	{LR}
 80001f2:	b500      	push	{lr}
	MOVS.N	R2, #1
 80001f4:	2201      	movs	r2, #1
	CMP.N 	R1, #0
 80001f6:	2900      	cmp	r1, #0
	BNE.N	check_loop
 80001f8:	d101      	bne.n	80001fe <check_loop>
	MOVS.N 	R0, #1
 80001fa:	2001      	movs	r0, #1
	BX.N	LR						// volgorde: R0 = n, R1 = m, R2 = p
 80001fc:	4770      	bx	lr

080001fe <check_loop>:

check_loop:
	CMP.N	R1, #1
 80001fe:	2901      	cmp	r1, #1
	BEQ.N	return
 8000200:	d017      	beq.n	8000232 <return>

08000202 <while_loop>:
while_loop:
	MOVS.N	R3, #1					// r3 = 1
 8000202:	2301      	movs	r3, #1
	ANDS.N	R3, R3, R1				// R1 is even of oneven
 8000204:	400b      	ands	r3, r1
	CMP.N	R3, #1					//--> immediately lose function of R3
 8000206:	2b01      	cmp	r3, #1
	BNE.N	skip
 8000208:	d10a      	bne.n	8000220 <skip>
	MOVS.N	R3, R1
 800020a:	000b      	movs	r3, r1
	MOVS.N	R1, R0
 800020c:	0001      	movs	r1, r0
	MOVS.N	R0, R2
 800020e:	0010      	movs	r0, r2
	MOVS.N	R2, R3					// volgorde: R0 = p, R1 = n, R2 = m, R3 = m
 8000210:	001a      	movs	r2, r3
	PUSH.N	{R1, R2, R3}			//--> push value of R1R2R3 on stack
 8000212:	b40e      	push	{r1, r2, r3}
	LDR.N	R2, =multiply
 8000214:	4a09      	ldr	r2, [pc, #36]	; (800023c <return+0xa>)
	BLX.N	R2
 8000216:	4790      	blx	r2
	POP.N 	{R1, R2, R3}
 8000218:	bc0e      	pop	{r1, r2, r3}
	MOVS.N 	R2, R0
 800021a:	0002      	movs	r2, r0
	MOVS.N 	R0, R1
 800021c:	0008      	movs	r0, r1
	MOVS.N 	R1, R3					// volgorde: R0 = n, R1 = m, R2 = p, R3 = m
 800021e:	0019      	movs	r1, r3

08000220 <skip>:
skip:
	PUSH.N	{R1, R2}				// behoud waarde van m en p
 8000220:	b406      	push	{r1, r2}
	MOVS.N	R1, R0					// R0 en R1 zijn n
 8000222:	0001      	movs	r1, r0
	LDR.N	R2, =multiply
 8000224:	4a05      	ldr	r2, [pc, #20]	; (800023c <return+0xa>)
	BLX.N	R2
 8000226:	4790      	blx	r2
	POP.N 	{R1, R2}				// volgorde: R0 = n, R1 = m, R2 = p, R3 = x
 8000228:	bc06      	pop	{r1, r2}
	LSRS.N	R1, R1, #1
 800022a:	0849      	lsrs	r1, r1, #1
	CMP.N	R1, #1
 800022c:	2901      	cmp	r1, #1
	NOP.N
 800022e:	bf00      	nop
	BNE.N	while_loop
 8000230:	d1e7      	bne.n	8000202 <while_loop>

08000232 <return>:
return:
	MOVS.N 	R1, R2					// volgorde R0 = n, R1 = p, R2 = p, R3 = x
 8000232:	0011      	movs	r1, r2
	LDR.N	R2, =multiply
 8000234:	4a01      	ldr	r2, [pc, #4]	; (800023c <return+0xa>)
	BLX.N	R2
 8000236:	4790      	blx	r2
	POP.N	{PC}
 8000238:	bd00      	pop	{pc}
	BX.N 	LR
 800023a:	4770      	bx	lr
	LDR.N	R2, =multiply
 800023c:	080001e1 	.word	0x080001e1

08000240 <strlen>:
 8000240:	4603      	mov	r3, r0
 8000242:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000246:	2a00      	cmp	r2, #0
 8000248:	d1fb      	bne.n	8000242 <strlen+0x2>
 800024a:	1a18      	subs	r0, r3, r0
 800024c:	3801      	subs	r0, #1
 800024e:	4770      	bx	lr

08000250 <memchr>:
 8000250:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000254:	2a10      	cmp	r2, #16
 8000256:	db2b      	blt.n	80002b0 <memchr+0x60>
 8000258:	f010 0f07 	tst.w	r0, #7
 800025c:	d008      	beq.n	8000270 <memchr+0x20>
 800025e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000262:	3a01      	subs	r2, #1
 8000264:	428b      	cmp	r3, r1
 8000266:	d02d      	beq.n	80002c4 <memchr+0x74>
 8000268:	f010 0f07 	tst.w	r0, #7
 800026c:	b342      	cbz	r2, 80002c0 <memchr+0x70>
 800026e:	d1f6      	bne.n	800025e <memchr+0xe>
 8000270:	b4f0      	push	{r4, r5, r6, r7}
 8000272:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000276:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800027a:	f022 0407 	bic.w	r4, r2, #7
 800027e:	f07f 0700 	mvns.w	r7, #0
 8000282:	2300      	movs	r3, #0
 8000284:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000288:	3c08      	subs	r4, #8
 800028a:	ea85 0501 	eor.w	r5, r5, r1
 800028e:	ea86 0601 	eor.w	r6, r6, r1
 8000292:	fa85 f547 	uadd8	r5, r5, r7
 8000296:	faa3 f587 	sel	r5, r3, r7
 800029a:	fa86 f647 	uadd8	r6, r6, r7
 800029e:	faa5 f687 	sel	r6, r5, r7
 80002a2:	b98e      	cbnz	r6, 80002c8 <memchr+0x78>
 80002a4:	d1ee      	bne.n	8000284 <memchr+0x34>
 80002a6:	bcf0      	pop	{r4, r5, r6, r7}
 80002a8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002ac:	f002 0207 	and.w	r2, r2, #7
 80002b0:	b132      	cbz	r2, 80002c0 <memchr+0x70>
 80002b2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002b6:	3a01      	subs	r2, #1
 80002b8:	ea83 0301 	eor.w	r3, r3, r1
 80002bc:	b113      	cbz	r3, 80002c4 <memchr+0x74>
 80002be:	d1f8      	bne.n	80002b2 <memchr+0x62>
 80002c0:	2000      	movs	r0, #0
 80002c2:	4770      	bx	lr
 80002c4:	3801      	subs	r0, #1
 80002c6:	4770      	bx	lr
 80002c8:	2d00      	cmp	r5, #0
 80002ca:	bf06      	itte	eq
 80002cc:	4635      	moveq	r5, r6
 80002ce:	3803      	subeq	r0, #3
 80002d0:	3807      	subne	r0, #7
 80002d2:	f015 0f01 	tst.w	r5, #1
 80002d6:	d107      	bne.n	80002e8 <memchr+0x98>
 80002d8:	3001      	adds	r0, #1
 80002da:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002de:	bf02      	ittt	eq
 80002e0:	3001      	addeq	r0, #1
 80002e2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002e6:	3001      	addeq	r0, #1
 80002e8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ea:	3801      	subs	r0, #1
 80002ec:	4770      	bx	lr
 80002ee:	bf00      	nop

080002f0 <tothepower>:
#include <stdlib.h>

extern int power(int a, int b);
extern int multiply(int a, int b);

int tothepower(int a, int b){
 80002f0:	b480      	push	{r7}
 80002f2:	b085      	sub	sp, #20
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	6078      	str	r0, [r7, #4]
 80002f8:	6039      	str	r1, [r7, #0]
	int result = 1;
 80002fa:	2301      	movs	r3, #1
 80002fc:	60fb      	str	r3, [r7, #12]
	for (int i = 0; i < b; i++){
 80002fe:	2300      	movs	r3, #0
 8000300:	60bb      	str	r3, [r7, #8]
 8000302:	e007      	b.n	8000314 <tothepower+0x24>
		result = result * a;
 8000304:	68fb      	ldr	r3, [r7, #12]
 8000306:	687a      	ldr	r2, [r7, #4]
 8000308:	fb02 f303 	mul.w	r3, r2, r3
 800030c:	60fb      	str	r3, [r7, #12]
	for (int i = 0; i < b; i++){
 800030e:	68bb      	ldr	r3, [r7, #8]
 8000310:	3301      	adds	r3, #1
 8000312:	60bb      	str	r3, [r7, #8]
 8000314:	68ba      	ldr	r2, [r7, #8]
 8000316:	683b      	ldr	r3, [r7, #0]
 8000318:	429a      	cmp	r2, r3
 800031a:	dbf3      	blt.n	8000304 <tothepower+0x14>
	}
	return result;
 800031c:	68fb      	ldr	r3, [r7, #12]
}
 800031e:	4618      	mov	r0, r3
 8000320:	3714      	adds	r7, #20
 8000322:	46bd      	mov	sp, r7
 8000324:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000328:	4770      	bx	lr
	...

0800032c <main>:

int main(void)
{
 800032c:	b580      	push	{r7, lr}
 800032e:	b088      	sub	sp, #32
 8000330:	af00      	add	r7, sp, #0
	extern void initialise_monitor_handles(void);
	initialise_monitor_handles();
 8000332:	f000 fac5 	bl	80008c0 <initialise_monitor_handles>

	int base = 2;
 8000336:	2302      	movs	r3, #2
 8000338:	613b      	str	r3, [r7, #16]
	//int exponential = 100;
	int a = 0;
 800033a:	2300      	movs	r3, #0
 800033c:	60fb      	str	r3, [r7, #12]
	int b = 0;
 800033e:	2300      	movs	r3, #0
 8000340:	60bb      	str	r3, [r7, #8]
	int result_assembly = 0;
 8000342:	2300      	movs	r3, #0
 8000344:	607b      	str	r3, [r7, #4]
	int result_c = 0;
 8000346:	2300      	movs	r3, #0
 8000348:	603b      	str	r3, [r7, #0]
	int succesful = 0;
 800034a:	2300      	movs	r3, #0
 800034c:	61fb      	str	r3, [r7, #28]
	int failed = 0;
 800034e:	2300      	movs	r3, #0
 8000350:	61bb      	str	r3, [r7, #24]

	for (int i = 0; i < 20; i++){
 8000352:	2300      	movs	r3, #0
 8000354:	617b      	str	r3, [r7, #20]
 8000356:	e034      	b.n	80003c2 <main+0x96>
		a = rand() % 5;
 8000358:	f000 fcee 	bl	8000d38 <rand>
 800035c:	4602      	mov	r2, r0
 800035e:	4b1d      	ldr	r3, [pc, #116]	; (80003d4 <main+0xa8>)
 8000360:	fb83 1302 	smull	r1, r3, r3, r2
 8000364:	1059      	asrs	r1, r3, #1
 8000366:	17d3      	asrs	r3, r2, #31
 8000368:	1ac9      	subs	r1, r1, r3
 800036a:	460b      	mov	r3, r1
 800036c:	009b      	lsls	r3, r3, #2
 800036e:	440b      	add	r3, r1
 8000370:	1ad3      	subs	r3, r2, r3
 8000372:	60fb      	str	r3, [r7, #12]
		b = rand() % 10;
 8000374:	f000 fce0 	bl	8000d38 <rand>
 8000378:	4602      	mov	r2, r0
 800037a:	4b16      	ldr	r3, [pc, #88]	; (80003d4 <main+0xa8>)
 800037c:	fb83 1302 	smull	r1, r3, r3, r2
 8000380:	1099      	asrs	r1, r3, #2
 8000382:	17d3      	asrs	r3, r2, #31
 8000384:	1ac9      	subs	r1, r1, r3
 8000386:	460b      	mov	r3, r1
 8000388:	009b      	lsls	r3, r3, #2
 800038a:	440b      	add	r3, r1
 800038c:	005b      	lsls	r3, r3, #1
 800038e:	1ad3      	subs	r3, r2, r3
 8000390:	60bb      	str	r3, [r7, #8]

		result_assembly = power(a, b);
 8000392:	68b9      	ldr	r1, [r7, #8]
 8000394:	68f8      	ldr	r0, [r7, #12]
 8000396:	f7ff ff2c 	bl	80001f2 <power>
 800039a:	6078      	str	r0, [r7, #4]
		result_c = tothepower(a, b);
 800039c:	68b9      	ldr	r1, [r7, #8]
 800039e:	68f8      	ldr	r0, [r7, #12]
 80003a0:	f7ff ffa6 	bl	80002f0 <tothepower>
 80003a4:	6038      	str	r0, [r7, #0]

		if (result_assembly == result_c){
 80003a6:	687a      	ldr	r2, [r7, #4]
 80003a8:	683b      	ldr	r3, [r7, #0]
 80003aa:	429a      	cmp	r2, r3
 80003ac:	d103      	bne.n	80003b6 <main+0x8a>
			succesful++;
 80003ae:	69fb      	ldr	r3, [r7, #28]
 80003b0:	3301      	adds	r3, #1
 80003b2:	61fb      	str	r3, [r7, #28]
 80003b4:	e002      	b.n	80003bc <main+0x90>
		}
		else{
			failed++;
 80003b6:	69bb      	ldr	r3, [r7, #24]
 80003b8:	3301      	adds	r3, #1
 80003ba:	61bb      	str	r3, [r7, #24]
	for (int i = 0; i < 20; i++){
 80003bc:	697b      	ldr	r3, [r7, #20]
 80003be:	3301      	adds	r3, #1
 80003c0:	617b      	str	r3, [r7, #20]
 80003c2:	697b      	ldr	r3, [r7, #20]
 80003c4:	2b13      	cmp	r3, #19
 80003c6:	ddc7      	ble.n	8000358 <main+0x2c>
		}
	}
    return 0;
 80003c8:	2300      	movs	r3, #0
}
 80003ca:	4618      	mov	r0, r3
 80003cc:	3720      	adds	r7, #32
 80003ce:	46bd      	mov	sp, r7
 80003d0:	bd80      	pop	{r7, pc}
 80003d2:	bf00      	nop
 80003d4:	66666667 	.word	0x66666667

080003d8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 80003d8:	f8df d030 	ldr.w	sp, [pc, #48]	; 800040c <main_has_returned+0x2>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80003dc:	480c      	ldr	r0, [pc, #48]	; (8000410 <main_has_returned+0x6>)
  ldr r1, =_edata
 80003de:	490d      	ldr	r1, [pc, #52]	; (8000414 <main_has_returned+0xa>)
  ldr r2, =_sidata
 80003e0:	4a0d      	ldr	r2, [pc, #52]	; (8000418 <main_has_returned+0xe>)
  movs r3, #0
 80003e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003e4:	e002      	b.n	80003ec <LoopCopyDataInit>

080003e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003ea:	3304      	adds	r3, #4

080003ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003f0:	d3f9      	bcc.n	80003e6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003f2:	4a0a      	ldr	r2, [pc, #40]	; (800041c <main_has_returned+0x12>)
  ldr r4, =_ebss
 80003f4:	4c0a      	ldr	r4, [pc, #40]	; (8000420 <main_has_returned+0x16>)
  movs r3, #0
 80003f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003f8:	e001      	b.n	80003fe <LoopFillZerobss>

080003fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003fc:	3204      	adds	r2, #4

080003fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000400:	d3fb      	bcc.n	80003fa <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8000402:	f000 fbd5 	bl	8000bb0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000406:	f7ff ff91 	bl	800032c <main>

0800040a <main_has_returned>:
main_has_returned:
  b  main_has_returned // endless loop
 800040a:	e7fe      	b.n	800040a <main_has_returned>
  ldr   sp, =_estack    		 /* set stack pointer */
 800040c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000410:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000414:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 8000418:	08001c24 	.word	0x08001c24
  ldr r2, =_sbss
 800041c:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 8000420:	2000014c 	.word	0x2000014c

08000424 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000424:	e7fe      	b.n	8000424 <ADC_IRQHandler>
	...

08000428 <findslot>:
 8000428:	4b0a      	ldr	r3, [pc, #40]	; (8000454 <findslot+0x2c>)
 800042a:	b510      	push	{r4, lr}
 800042c:	4604      	mov	r4, r0
 800042e:	6818      	ldr	r0, [r3, #0]
 8000430:	b118      	cbz	r0, 800043a <findslot+0x12>
 8000432:	6983      	ldr	r3, [r0, #24]
 8000434:	b90b      	cbnz	r3, 800043a <findslot+0x12>
 8000436:	f000 fb1d 	bl	8000a74 <__sinit>
 800043a:	2c13      	cmp	r4, #19
 800043c:	d807      	bhi.n	800044e <findslot+0x26>
 800043e:	4806      	ldr	r0, [pc, #24]	; (8000458 <findslot+0x30>)
 8000440:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8000444:	3201      	adds	r2, #1
 8000446:	d002      	beq.n	800044e <findslot+0x26>
 8000448:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 800044c:	bd10      	pop	{r4, pc}
 800044e:	2000      	movs	r0, #0
 8000450:	e7fc      	b.n	800044c <findslot+0x24>
 8000452:	bf00      	nop
 8000454:	2000000c 	.word	0x2000000c
 8000458:	2000009c 	.word	0x2000009c

0800045c <error>:
 800045c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800045e:	4604      	mov	r4, r0
 8000460:	f000 faaa 	bl	80009b8 <__errno>
 8000464:	2613      	movs	r6, #19
 8000466:	4605      	mov	r5, r0
 8000468:	2700      	movs	r7, #0
 800046a:	4630      	mov	r0, r6
 800046c:	4639      	mov	r1, r7
 800046e:	beab      	bkpt	0x00ab
 8000470:	4606      	mov	r6, r0
 8000472:	602e      	str	r6, [r5, #0]
 8000474:	4620      	mov	r0, r4
 8000476:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000478 <checkerror>:
 8000478:	1c43      	adds	r3, r0, #1
 800047a:	d101      	bne.n	8000480 <checkerror+0x8>
 800047c:	f7ff bfee 	b.w	800045c <error>
 8000480:	4770      	bx	lr

08000482 <_swiread>:
 8000482:	b530      	push	{r4, r5, lr}
 8000484:	b085      	sub	sp, #20
 8000486:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800048a:	9203      	str	r2, [sp, #12]
 800048c:	2406      	movs	r4, #6
 800048e:	ad01      	add	r5, sp, #4
 8000490:	4620      	mov	r0, r4
 8000492:	4629      	mov	r1, r5
 8000494:	beab      	bkpt	0x00ab
 8000496:	4604      	mov	r4, r0
 8000498:	4620      	mov	r0, r4
 800049a:	f7ff ffed 	bl	8000478 <checkerror>
 800049e:	b005      	add	sp, #20
 80004a0:	bd30      	pop	{r4, r5, pc}

080004a2 <_read>:
 80004a2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80004a4:	4615      	mov	r5, r2
 80004a6:	9101      	str	r1, [sp, #4]
 80004a8:	f7ff ffbe 	bl	8000428 <findslot>
 80004ac:	9901      	ldr	r1, [sp, #4]
 80004ae:	4604      	mov	r4, r0
 80004b0:	b938      	cbnz	r0, 80004c2 <_read+0x20>
 80004b2:	f000 fa81 	bl	80009b8 <__errno>
 80004b6:	2309      	movs	r3, #9
 80004b8:	6003      	str	r3, [r0, #0]
 80004ba:	f04f 30ff 	mov.w	r0, #4294967295
 80004be:	b003      	add	sp, #12
 80004c0:	bd30      	pop	{r4, r5, pc}
 80004c2:	6800      	ldr	r0, [r0, #0]
 80004c4:	462a      	mov	r2, r5
 80004c6:	f7ff ffdc 	bl	8000482 <_swiread>
 80004ca:	1c43      	adds	r3, r0, #1
 80004cc:	d0f7      	beq.n	80004be <_read+0x1c>
 80004ce:	6863      	ldr	r3, [r4, #4]
 80004d0:	1a2a      	subs	r2, r5, r0
 80004d2:	4413      	add	r3, r2
 80004d4:	6063      	str	r3, [r4, #4]
 80004d6:	4610      	mov	r0, r2
 80004d8:	e7f1      	b.n	80004be <_read+0x1c>

080004da <_swilseek>:
 80004da:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80004dc:	460c      	mov	r4, r1
 80004de:	4616      	mov	r6, r2
 80004e0:	f7ff ffa2 	bl	8000428 <findslot>
 80004e4:	4605      	mov	r5, r0
 80004e6:	b940      	cbnz	r0, 80004fa <_swilseek+0x20>
 80004e8:	f000 fa66 	bl	80009b8 <__errno>
 80004ec:	2309      	movs	r3, #9
 80004ee:	6003      	str	r3, [r0, #0]
 80004f0:	f04f 34ff 	mov.w	r4, #4294967295
 80004f4:	4620      	mov	r0, r4
 80004f6:	b003      	add	sp, #12
 80004f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80004fa:	2e02      	cmp	r6, #2
 80004fc:	d903      	bls.n	8000506 <_swilseek+0x2c>
 80004fe:	f000 fa5b 	bl	80009b8 <__errno>
 8000502:	2316      	movs	r3, #22
 8000504:	e7f3      	b.n	80004ee <_swilseek+0x14>
 8000506:	2e01      	cmp	r6, #1
 8000508:	d112      	bne.n	8000530 <_swilseek+0x56>
 800050a:	6843      	ldr	r3, [r0, #4]
 800050c:	18e4      	adds	r4, r4, r3
 800050e:	d4f6      	bmi.n	80004fe <_swilseek+0x24>
 8000510:	682b      	ldr	r3, [r5, #0]
 8000512:	260a      	movs	r6, #10
 8000514:	e9cd 3400 	strd	r3, r4, [sp]
 8000518:	466f      	mov	r7, sp
 800051a:	4630      	mov	r0, r6
 800051c:	4639      	mov	r1, r7
 800051e:	beab      	bkpt	0x00ab
 8000520:	4606      	mov	r6, r0
 8000522:	4630      	mov	r0, r6
 8000524:	f7ff ffa8 	bl	8000478 <checkerror>
 8000528:	2800      	cmp	r0, #0
 800052a:	dbe1      	blt.n	80004f0 <_swilseek+0x16>
 800052c:	606c      	str	r4, [r5, #4]
 800052e:	e7e1      	b.n	80004f4 <_swilseek+0x1a>
 8000530:	2e02      	cmp	r6, #2
 8000532:	d1ed      	bne.n	8000510 <_swilseek+0x36>
 8000534:	6803      	ldr	r3, [r0, #0]
 8000536:	9300      	str	r3, [sp, #0]
 8000538:	260c      	movs	r6, #12
 800053a:	466f      	mov	r7, sp
 800053c:	4630      	mov	r0, r6
 800053e:	4639      	mov	r1, r7
 8000540:	beab      	bkpt	0x00ab
 8000542:	4606      	mov	r6, r0
 8000544:	4630      	mov	r0, r6
 8000546:	f7ff ff97 	bl	8000478 <checkerror>
 800054a:	1c43      	adds	r3, r0, #1
 800054c:	d0d0      	beq.n	80004f0 <_swilseek+0x16>
 800054e:	4404      	add	r4, r0
 8000550:	e7de      	b.n	8000510 <_swilseek+0x36>

08000552 <_lseek>:
 8000552:	f7ff bfc2 	b.w	80004da <_swilseek>

08000556 <_swiwrite>:
 8000556:	b530      	push	{r4, r5, lr}
 8000558:	b085      	sub	sp, #20
 800055a:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800055e:	9203      	str	r2, [sp, #12]
 8000560:	2405      	movs	r4, #5
 8000562:	ad01      	add	r5, sp, #4
 8000564:	4620      	mov	r0, r4
 8000566:	4629      	mov	r1, r5
 8000568:	beab      	bkpt	0x00ab
 800056a:	4604      	mov	r4, r0
 800056c:	4620      	mov	r0, r4
 800056e:	f7ff ff83 	bl	8000478 <checkerror>
 8000572:	b005      	add	sp, #20
 8000574:	bd30      	pop	{r4, r5, pc}

08000576 <_write>:
 8000576:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000578:	4615      	mov	r5, r2
 800057a:	9101      	str	r1, [sp, #4]
 800057c:	f7ff ff54 	bl	8000428 <findslot>
 8000580:	9901      	ldr	r1, [sp, #4]
 8000582:	4604      	mov	r4, r0
 8000584:	b930      	cbnz	r0, 8000594 <_write+0x1e>
 8000586:	f000 fa17 	bl	80009b8 <__errno>
 800058a:	2309      	movs	r3, #9
 800058c:	6003      	str	r3, [r0, #0]
 800058e:	f04f 30ff 	mov.w	r0, #4294967295
 8000592:	e012      	b.n	80005ba <_write+0x44>
 8000594:	6800      	ldr	r0, [r0, #0]
 8000596:	462a      	mov	r2, r5
 8000598:	f7ff ffdd 	bl	8000556 <_swiwrite>
 800059c:	2800      	cmp	r0, #0
 800059e:	dbf6      	blt.n	800058e <_write+0x18>
 80005a0:	6862      	ldr	r2, [r4, #4]
 80005a2:	1a2b      	subs	r3, r5, r0
 80005a4:	441a      	add	r2, r3
 80005a6:	42a8      	cmp	r0, r5
 80005a8:	6062      	str	r2, [r4, #4]
 80005aa:	d105      	bne.n	80005b8 <_write+0x42>
 80005ac:	2000      	movs	r0, #0
 80005ae:	b003      	add	sp, #12
 80005b0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80005b4:	f7ff bf52 	b.w	800045c <error>
 80005b8:	4618      	mov	r0, r3
 80005ba:	b003      	add	sp, #12
 80005bc:	bd30      	pop	{r4, r5, pc}

080005be <_swiclose>:
 80005be:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80005c0:	2402      	movs	r4, #2
 80005c2:	9001      	str	r0, [sp, #4]
 80005c4:	ad01      	add	r5, sp, #4
 80005c6:	4620      	mov	r0, r4
 80005c8:	4629      	mov	r1, r5
 80005ca:	beab      	bkpt	0x00ab
 80005cc:	4604      	mov	r4, r0
 80005ce:	4620      	mov	r0, r4
 80005d0:	f7ff ff52 	bl	8000478 <checkerror>
 80005d4:	b003      	add	sp, #12
 80005d6:	bd30      	pop	{r4, r5, pc}

080005d8 <_close>:
 80005d8:	b538      	push	{r3, r4, r5, lr}
 80005da:	4605      	mov	r5, r0
 80005dc:	f7ff ff24 	bl	8000428 <findslot>
 80005e0:	4604      	mov	r4, r0
 80005e2:	b930      	cbnz	r0, 80005f2 <_close+0x1a>
 80005e4:	f000 f9e8 	bl	80009b8 <__errno>
 80005e8:	2309      	movs	r3, #9
 80005ea:	6003      	str	r3, [r0, #0]
 80005ec:	f04f 30ff 	mov.w	r0, #4294967295
 80005f0:	bd38      	pop	{r3, r4, r5, pc}
 80005f2:	3d01      	subs	r5, #1
 80005f4:	2d01      	cmp	r5, #1
 80005f6:	d809      	bhi.n	800060c <_close+0x34>
 80005f8:	4b09      	ldr	r3, [pc, #36]	; (8000620 <_close+0x48>)
 80005fa:	689a      	ldr	r2, [r3, #8]
 80005fc:	691b      	ldr	r3, [r3, #16]
 80005fe:	429a      	cmp	r2, r3
 8000600:	d104      	bne.n	800060c <_close+0x34>
 8000602:	f04f 33ff 	mov.w	r3, #4294967295
 8000606:	6003      	str	r3, [r0, #0]
 8000608:	2000      	movs	r0, #0
 800060a:	e7f1      	b.n	80005f0 <_close+0x18>
 800060c:	6820      	ldr	r0, [r4, #0]
 800060e:	f7ff ffd6 	bl	80005be <_swiclose>
 8000612:	2800      	cmp	r0, #0
 8000614:	d1ec      	bne.n	80005f0 <_close+0x18>
 8000616:	f04f 33ff 	mov.w	r3, #4294967295
 800061a:	6023      	str	r3, [r4, #0]
 800061c:	e7e8      	b.n	80005f0 <_close+0x18>
 800061e:	bf00      	nop
 8000620:	2000009c 	.word	0x2000009c

08000624 <_getpid>:
 8000624:	2001      	movs	r0, #1
 8000626:	4770      	bx	lr

08000628 <_sbrk>:
 8000628:	4a0d      	ldr	r2, [pc, #52]	; (8000660 <_sbrk+0x38>)
 800062a:	6811      	ldr	r1, [r2, #0]
 800062c:	b510      	push	{r4, lr}
 800062e:	4603      	mov	r3, r0
 8000630:	b909      	cbnz	r1, 8000636 <_sbrk+0xe>
 8000632:	490c      	ldr	r1, [pc, #48]	; (8000664 <_sbrk+0x3c>)
 8000634:	6011      	str	r1, [r2, #0]
 8000636:	6810      	ldr	r0, [r2, #0]
 8000638:	4669      	mov	r1, sp
 800063a:	4403      	add	r3, r0
 800063c:	428b      	cmp	r3, r1
 800063e:	d806      	bhi.n	800064e <_sbrk+0x26>
 8000640:	4909      	ldr	r1, [pc, #36]	; (8000668 <_sbrk+0x40>)
 8000642:	4c0a      	ldr	r4, [pc, #40]	; (800066c <_sbrk+0x44>)
 8000644:	6809      	ldr	r1, [r1, #0]
 8000646:	42a1      	cmp	r1, r4
 8000648:	d008      	beq.n	800065c <_sbrk+0x34>
 800064a:	428b      	cmp	r3, r1
 800064c:	d906      	bls.n	800065c <_sbrk+0x34>
 800064e:	f000 f9b3 	bl	80009b8 <__errno>
 8000652:	230c      	movs	r3, #12
 8000654:	6003      	str	r3, [r0, #0]
 8000656:	f04f 30ff 	mov.w	r0, #4294967295
 800065a:	bd10      	pop	{r4, pc}
 800065c:	6013      	str	r3, [r2, #0]
 800065e:	e7fc      	b.n	800065a <_sbrk+0x32>
 8000660:	2000008c 	.word	0x2000008c
 8000664:	20000150 	.word	0x20000150
 8000668:	20000000 	.word	0x20000000
 800066c:	cafedead 	.word	0xcafedead

08000670 <_swistat>:
 8000670:	b570      	push	{r4, r5, r6, lr}
 8000672:	460c      	mov	r4, r1
 8000674:	f7ff fed8 	bl	8000428 <findslot>
 8000678:	4605      	mov	r5, r0
 800067a:	b930      	cbnz	r0, 800068a <_swistat+0x1a>
 800067c:	f000 f99c 	bl	80009b8 <__errno>
 8000680:	2309      	movs	r3, #9
 8000682:	6003      	str	r3, [r0, #0]
 8000684:	f04f 30ff 	mov.w	r0, #4294967295
 8000688:	bd70      	pop	{r4, r5, r6, pc}
 800068a:	6863      	ldr	r3, [r4, #4]
 800068c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000690:	6063      	str	r3, [r4, #4]
 8000692:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000696:	64a3      	str	r3, [r4, #72]	; 0x48
 8000698:	260c      	movs	r6, #12
 800069a:	4630      	mov	r0, r6
 800069c:	4629      	mov	r1, r5
 800069e:	beab      	bkpt	0x00ab
 80006a0:	4605      	mov	r5, r0
 80006a2:	4628      	mov	r0, r5
 80006a4:	f7ff fee8 	bl	8000478 <checkerror>
 80006a8:	1c43      	adds	r3, r0, #1
 80006aa:	bf1c      	itt	ne
 80006ac:	6120      	strne	r0, [r4, #16]
 80006ae:	2000      	movne	r0, #0
 80006b0:	e7ea      	b.n	8000688 <_swistat+0x18>

080006b2 <_fstat>:
 80006b2:	460b      	mov	r3, r1
 80006b4:	b510      	push	{r4, lr}
 80006b6:	2100      	movs	r1, #0
 80006b8:	4604      	mov	r4, r0
 80006ba:	2258      	movs	r2, #88	; 0x58
 80006bc:	4618      	mov	r0, r3
 80006be:	f000 fa9e 	bl	8000bfe <memset>
 80006c2:	4601      	mov	r1, r0
 80006c4:	4620      	mov	r0, r4
 80006c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006ca:	f7ff bfd1 	b.w	8000670 <_swistat>

080006ce <_stat>:
 80006ce:	b538      	push	{r3, r4, r5, lr}
 80006d0:	460d      	mov	r5, r1
 80006d2:	4604      	mov	r4, r0
 80006d4:	2258      	movs	r2, #88	; 0x58
 80006d6:	2100      	movs	r1, #0
 80006d8:	4628      	mov	r0, r5
 80006da:	f000 fa90 	bl	8000bfe <memset>
 80006de:	4620      	mov	r0, r4
 80006e0:	2100      	movs	r1, #0
 80006e2:	f000 f811 	bl	8000708 <_swiopen>
 80006e6:	1c43      	adds	r3, r0, #1
 80006e8:	4604      	mov	r4, r0
 80006ea:	d00b      	beq.n	8000704 <_stat+0x36>
 80006ec:	686b      	ldr	r3, [r5, #4]
 80006ee:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 80006f2:	606b      	str	r3, [r5, #4]
 80006f4:	4629      	mov	r1, r5
 80006f6:	f7ff ffbb 	bl	8000670 <_swistat>
 80006fa:	4605      	mov	r5, r0
 80006fc:	4620      	mov	r0, r4
 80006fe:	f7ff ff6b 	bl	80005d8 <_close>
 8000702:	462c      	mov	r4, r5
 8000704:	4620      	mov	r0, r4
 8000706:	bd38      	pop	{r3, r4, r5, pc}

08000708 <_swiopen>:
 8000708:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800070c:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80007b8 <_swiopen+0xb0>
 8000710:	b097      	sub	sp, #92	; 0x5c
 8000712:	4607      	mov	r7, r0
 8000714:	460e      	mov	r6, r1
 8000716:	2500      	movs	r5, #0
 8000718:	f858 4035 	ldr.w	r4, [r8, r5, lsl #3]
 800071c:	1c61      	adds	r1, r4, #1
 800071e:	d037      	beq.n	8000790 <_swiopen+0x88>
 8000720:	3501      	adds	r5, #1
 8000722:	2d14      	cmp	r5, #20
 8000724:	d1f8      	bne.n	8000718 <_swiopen+0x10>
 8000726:	f000 f947 	bl	80009b8 <__errno>
 800072a:	2318      	movs	r3, #24
 800072c:	6003      	str	r3, [r0, #0]
 800072e:	f04f 34ff 	mov.w	r4, #4294967295
 8000732:	e03d      	b.n	80007b0 <_swiopen+0xa8>
 8000734:	f3c6 4400 	ubfx	r4, r6, #16, #1
 8000738:	f240 6301 	movw	r3, #1537	; 0x601
 800073c:	07b2      	lsls	r2, r6, #30
 800073e:	bf48      	it	mi
 8000740:	f044 0402 	orrmi.w	r4, r4, #2
 8000744:	421e      	tst	r6, r3
 8000746:	bf18      	it	ne
 8000748:	f044 0404 	orrne.w	r4, r4, #4
 800074c:	0733      	lsls	r3, r6, #28
 800074e:	bf48      	it	mi
 8000750:	f024 0404 	bicmi.w	r4, r4, #4
 8000754:	4638      	mov	r0, r7
 8000756:	bf48      	it	mi
 8000758:	f044 0408 	orrmi.w	r4, r4, #8
 800075c:	9700      	str	r7, [sp, #0]
 800075e:	f7ff fd6f 	bl	8000240 <strlen>
 8000762:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8000766:	2401      	movs	r4, #1
 8000768:	4620      	mov	r0, r4
 800076a:	4649      	mov	r1, r9
 800076c:	beab      	bkpt	0x00ab
 800076e:	4604      	mov	r4, r0
 8000770:	2c00      	cmp	r4, #0
 8000772:	db08      	blt.n	8000786 <_swiopen+0x7e>
 8000774:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 8000778:	eb08 08c5 	add.w	r8, r8, r5, lsl #3
 800077c:	2300      	movs	r3, #0
 800077e:	f8c8 3004 	str.w	r3, [r8, #4]
 8000782:	462c      	mov	r4, r5
 8000784:	e014      	b.n	80007b0 <_swiopen+0xa8>
 8000786:	4620      	mov	r0, r4
 8000788:	f7ff fe68 	bl	800045c <error>
 800078c:	4604      	mov	r4, r0
 800078e:	e00f      	b.n	80007b0 <_swiopen+0xa8>
 8000790:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 8000794:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8000798:	46e9      	mov	r9, sp
 800079a:	d1cb      	bne.n	8000734 <_swiopen+0x2c>
 800079c:	4649      	mov	r1, r9
 800079e:	4638      	mov	r0, r7
 80007a0:	f7ff ff95 	bl	80006ce <_stat>
 80007a4:	3001      	adds	r0, #1
 80007a6:	d0c5      	beq.n	8000734 <_swiopen+0x2c>
 80007a8:	f000 f906 	bl	80009b8 <__errno>
 80007ac:	2311      	movs	r3, #17
 80007ae:	6003      	str	r3, [r0, #0]
 80007b0:	4620      	mov	r0, r4
 80007b2:	b017      	add	sp, #92	; 0x5c
 80007b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80007b8:	2000009c 	.word	0x2000009c

080007bc <_get_semihosting_exts>:
 80007bc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80007c0:	4606      	mov	r6, r0
 80007c2:	460f      	mov	r7, r1
 80007c4:	482a      	ldr	r0, [pc, #168]	; (8000870 <_get_semihosting_exts+0xb4>)
 80007c6:	2100      	movs	r1, #0
 80007c8:	4615      	mov	r5, r2
 80007ca:	f7ff ff9d 	bl	8000708 <_swiopen>
 80007ce:	462a      	mov	r2, r5
 80007d0:	4604      	mov	r4, r0
 80007d2:	2100      	movs	r1, #0
 80007d4:	4630      	mov	r0, r6
 80007d6:	f000 fa12 	bl	8000bfe <memset>
 80007da:	1c63      	adds	r3, r4, #1
 80007dc:	d016      	beq.n	800080c <_get_semihosting_exts+0x50>
 80007de:	4620      	mov	r0, r4
 80007e0:	f7ff fe22 	bl	8000428 <findslot>
 80007e4:	f04f 090c 	mov.w	r9, #12
 80007e8:	4680      	mov	r8, r0
 80007ea:	4648      	mov	r0, r9
 80007ec:	4641      	mov	r1, r8
 80007ee:	beab      	bkpt	0x00ab
 80007f0:	4680      	mov	r8, r0
 80007f2:	4640      	mov	r0, r8
 80007f4:	f7ff fe40 	bl	8000478 <checkerror>
 80007f8:	2803      	cmp	r0, #3
 80007fa:	dd02      	ble.n	8000802 <_get_semihosting_exts+0x46>
 80007fc:	1ec3      	subs	r3, r0, #3
 80007fe:	42ab      	cmp	r3, r5
 8000800:	dc08      	bgt.n	8000814 <_get_semihosting_exts+0x58>
 8000802:	4620      	mov	r0, r4
 8000804:	f7ff fee8 	bl	80005d8 <_close>
 8000808:	f04f 34ff 	mov.w	r4, #4294967295
 800080c:	4620      	mov	r0, r4
 800080e:	b003      	add	sp, #12
 8000810:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000814:	2204      	movs	r2, #4
 8000816:	eb0d 0102 	add.w	r1, sp, r2
 800081a:	4620      	mov	r0, r4
 800081c:	f7ff fe41 	bl	80004a2 <_read>
 8000820:	2803      	cmp	r0, #3
 8000822:	ddee      	ble.n	8000802 <_get_semihosting_exts+0x46>
 8000824:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000828:	2b53      	cmp	r3, #83	; 0x53
 800082a:	d1ea      	bne.n	8000802 <_get_semihosting_exts+0x46>
 800082c:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8000830:	2b48      	cmp	r3, #72	; 0x48
 8000832:	d1e6      	bne.n	8000802 <_get_semihosting_exts+0x46>
 8000834:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8000838:	2b46      	cmp	r3, #70	; 0x46
 800083a:	d1e2      	bne.n	8000802 <_get_semihosting_exts+0x46>
 800083c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8000840:	2b42      	cmp	r3, #66	; 0x42
 8000842:	d1de      	bne.n	8000802 <_get_semihosting_exts+0x46>
 8000844:	2201      	movs	r2, #1
 8000846:	4639      	mov	r1, r7
 8000848:	4620      	mov	r0, r4
 800084a:	f7ff fe46 	bl	80004da <_swilseek>
 800084e:	2800      	cmp	r0, #0
 8000850:	dbd7      	blt.n	8000802 <_get_semihosting_exts+0x46>
 8000852:	462a      	mov	r2, r5
 8000854:	4631      	mov	r1, r6
 8000856:	4620      	mov	r0, r4
 8000858:	f7ff fe23 	bl	80004a2 <_read>
 800085c:	4605      	mov	r5, r0
 800085e:	4620      	mov	r0, r4
 8000860:	f7ff feba 	bl	80005d8 <_close>
 8000864:	4628      	mov	r0, r5
 8000866:	f7ff fe07 	bl	8000478 <checkerror>
 800086a:	4604      	mov	r4, r0
 800086c:	e7ce      	b.n	800080c <_get_semihosting_exts+0x50>
 800086e:	bf00      	nop
 8000870:	08001ab8 	.word	0x08001ab8

08000874 <initialise_semihosting_exts>:
 8000874:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000876:	4d0a      	ldr	r5, [pc, #40]	; (80008a0 <initialise_semihosting_exts+0x2c>)
 8000878:	4c0a      	ldr	r4, [pc, #40]	; (80008a4 <initialise_semihosting_exts+0x30>)
 800087a:	2100      	movs	r1, #0
 800087c:	2201      	movs	r2, #1
 800087e:	a801      	add	r0, sp, #4
 8000880:	6029      	str	r1, [r5, #0]
 8000882:	6022      	str	r2, [r4, #0]
 8000884:	f7ff ff9a 	bl	80007bc <_get_semihosting_exts>
 8000888:	2800      	cmp	r0, #0
 800088a:	dd07      	ble.n	800089c <initialise_semihosting_exts+0x28>
 800088c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000890:	f003 0201 	and.w	r2, r3, #1
 8000894:	f003 0302 	and.w	r3, r3, #2
 8000898:	602a      	str	r2, [r5, #0]
 800089a:	6023      	str	r3, [r4, #0]
 800089c:	b003      	add	sp, #12
 800089e:	bd30      	pop	{r4, r5, pc}
 80008a0:	20000004 	.word	0x20000004
 80008a4:	20000008 	.word	0x20000008

080008a8 <_has_ext_stdout_stderr>:
 80008a8:	b510      	push	{r4, lr}
 80008aa:	4c04      	ldr	r4, [pc, #16]	; (80008bc <_has_ext_stdout_stderr+0x14>)
 80008ac:	6823      	ldr	r3, [r4, #0]
 80008ae:	2b00      	cmp	r3, #0
 80008b0:	da01      	bge.n	80008b6 <_has_ext_stdout_stderr+0xe>
 80008b2:	f7ff ffdf 	bl	8000874 <initialise_semihosting_exts>
 80008b6:	6820      	ldr	r0, [r4, #0]
 80008b8:	bd10      	pop	{r4, pc}
 80008ba:	bf00      	nop
 80008bc:	20000008 	.word	0x20000008

080008c0 <initialise_monitor_handles>:
 80008c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80008c4:	b085      	sub	sp, #20
 80008c6:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8000978 <initialise_monitor_handles+0xb8>
 80008ca:	f8cd 9004 	str.w	r9, [sp, #4]
 80008ce:	2303      	movs	r3, #3
 80008d0:	2400      	movs	r4, #0
 80008d2:	9303      	str	r3, [sp, #12]
 80008d4:	af01      	add	r7, sp, #4
 80008d6:	9402      	str	r4, [sp, #8]
 80008d8:	2501      	movs	r5, #1
 80008da:	4628      	mov	r0, r5
 80008dc:	4639      	mov	r1, r7
 80008de:	beab      	bkpt	0x00ab
 80008e0:	4605      	mov	r5, r0
 80008e2:	f8df 8098 	ldr.w	r8, [pc, #152]	; 800097c <initialise_monitor_handles+0xbc>
 80008e6:	4623      	mov	r3, r4
 80008e8:	4c20      	ldr	r4, [pc, #128]	; (800096c <initialise_monitor_handles+0xac>)
 80008ea:	f8c8 5000 	str.w	r5, [r8]
 80008ee:	f04f 32ff 	mov.w	r2, #4294967295
 80008f2:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
 80008f6:	3301      	adds	r3, #1
 80008f8:	2b14      	cmp	r3, #20
 80008fa:	d1fa      	bne.n	80008f2 <initialise_monitor_handles+0x32>
 80008fc:	f7ff ffd4 	bl	80008a8 <_has_ext_stdout_stderr>
 8000900:	4d1b      	ldr	r5, [pc, #108]	; (8000970 <initialise_monitor_handles+0xb0>)
 8000902:	b1d0      	cbz	r0, 800093a <initialise_monitor_handles+0x7a>
 8000904:	f04f 0a03 	mov.w	sl, #3
 8000908:	2304      	movs	r3, #4
 800090a:	f8cd 9004 	str.w	r9, [sp, #4]
 800090e:	2601      	movs	r6, #1
 8000910:	f8cd a00c 	str.w	sl, [sp, #12]
 8000914:	9302      	str	r3, [sp, #8]
 8000916:	4630      	mov	r0, r6
 8000918:	4639      	mov	r1, r7
 800091a:	beab      	bkpt	0x00ab
 800091c:	4683      	mov	fp, r0
 800091e:	4b15      	ldr	r3, [pc, #84]	; (8000974 <initialise_monitor_handles+0xb4>)
 8000920:	f8cd 9004 	str.w	r9, [sp, #4]
 8000924:	f8c3 b000 	str.w	fp, [r3]
 8000928:	2308      	movs	r3, #8
 800092a:	f8cd a00c 	str.w	sl, [sp, #12]
 800092e:	9302      	str	r3, [sp, #8]
 8000930:	4630      	mov	r0, r6
 8000932:	4639      	mov	r1, r7
 8000934:	beab      	bkpt	0x00ab
 8000936:	4606      	mov	r6, r0
 8000938:	602e      	str	r6, [r5, #0]
 800093a:	682b      	ldr	r3, [r5, #0]
 800093c:	3301      	adds	r3, #1
 800093e:	bf02      	ittt	eq
 8000940:	4b0c      	ldreq	r3, [pc, #48]	; (8000974 <initialise_monitor_handles+0xb4>)
 8000942:	681b      	ldreq	r3, [r3, #0]
 8000944:	602b      	streq	r3, [r5, #0]
 8000946:	2600      	movs	r6, #0
 8000948:	f8d8 3000 	ldr.w	r3, [r8]
 800094c:	6023      	str	r3, [r4, #0]
 800094e:	6066      	str	r6, [r4, #4]
 8000950:	f7ff ffaa 	bl	80008a8 <_has_ext_stdout_stderr>
 8000954:	b130      	cbz	r0, 8000964 <initialise_monitor_handles+0xa4>
 8000956:	4b07      	ldr	r3, [pc, #28]	; (8000974 <initialise_monitor_handles+0xb4>)
 8000958:	681b      	ldr	r3, [r3, #0]
 800095a:	e9c4 3602 	strd	r3, r6, [r4, #8]
 800095e:	682b      	ldr	r3, [r5, #0]
 8000960:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8000964:	b005      	add	sp, #20
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	bf00      	nop
 800096c:	2000009c 	.word	0x2000009c
 8000970:	20000090 	.word	0x20000090
 8000974:	20000098 	.word	0x20000098
 8000978:	08001ace 	.word	0x08001ace
 800097c:	20000094 	.word	0x20000094

08000980 <_isatty>:
 8000980:	b570      	push	{r4, r5, r6, lr}
 8000982:	f7ff fd51 	bl	8000428 <findslot>
 8000986:	2509      	movs	r5, #9
 8000988:	4604      	mov	r4, r0
 800098a:	b920      	cbnz	r0, 8000996 <_isatty+0x16>
 800098c:	f000 f814 	bl	80009b8 <__errno>
 8000990:	6005      	str	r5, [r0, #0]
 8000992:	4620      	mov	r0, r4
 8000994:	bd70      	pop	{r4, r5, r6, pc}
 8000996:	4628      	mov	r0, r5
 8000998:	4621      	mov	r1, r4
 800099a:	beab      	bkpt	0x00ab
 800099c:	4604      	mov	r4, r0
 800099e:	2c01      	cmp	r4, #1
 80009a0:	d0f7      	beq.n	8000992 <_isatty+0x12>
 80009a2:	f000 f809 	bl	80009b8 <__errno>
 80009a6:	2400      	movs	r4, #0
 80009a8:	4605      	mov	r5, r0
 80009aa:	2613      	movs	r6, #19
 80009ac:	4630      	mov	r0, r6
 80009ae:	4621      	mov	r1, r4
 80009b0:	beab      	bkpt	0x00ab
 80009b2:	4606      	mov	r6, r0
 80009b4:	602e      	str	r6, [r5, #0]
 80009b6:	e7ec      	b.n	8000992 <_isatty+0x12>

080009b8 <__errno>:
 80009b8:	4b01      	ldr	r3, [pc, #4]	; (80009c0 <__errno+0x8>)
 80009ba:	6818      	ldr	r0, [r3, #0]
 80009bc:	4770      	bx	lr
 80009be:	bf00      	nop
 80009c0:	2000000c 	.word	0x2000000c

080009c4 <std>:
 80009c4:	2300      	movs	r3, #0
 80009c6:	b510      	push	{r4, lr}
 80009c8:	4604      	mov	r4, r0
 80009ca:	e9c0 3300 	strd	r3, r3, [r0]
 80009ce:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80009d2:	6083      	str	r3, [r0, #8]
 80009d4:	8181      	strh	r1, [r0, #12]
 80009d6:	6643      	str	r3, [r0, #100]	; 0x64
 80009d8:	81c2      	strh	r2, [r0, #14]
 80009da:	6183      	str	r3, [r0, #24]
 80009dc:	4619      	mov	r1, r3
 80009de:	2208      	movs	r2, #8
 80009e0:	305c      	adds	r0, #92	; 0x5c
 80009e2:	f000 f90c 	bl	8000bfe <memset>
 80009e6:	4b05      	ldr	r3, [pc, #20]	; (80009fc <std+0x38>)
 80009e8:	6263      	str	r3, [r4, #36]	; 0x24
 80009ea:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <std+0x3c>)
 80009ec:	62a3      	str	r3, [r4, #40]	; 0x28
 80009ee:	4b05      	ldr	r3, [pc, #20]	; (8000a04 <std+0x40>)
 80009f0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80009f2:	4b05      	ldr	r3, [pc, #20]	; (8000a08 <std+0x44>)
 80009f4:	6224      	str	r4, [r4, #32]
 80009f6:	6323      	str	r3, [r4, #48]	; 0x30
 80009f8:	bd10      	pop	{r4, pc}
 80009fa:	bf00      	nop
 80009fc:	08000dd5 	.word	0x08000dd5
 8000a00:	08000df7 	.word	0x08000df7
 8000a04:	08000e2f 	.word	0x08000e2f
 8000a08:	08000e53 	.word	0x08000e53

08000a0c <_cleanup_r>:
 8000a0c:	4901      	ldr	r1, [pc, #4]	; (8000a14 <_cleanup_r+0x8>)
 8000a0e:	f000 b8af 	b.w	8000b70 <_fwalk_reent>
 8000a12:	bf00      	nop
 8000a14:	08000fe9 	.word	0x08000fe9

08000a18 <__sfmoreglue>:
 8000a18:	b570      	push	{r4, r5, r6, lr}
 8000a1a:	2268      	movs	r2, #104	; 0x68
 8000a1c:	1e4d      	subs	r5, r1, #1
 8000a1e:	4355      	muls	r5, r2
 8000a20:	460e      	mov	r6, r1
 8000a22:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a26:	f000 f913 	bl	8000c50 <_malloc_r>
 8000a2a:	4604      	mov	r4, r0
 8000a2c:	b140      	cbz	r0, 8000a40 <__sfmoreglue+0x28>
 8000a2e:	2100      	movs	r1, #0
 8000a30:	e9c0 1600 	strd	r1, r6, [r0]
 8000a34:	300c      	adds	r0, #12
 8000a36:	60a0      	str	r0, [r4, #8]
 8000a38:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a3c:	f000 f8df 	bl	8000bfe <memset>
 8000a40:	4620      	mov	r0, r4
 8000a42:	bd70      	pop	{r4, r5, r6, pc}

08000a44 <__sfp_lock_acquire>:
 8000a44:	4801      	ldr	r0, [pc, #4]	; (8000a4c <__sfp_lock_acquire+0x8>)
 8000a46:	f000 b8d8 	b.w	8000bfa <__retarget_lock_acquire_recursive>
 8000a4a:	bf00      	nop
 8000a4c:	2000013d 	.word	0x2000013d

08000a50 <__sfp_lock_release>:
 8000a50:	4801      	ldr	r0, [pc, #4]	; (8000a58 <__sfp_lock_release+0x8>)
 8000a52:	f000 b8d3 	b.w	8000bfc <__retarget_lock_release_recursive>
 8000a56:	bf00      	nop
 8000a58:	2000013d 	.word	0x2000013d

08000a5c <__sinit_lock_acquire>:
 8000a5c:	4801      	ldr	r0, [pc, #4]	; (8000a64 <__sinit_lock_acquire+0x8>)
 8000a5e:	f000 b8cc 	b.w	8000bfa <__retarget_lock_acquire_recursive>
 8000a62:	bf00      	nop
 8000a64:	2000013e 	.word	0x2000013e

08000a68 <__sinit_lock_release>:
 8000a68:	4801      	ldr	r0, [pc, #4]	; (8000a70 <__sinit_lock_release+0x8>)
 8000a6a:	f000 b8c7 	b.w	8000bfc <__retarget_lock_release_recursive>
 8000a6e:	bf00      	nop
 8000a70:	2000013e 	.word	0x2000013e

08000a74 <__sinit>:
 8000a74:	b510      	push	{r4, lr}
 8000a76:	4604      	mov	r4, r0
 8000a78:	f7ff fff0 	bl	8000a5c <__sinit_lock_acquire>
 8000a7c:	69a3      	ldr	r3, [r4, #24]
 8000a7e:	b11b      	cbz	r3, 8000a88 <__sinit+0x14>
 8000a80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000a84:	f7ff bff0 	b.w	8000a68 <__sinit_lock_release>
 8000a88:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000a8c:	6523      	str	r3, [r4, #80]	; 0x50
 8000a8e:	4b13      	ldr	r3, [pc, #76]	; (8000adc <__sinit+0x68>)
 8000a90:	4a13      	ldr	r2, [pc, #76]	; (8000ae0 <__sinit+0x6c>)
 8000a92:	681b      	ldr	r3, [r3, #0]
 8000a94:	62a2      	str	r2, [r4, #40]	; 0x28
 8000a96:	42a3      	cmp	r3, r4
 8000a98:	bf04      	itt	eq
 8000a9a:	2301      	moveq	r3, #1
 8000a9c:	61a3      	streq	r3, [r4, #24]
 8000a9e:	4620      	mov	r0, r4
 8000aa0:	f000 f820 	bl	8000ae4 <__sfp>
 8000aa4:	6060      	str	r0, [r4, #4]
 8000aa6:	4620      	mov	r0, r4
 8000aa8:	f000 f81c 	bl	8000ae4 <__sfp>
 8000aac:	60a0      	str	r0, [r4, #8]
 8000aae:	4620      	mov	r0, r4
 8000ab0:	f000 f818 	bl	8000ae4 <__sfp>
 8000ab4:	2200      	movs	r2, #0
 8000ab6:	60e0      	str	r0, [r4, #12]
 8000ab8:	2104      	movs	r1, #4
 8000aba:	6860      	ldr	r0, [r4, #4]
 8000abc:	f7ff ff82 	bl	80009c4 <std>
 8000ac0:	68a0      	ldr	r0, [r4, #8]
 8000ac2:	2201      	movs	r2, #1
 8000ac4:	2109      	movs	r1, #9
 8000ac6:	f7ff ff7d 	bl	80009c4 <std>
 8000aca:	68e0      	ldr	r0, [r4, #12]
 8000acc:	2202      	movs	r2, #2
 8000ace:	2112      	movs	r1, #18
 8000ad0:	f7ff ff78 	bl	80009c4 <std>
 8000ad4:	2301      	movs	r3, #1
 8000ad6:	61a3      	str	r3, [r4, #24]
 8000ad8:	e7d2      	b.n	8000a80 <__sinit+0xc>
 8000ada:	bf00      	nop
 8000adc:	08001b34 	.word	0x08001b34
 8000ae0:	08000a0d 	.word	0x08000a0d

08000ae4 <__sfp>:
 8000ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ae6:	4607      	mov	r7, r0
 8000ae8:	f7ff ffac 	bl	8000a44 <__sfp_lock_acquire>
 8000aec:	4b1e      	ldr	r3, [pc, #120]	; (8000b68 <__sfp+0x84>)
 8000aee:	681e      	ldr	r6, [r3, #0]
 8000af0:	69b3      	ldr	r3, [r6, #24]
 8000af2:	b913      	cbnz	r3, 8000afa <__sfp+0x16>
 8000af4:	4630      	mov	r0, r6
 8000af6:	f7ff ffbd 	bl	8000a74 <__sinit>
 8000afa:	3648      	adds	r6, #72	; 0x48
 8000afc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b00:	3b01      	subs	r3, #1
 8000b02:	d503      	bpl.n	8000b0c <__sfp+0x28>
 8000b04:	6833      	ldr	r3, [r6, #0]
 8000b06:	b30b      	cbz	r3, 8000b4c <__sfp+0x68>
 8000b08:	6836      	ldr	r6, [r6, #0]
 8000b0a:	e7f7      	b.n	8000afc <__sfp+0x18>
 8000b0c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b10:	b9d5      	cbnz	r5, 8000b48 <__sfp+0x64>
 8000b12:	4b16      	ldr	r3, [pc, #88]	; (8000b6c <__sfp+0x88>)
 8000b14:	60e3      	str	r3, [r4, #12]
 8000b16:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000b1a:	6665      	str	r5, [r4, #100]	; 0x64
 8000b1c:	f000 f86c 	bl	8000bf8 <__retarget_lock_init_recursive>
 8000b20:	f7ff ff96 	bl	8000a50 <__sfp_lock_release>
 8000b24:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000b28:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000b2c:	6025      	str	r5, [r4, #0]
 8000b2e:	61a5      	str	r5, [r4, #24]
 8000b30:	2208      	movs	r2, #8
 8000b32:	4629      	mov	r1, r5
 8000b34:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b38:	f000 f861 	bl	8000bfe <memset>
 8000b3c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b40:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b44:	4620      	mov	r0, r4
 8000b46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b48:	3468      	adds	r4, #104	; 0x68
 8000b4a:	e7d9      	b.n	8000b00 <__sfp+0x1c>
 8000b4c:	2104      	movs	r1, #4
 8000b4e:	4638      	mov	r0, r7
 8000b50:	f7ff ff62 	bl	8000a18 <__sfmoreglue>
 8000b54:	4604      	mov	r4, r0
 8000b56:	6030      	str	r0, [r6, #0]
 8000b58:	2800      	cmp	r0, #0
 8000b5a:	d1d5      	bne.n	8000b08 <__sfp+0x24>
 8000b5c:	f7ff ff78 	bl	8000a50 <__sfp_lock_release>
 8000b60:	230c      	movs	r3, #12
 8000b62:	603b      	str	r3, [r7, #0]
 8000b64:	e7ee      	b.n	8000b44 <__sfp+0x60>
 8000b66:	bf00      	nop
 8000b68:	08001b34 	.word	0x08001b34
 8000b6c:	ffff0001 	.word	0xffff0001

08000b70 <_fwalk_reent>:
 8000b70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b74:	4606      	mov	r6, r0
 8000b76:	4688      	mov	r8, r1
 8000b78:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b7c:	2700      	movs	r7, #0
 8000b7e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000b82:	f1b9 0901 	subs.w	r9, r9, #1
 8000b86:	d505      	bpl.n	8000b94 <_fwalk_reent+0x24>
 8000b88:	6824      	ldr	r4, [r4, #0]
 8000b8a:	2c00      	cmp	r4, #0
 8000b8c:	d1f7      	bne.n	8000b7e <_fwalk_reent+0xe>
 8000b8e:	4638      	mov	r0, r7
 8000b90:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b94:	89ab      	ldrh	r3, [r5, #12]
 8000b96:	2b01      	cmp	r3, #1
 8000b98:	d907      	bls.n	8000baa <_fwalk_reent+0x3a>
 8000b9a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000b9e:	3301      	adds	r3, #1
 8000ba0:	d003      	beq.n	8000baa <_fwalk_reent+0x3a>
 8000ba2:	4629      	mov	r1, r5
 8000ba4:	4630      	mov	r0, r6
 8000ba6:	47c0      	blx	r8
 8000ba8:	4307      	orrs	r7, r0
 8000baa:	3568      	adds	r5, #104	; 0x68
 8000bac:	e7e9      	b.n	8000b82 <_fwalk_reent+0x12>
	...

08000bb0 <__libc_init_array>:
 8000bb0:	b570      	push	{r4, r5, r6, lr}
 8000bb2:	4d0d      	ldr	r5, [pc, #52]	; (8000be8 <__libc_init_array+0x38>)
 8000bb4:	4c0d      	ldr	r4, [pc, #52]	; (8000bec <__libc_init_array+0x3c>)
 8000bb6:	1b64      	subs	r4, r4, r5
 8000bb8:	10a4      	asrs	r4, r4, #2
 8000bba:	2600      	movs	r6, #0
 8000bbc:	42a6      	cmp	r6, r4
 8000bbe:	d109      	bne.n	8000bd4 <__libc_init_array+0x24>
 8000bc0:	4d0b      	ldr	r5, [pc, #44]	; (8000bf0 <__libc_init_array+0x40>)
 8000bc2:	4c0c      	ldr	r4, [pc, #48]	; (8000bf4 <__libc_init_array+0x44>)
 8000bc4:	f000 ff6c 	bl	8001aa0 <_init>
 8000bc8:	1b64      	subs	r4, r4, r5
 8000bca:	10a4      	asrs	r4, r4, #2
 8000bcc:	2600      	movs	r6, #0
 8000bce:	42a6      	cmp	r6, r4
 8000bd0:	d105      	bne.n	8000bde <__libc_init_array+0x2e>
 8000bd2:	bd70      	pop	{r4, r5, r6, pc}
 8000bd4:	f855 3b04 	ldr.w	r3, [r5], #4
 8000bd8:	4798      	blx	r3
 8000bda:	3601      	adds	r6, #1
 8000bdc:	e7ee      	b.n	8000bbc <__libc_init_array+0xc>
 8000bde:	f855 3b04 	ldr.w	r3, [r5], #4
 8000be2:	4798      	blx	r3
 8000be4:	3601      	adds	r6, #1
 8000be6:	e7f2      	b.n	8000bce <__libc_init_array+0x1e>
 8000be8:	08001c1c 	.word	0x08001c1c
 8000bec:	08001c1c 	.word	0x08001c1c
 8000bf0:	08001c1c 	.word	0x08001c1c
 8000bf4:	08001c20 	.word	0x08001c20

08000bf8 <__retarget_lock_init_recursive>:
 8000bf8:	4770      	bx	lr

08000bfa <__retarget_lock_acquire_recursive>:
 8000bfa:	4770      	bx	lr

08000bfc <__retarget_lock_release_recursive>:
 8000bfc:	4770      	bx	lr

08000bfe <memset>:
 8000bfe:	4402      	add	r2, r0
 8000c00:	4603      	mov	r3, r0
 8000c02:	4293      	cmp	r3, r2
 8000c04:	d100      	bne.n	8000c08 <memset+0xa>
 8000c06:	4770      	bx	lr
 8000c08:	f803 1b01 	strb.w	r1, [r3], #1
 8000c0c:	e7f9      	b.n	8000c02 <memset+0x4>
	...

08000c10 <sbrk_aligned>:
 8000c10:	b570      	push	{r4, r5, r6, lr}
 8000c12:	4e0e      	ldr	r6, [pc, #56]	; (8000c4c <sbrk_aligned+0x3c>)
 8000c14:	460c      	mov	r4, r1
 8000c16:	6831      	ldr	r1, [r6, #0]
 8000c18:	4605      	mov	r5, r0
 8000c1a:	b911      	cbnz	r1, 8000c22 <sbrk_aligned+0x12>
 8000c1c:	f000 f8ca 	bl	8000db4 <_sbrk_r>
 8000c20:	6030      	str	r0, [r6, #0]
 8000c22:	4621      	mov	r1, r4
 8000c24:	4628      	mov	r0, r5
 8000c26:	f000 f8c5 	bl	8000db4 <_sbrk_r>
 8000c2a:	1c43      	adds	r3, r0, #1
 8000c2c:	d00a      	beq.n	8000c44 <sbrk_aligned+0x34>
 8000c2e:	1cc4      	adds	r4, r0, #3
 8000c30:	f024 0403 	bic.w	r4, r4, #3
 8000c34:	42a0      	cmp	r0, r4
 8000c36:	d007      	beq.n	8000c48 <sbrk_aligned+0x38>
 8000c38:	1a21      	subs	r1, r4, r0
 8000c3a:	4628      	mov	r0, r5
 8000c3c:	f000 f8ba 	bl	8000db4 <_sbrk_r>
 8000c40:	3001      	adds	r0, #1
 8000c42:	d101      	bne.n	8000c48 <sbrk_aligned+0x38>
 8000c44:	f04f 34ff 	mov.w	r4, #4294967295
 8000c48:	4620      	mov	r0, r4
 8000c4a:	bd70      	pop	{r4, r5, r6, pc}
 8000c4c:	20000144 	.word	0x20000144

08000c50 <_malloc_r>:
 8000c50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c54:	1ccd      	adds	r5, r1, #3
 8000c56:	f025 0503 	bic.w	r5, r5, #3
 8000c5a:	3508      	adds	r5, #8
 8000c5c:	2d0c      	cmp	r5, #12
 8000c5e:	bf38      	it	cc
 8000c60:	250c      	movcc	r5, #12
 8000c62:	2d00      	cmp	r5, #0
 8000c64:	4607      	mov	r7, r0
 8000c66:	db01      	blt.n	8000c6c <_malloc_r+0x1c>
 8000c68:	42a9      	cmp	r1, r5
 8000c6a:	d905      	bls.n	8000c78 <_malloc_r+0x28>
 8000c6c:	230c      	movs	r3, #12
 8000c6e:	603b      	str	r3, [r7, #0]
 8000c70:	2600      	movs	r6, #0
 8000c72:	4630      	mov	r0, r6
 8000c74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c78:	4e2e      	ldr	r6, [pc, #184]	; (8000d34 <_malloc_r+0xe4>)
 8000c7a:	f000 fa1d 	bl	80010b8 <__malloc_lock>
 8000c7e:	6833      	ldr	r3, [r6, #0]
 8000c80:	461c      	mov	r4, r3
 8000c82:	bb34      	cbnz	r4, 8000cd2 <_malloc_r+0x82>
 8000c84:	4629      	mov	r1, r5
 8000c86:	4638      	mov	r0, r7
 8000c88:	f7ff ffc2 	bl	8000c10 <sbrk_aligned>
 8000c8c:	1c43      	adds	r3, r0, #1
 8000c8e:	4604      	mov	r4, r0
 8000c90:	d14d      	bne.n	8000d2e <_malloc_r+0xde>
 8000c92:	6834      	ldr	r4, [r6, #0]
 8000c94:	4626      	mov	r6, r4
 8000c96:	2e00      	cmp	r6, #0
 8000c98:	d140      	bne.n	8000d1c <_malloc_r+0xcc>
 8000c9a:	6823      	ldr	r3, [r4, #0]
 8000c9c:	4631      	mov	r1, r6
 8000c9e:	4638      	mov	r0, r7
 8000ca0:	eb04 0803 	add.w	r8, r4, r3
 8000ca4:	f000 f886 	bl	8000db4 <_sbrk_r>
 8000ca8:	4580      	cmp	r8, r0
 8000caa:	d13a      	bne.n	8000d22 <_malloc_r+0xd2>
 8000cac:	6821      	ldr	r1, [r4, #0]
 8000cae:	3503      	adds	r5, #3
 8000cb0:	1a6d      	subs	r5, r5, r1
 8000cb2:	f025 0503 	bic.w	r5, r5, #3
 8000cb6:	3508      	adds	r5, #8
 8000cb8:	2d0c      	cmp	r5, #12
 8000cba:	bf38      	it	cc
 8000cbc:	250c      	movcc	r5, #12
 8000cbe:	4629      	mov	r1, r5
 8000cc0:	4638      	mov	r0, r7
 8000cc2:	f7ff ffa5 	bl	8000c10 <sbrk_aligned>
 8000cc6:	3001      	adds	r0, #1
 8000cc8:	d02b      	beq.n	8000d22 <_malloc_r+0xd2>
 8000cca:	6823      	ldr	r3, [r4, #0]
 8000ccc:	442b      	add	r3, r5
 8000cce:	6023      	str	r3, [r4, #0]
 8000cd0:	e00e      	b.n	8000cf0 <_malloc_r+0xa0>
 8000cd2:	6822      	ldr	r2, [r4, #0]
 8000cd4:	1b52      	subs	r2, r2, r5
 8000cd6:	d41e      	bmi.n	8000d16 <_malloc_r+0xc6>
 8000cd8:	2a0b      	cmp	r2, #11
 8000cda:	d916      	bls.n	8000d0a <_malloc_r+0xba>
 8000cdc:	1961      	adds	r1, r4, r5
 8000cde:	42a3      	cmp	r3, r4
 8000ce0:	6025      	str	r5, [r4, #0]
 8000ce2:	bf18      	it	ne
 8000ce4:	6059      	strne	r1, [r3, #4]
 8000ce6:	6863      	ldr	r3, [r4, #4]
 8000ce8:	bf08      	it	eq
 8000cea:	6031      	streq	r1, [r6, #0]
 8000cec:	5162      	str	r2, [r4, r5]
 8000cee:	604b      	str	r3, [r1, #4]
 8000cf0:	4638      	mov	r0, r7
 8000cf2:	f104 060b 	add.w	r6, r4, #11
 8000cf6:	f000 f9e5 	bl	80010c4 <__malloc_unlock>
 8000cfa:	f026 0607 	bic.w	r6, r6, #7
 8000cfe:	1d23      	adds	r3, r4, #4
 8000d00:	1af2      	subs	r2, r6, r3
 8000d02:	d0b6      	beq.n	8000c72 <_malloc_r+0x22>
 8000d04:	1b9b      	subs	r3, r3, r6
 8000d06:	50a3      	str	r3, [r4, r2]
 8000d08:	e7b3      	b.n	8000c72 <_malloc_r+0x22>
 8000d0a:	6862      	ldr	r2, [r4, #4]
 8000d0c:	42a3      	cmp	r3, r4
 8000d0e:	bf0c      	ite	eq
 8000d10:	6032      	streq	r2, [r6, #0]
 8000d12:	605a      	strne	r2, [r3, #4]
 8000d14:	e7ec      	b.n	8000cf0 <_malloc_r+0xa0>
 8000d16:	4623      	mov	r3, r4
 8000d18:	6864      	ldr	r4, [r4, #4]
 8000d1a:	e7b2      	b.n	8000c82 <_malloc_r+0x32>
 8000d1c:	4634      	mov	r4, r6
 8000d1e:	6876      	ldr	r6, [r6, #4]
 8000d20:	e7b9      	b.n	8000c96 <_malloc_r+0x46>
 8000d22:	230c      	movs	r3, #12
 8000d24:	603b      	str	r3, [r7, #0]
 8000d26:	4638      	mov	r0, r7
 8000d28:	f000 f9cc 	bl	80010c4 <__malloc_unlock>
 8000d2c:	e7a1      	b.n	8000c72 <_malloc_r+0x22>
 8000d2e:	6025      	str	r5, [r4, #0]
 8000d30:	e7de      	b.n	8000cf0 <_malloc_r+0xa0>
 8000d32:	bf00      	nop
 8000d34:	20000140 	.word	0x20000140

08000d38 <rand>:
 8000d38:	4b16      	ldr	r3, [pc, #88]	; (8000d94 <rand+0x5c>)
 8000d3a:	b510      	push	{r4, lr}
 8000d3c:	681c      	ldr	r4, [r3, #0]
 8000d3e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000d40:	b9b3      	cbnz	r3, 8000d70 <rand+0x38>
 8000d42:	2018      	movs	r0, #24
 8000d44:	f000 f9b0 	bl	80010a8 <malloc>
 8000d48:	63a0      	str	r0, [r4, #56]	; 0x38
 8000d4a:	b928      	cbnz	r0, 8000d58 <rand+0x20>
 8000d4c:	4602      	mov	r2, r0
 8000d4e:	4b12      	ldr	r3, [pc, #72]	; (8000d98 <rand+0x60>)
 8000d50:	4812      	ldr	r0, [pc, #72]	; (8000d9c <rand+0x64>)
 8000d52:	214e      	movs	r1, #78	; 0x4e
 8000d54:	f000 f894 	bl	8000e80 <__assert_func>
 8000d58:	4a11      	ldr	r2, [pc, #68]	; (8000da0 <rand+0x68>)
 8000d5a:	4b12      	ldr	r3, [pc, #72]	; (8000da4 <rand+0x6c>)
 8000d5c:	e9c0 2300 	strd	r2, r3, [r0]
 8000d60:	4b11      	ldr	r3, [pc, #68]	; (8000da8 <rand+0x70>)
 8000d62:	6083      	str	r3, [r0, #8]
 8000d64:	230b      	movs	r3, #11
 8000d66:	8183      	strh	r3, [r0, #12]
 8000d68:	2201      	movs	r2, #1
 8000d6a:	2300      	movs	r3, #0
 8000d6c:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8000d70:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 8000d72:	4a0e      	ldr	r2, [pc, #56]	; (8000dac <rand+0x74>)
 8000d74:	6920      	ldr	r0, [r4, #16]
 8000d76:	6963      	ldr	r3, [r4, #20]
 8000d78:	490d      	ldr	r1, [pc, #52]	; (8000db0 <rand+0x78>)
 8000d7a:	4342      	muls	r2, r0
 8000d7c:	fb01 2203 	mla	r2, r1, r3, r2
 8000d80:	fba0 0101 	umull	r0, r1, r0, r1
 8000d84:	1c43      	adds	r3, r0, #1
 8000d86:	eb42 0001 	adc.w	r0, r2, r1
 8000d8a:	e9c4 3004 	strd	r3, r0, [r4, #16]
 8000d8e:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8000d92:	bd10      	pop	{r4, pc}
 8000d94:	2000000c 	.word	0x2000000c
 8000d98:	08001b38 	.word	0x08001b38
 8000d9c:	08001b4f 	.word	0x08001b4f
 8000da0:	abcd330e 	.word	0xabcd330e
 8000da4:	e66d1234 	.word	0xe66d1234
 8000da8:	0005deec 	.word	0x0005deec
 8000dac:	5851f42d 	.word	0x5851f42d
 8000db0:	4c957f2d 	.word	0x4c957f2d

08000db4 <_sbrk_r>:
 8000db4:	b538      	push	{r3, r4, r5, lr}
 8000db6:	4d06      	ldr	r5, [pc, #24]	; (8000dd0 <_sbrk_r+0x1c>)
 8000db8:	2300      	movs	r3, #0
 8000dba:	4604      	mov	r4, r0
 8000dbc:	4608      	mov	r0, r1
 8000dbe:	602b      	str	r3, [r5, #0]
 8000dc0:	f7ff fc32 	bl	8000628 <_sbrk>
 8000dc4:	1c43      	adds	r3, r0, #1
 8000dc6:	d102      	bne.n	8000dce <_sbrk_r+0x1a>
 8000dc8:	682b      	ldr	r3, [r5, #0]
 8000dca:	b103      	cbz	r3, 8000dce <_sbrk_r+0x1a>
 8000dcc:	6023      	str	r3, [r4, #0]
 8000dce:	bd38      	pop	{r3, r4, r5, pc}
 8000dd0:	20000148 	.word	0x20000148

08000dd4 <__sread>:
 8000dd4:	b510      	push	{r4, lr}
 8000dd6:	460c      	mov	r4, r1
 8000dd8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ddc:	f000 fcb2 	bl	8001744 <_read_r>
 8000de0:	2800      	cmp	r0, #0
 8000de2:	bfab      	itete	ge
 8000de4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000de6:	89a3      	ldrhlt	r3, [r4, #12]
 8000de8:	181b      	addge	r3, r3, r0
 8000dea:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000dee:	bfac      	ite	ge
 8000df0:	6563      	strge	r3, [r4, #84]	; 0x54
 8000df2:	81a3      	strhlt	r3, [r4, #12]
 8000df4:	bd10      	pop	{r4, pc}

08000df6 <__swrite>:
 8000df6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000dfa:	461f      	mov	r7, r3
 8000dfc:	898b      	ldrh	r3, [r1, #12]
 8000dfe:	05db      	lsls	r3, r3, #23
 8000e00:	4605      	mov	r5, r0
 8000e02:	460c      	mov	r4, r1
 8000e04:	4616      	mov	r6, r2
 8000e06:	d505      	bpl.n	8000e14 <__swrite+0x1e>
 8000e08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e0c:	2302      	movs	r3, #2
 8000e0e:	2200      	movs	r2, #0
 8000e10:	f000 f938 	bl	8001084 <_lseek_r>
 8000e14:	89a3      	ldrh	r3, [r4, #12]
 8000e16:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e1a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e1e:	81a3      	strh	r3, [r4, #12]
 8000e20:	4632      	mov	r2, r6
 8000e22:	463b      	mov	r3, r7
 8000e24:	4628      	mov	r0, r5
 8000e26:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e2a:	f000 b817 	b.w	8000e5c <_write_r>

08000e2e <__sseek>:
 8000e2e:	b510      	push	{r4, lr}
 8000e30:	460c      	mov	r4, r1
 8000e32:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e36:	f000 f925 	bl	8001084 <_lseek_r>
 8000e3a:	1c43      	adds	r3, r0, #1
 8000e3c:	89a3      	ldrh	r3, [r4, #12]
 8000e3e:	bf15      	itete	ne
 8000e40:	6560      	strne	r0, [r4, #84]	; 0x54
 8000e42:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000e46:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000e4a:	81a3      	strheq	r3, [r4, #12]
 8000e4c:	bf18      	it	ne
 8000e4e:	81a3      	strhne	r3, [r4, #12]
 8000e50:	bd10      	pop	{r4, pc}

08000e52 <__sclose>:
 8000e52:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e56:	f000 b831 	b.w	8000ebc <_close_r>
	...

08000e5c <_write_r>:
 8000e5c:	b538      	push	{r3, r4, r5, lr}
 8000e5e:	4d07      	ldr	r5, [pc, #28]	; (8000e7c <_write_r+0x20>)
 8000e60:	4604      	mov	r4, r0
 8000e62:	4608      	mov	r0, r1
 8000e64:	4611      	mov	r1, r2
 8000e66:	2200      	movs	r2, #0
 8000e68:	602a      	str	r2, [r5, #0]
 8000e6a:	461a      	mov	r2, r3
 8000e6c:	f7ff fb83 	bl	8000576 <_write>
 8000e70:	1c43      	adds	r3, r0, #1
 8000e72:	d102      	bne.n	8000e7a <_write_r+0x1e>
 8000e74:	682b      	ldr	r3, [r5, #0]
 8000e76:	b103      	cbz	r3, 8000e7a <_write_r+0x1e>
 8000e78:	6023      	str	r3, [r4, #0]
 8000e7a:	bd38      	pop	{r3, r4, r5, pc}
 8000e7c:	20000148 	.word	0x20000148

08000e80 <__assert_func>:
 8000e80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000e82:	4614      	mov	r4, r2
 8000e84:	461a      	mov	r2, r3
 8000e86:	4b09      	ldr	r3, [pc, #36]	; (8000eac <__assert_func+0x2c>)
 8000e88:	681b      	ldr	r3, [r3, #0]
 8000e8a:	4605      	mov	r5, r0
 8000e8c:	68d8      	ldr	r0, [r3, #12]
 8000e8e:	b14c      	cbz	r4, 8000ea4 <__assert_func+0x24>
 8000e90:	4b07      	ldr	r3, [pc, #28]	; (8000eb0 <__assert_func+0x30>)
 8000e92:	9100      	str	r1, [sp, #0]
 8000e94:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000e98:	4906      	ldr	r1, [pc, #24]	; (8000eb4 <__assert_func+0x34>)
 8000e9a:	462b      	mov	r3, r5
 8000e9c:	f000 f8e0 	bl	8001060 <fiprintf>
 8000ea0:	f000 fd22 	bl	80018e8 <abort>
 8000ea4:	4b04      	ldr	r3, [pc, #16]	; (8000eb8 <__assert_func+0x38>)
 8000ea6:	461c      	mov	r4, r3
 8000ea8:	e7f3      	b.n	8000e92 <__assert_func+0x12>
 8000eaa:	bf00      	nop
 8000eac:	2000000c 	.word	0x2000000c
 8000eb0:	08001baa 	.word	0x08001baa
 8000eb4:	08001bb7 	.word	0x08001bb7
 8000eb8:	08001be5 	.word	0x08001be5

08000ebc <_close_r>:
 8000ebc:	b538      	push	{r3, r4, r5, lr}
 8000ebe:	4d06      	ldr	r5, [pc, #24]	; (8000ed8 <_close_r+0x1c>)
 8000ec0:	2300      	movs	r3, #0
 8000ec2:	4604      	mov	r4, r0
 8000ec4:	4608      	mov	r0, r1
 8000ec6:	602b      	str	r3, [r5, #0]
 8000ec8:	f7ff fb86 	bl	80005d8 <_close>
 8000ecc:	1c43      	adds	r3, r0, #1
 8000ece:	d102      	bne.n	8000ed6 <_close_r+0x1a>
 8000ed0:	682b      	ldr	r3, [r5, #0]
 8000ed2:	b103      	cbz	r3, 8000ed6 <_close_r+0x1a>
 8000ed4:	6023      	str	r3, [r4, #0]
 8000ed6:	bd38      	pop	{r3, r4, r5, pc}
 8000ed8:	20000148 	.word	0x20000148

08000edc <__sflush_r>:
 8000edc:	898a      	ldrh	r2, [r1, #12]
 8000ede:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ee2:	4605      	mov	r5, r0
 8000ee4:	0710      	lsls	r0, r2, #28
 8000ee6:	460c      	mov	r4, r1
 8000ee8:	d458      	bmi.n	8000f9c <__sflush_r+0xc0>
 8000eea:	684b      	ldr	r3, [r1, #4]
 8000eec:	2b00      	cmp	r3, #0
 8000eee:	dc05      	bgt.n	8000efc <__sflush_r+0x20>
 8000ef0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000ef2:	2b00      	cmp	r3, #0
 8000ef4:	dc02      	bgt.n	8000efc <__sflush_r+0x20>
 8000ef6:	2000      	movs	r0, #0
 8000ef8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000efc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000efe:	2e00      	cmp	r6, #0
 8000f00:	d0f9      	beq.n	8000ef6 <__sflush_r+0x1a>
 8000f02:	2300      	movs	r3, #0
 8000f04:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000f08:	682f      	ldr	r7, [r5, #0]
 8000f0a:	602b      	str	r3, [r5, #0]
 8000f0c:	d032      	beq.n	8000f74 <__sflush_r+0x98>
 8000f0e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000f10:	89a3      	ldrh	r3, [r4, #12]
 8000f12:	075a      	lsls	r2, r3, #29
 8000f14:	d505      	bpl.n	8000f22 <__sflush_r+0x46>
 8000f16:	6863      	ldr	r3, [r4, #4]
 8000f18:	1ac0      	subs	r0, r0, r3
 8000f1a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000f1c:	b10b      	cbz	r3, 8000f22 <__sflush_r+0x46>
 8000f1e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f20:	1ac0      	subs	r0, r0, r3
 8000f22:	2300      	movs	r3, #0
 8000f24:	4602      	mov	r2, r0
 8000f26:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f28:	6a21      	ldr	r1, [r4, #32]
 8000f2a:	4628      	mov	r0, r5
 8000f2c:	47b0      	blx	r6
 8000f2e:	1c43      	adds	r3, r0, #1
 8000f30:	89a3      	ldrh	r3, [r4, #12]
 8000f32:	d106      	bne.n	8000f42 <__sflush_r+0x66>
 8000f34:	6829      	ldr	r1, [r5, #0]
 8000f36:	291d      	cmp	r1, #29
 8000f38:	d82c      	bhi.n	8000f94 <__sflush_r+0xb8>
 8000f3a:	4a2a      	ldr	r2, [pc, #168]	; (8000fe4 <__sflush_r+0x108>)
 8000f3c:	40ca      	lsrs	r2, r1
 8000f3e:	07d6      	lsls	r6, r2, #31
 8000f40:	d528      	bpl.n	8000f94 <__sflush_r+0xb8>
 8000f42:	2200      	movs	r2, #0
 8000f44:	6062      	str	r2, [r4, #4]
 8000f46:	04d9      	lsls	r1, r3, #19
 8000f48:	6922      	ldr	r2, [r4, #16]
 8000f4a:	6022      	str	r2, [r4, #0]
 8000f4c:	d504      	bpl.n	8000f58 <__sflush_r+0x7c>
 8000f4e:	1c42      	adds	r2, r0, #1
 8000f50:	d101      	bne.n	8000f56 <__sflush_r+0x7a>
 8000f52:	682b      	ldr	r3, [r5, #0]
 8000f54:	b903      	cbnz	r3, 8000f58 <__sflush_r+0x7c>
 8000f56:	6560      	str	r0, [r4, #84]	; 0x54
 8000f58:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f5a:	602f      	str	r7, [r5, #0]
 8000f5c:	2900      	cmp	r1, #0
 8000f5e:	d0ca      	beq.n	8000ef6 <__sflush_r+0x1a>
 8000f60:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f64:	4299      	cmp	r1, r3
 8000f66:	d002      	beq.n	8000f6e <__sflush_r+0x92>
 8000f68:	4628      	mov	r0, r5
 8000f6a:	f000 f8b1 	bl	80010d0 <_free_r>
 8000f6e:	2000      	movs	r0, #0
 8000f70:	6360      	str	r0, [r4, #52]	; 0x34
 8000f72:	e7c1      	b.n	8000ef8 <__sflush_r+0x1c>
 8000f74:	6a21      	ldr	r1, [r4, #32]
 8000f76:	2301      	movs	r3, #1
 8000f78:	4628      	mov	r0, r5
 8000f7a:	47b0      	blx	r6
 8000f7c:	1c41      	adds	r1, r0, #1
 8000f7e:	d1c7      	bne.n	8000f10 <__sflush_r+0x34>
 8000f80:	682b      	ldr	r3, [r5, #0]
 8000f82:	2b00      	cmp	r3, #0
 8000f84:	d0c4      	beq.n	8000f10 <__sflush_r+0x34>
 8000f86:	2b1d      	cmp	r3, #29
 8000f88:	d001      	beq.n	8000f8e <__sflush_r+0xb2>
 8000f8a:	2b16      	cmp	r3, #22
 8000f8c:	d101      	bne.n	8000f92 <__sflush_r+0xb6>
 8000f8e:	602f      	str	r7, [r5, #0]
 8000f90:	e7b1      	b.n	8000ef6 <__sflush_r+0x1a>
 8000f92:	89a3      	ldrh	r3, [r4, #12]
 8000f94:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f98:	81a3      	strh	r3, [r4, #12]
 8000f9a:	e7ad      	b.n	8000ef8 <__sflush_r+0x1c>
 8000f9c:	690f      	ldr	r7, [r1, #16]
 8000f9e:	2f00      	cmp	r7, #0
 8000fa0:	d0a9      	beq.n	8000ef6 <__sflush_r+0x1a>
 8000fa2:	0793      	lsls	r3, r2, #30
 8000fa4:	680e      	ldr	r6, [r1, #0]
 8000fa6:	bf08      	it	eq
 8000fa8:	694b      	ldreq	r3, [r1, #20]
 8000faa:	600f      	str	r7, [r1, #0]
 8000fac:	bf18      	it	ne
 8000fae:	2300      	movne	r3, #0
 8000fb0:	eba6 0807 	sub.w	r8, r6, r7
 8000fb4:	608b      	str	r3, [r1, #8]
 8000fb6:	f1b8 0f00 	cmp.w	r8, #0
 8000fba:	dd9c      	ble.n	8000ef6 <__sflush_r+0x1a>
 8000fbc:	6a21      	ldr	r1, [r4, #32]
 8000fbe:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000fc0:	4643      	mov	r3, r8
 8000fc2:	463a      	mov	r2, r7
 8000fc4:	4628      	mov	r0, r5
 8000fc6:	47b0      	blx	r6
 8000fc8:	2800      	cmp	r0, #0
 8000fca:	dc06      	bgt.n	8000fda <__sflush_r+0xfe>
 8000fcc:	89a3      	ldrh	r3, [r4, #12]
 8000fce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fd2:	81a3      	strh	r3, [r4, #12]
 8000fd4:	f04f 30ff 	mov.w	r0, #4294967295
 8000fd8:	e78e      	b.n	8000ef8 <__sflush_r+0x1c>
 8000fda:	4407      	add	r7, r0
 8000fdc:	eba8 0800 	sub.w	r8, r8, r0
 8000fe0:	e7e9      	b.n	8000fb6 <__sflush_r+0xda>
 8000fe2:	bf00      	nop
 8000fe4:	20400001 	.word	0x20400001

08000fe8 <_fflush_r>:
 8000fe8:	b538      	push	{r3, r4, r5, lr}
 8000fea:	690b      	ldr	r3, [r1, #16]
 8000fec:	4605      	mov	r5, r0
 8000fee:	460c      	mov	r4, r1
 8000ff0:	b913      	cbnz	r3, 8000ff8 <_fflush_r+0x10>
 8000ff2:	2500      	movs	r5, #0
 8000ff4:	4628      	mov	r0, r5
 8000ff6:	bd38      	pop	{r3, r4, r5, pc}
 8000ff8:	b118      	cbz	r0, 8001002 <_fflush_r+0x1a>
 8000ffa:	6983      	ldr	r3, [r0, #24]
 8000ffc:	b90b      	cbnz	r3, 8001002 <_fflush_r+0x1a>
 8000ffe:	f7ff fd39 	bl	8000a74 <__sinit>
 8001002:	4b14      	ldr	r3, [pc, #80]	; (8001054 <_fflush_r+0x6c>)
 8001004:	429c      	cmp	r4, r3
 8001006:	d11b      	bne.n	8001040 <_fflush_r+0x58>
 8001008:	686c      	ldr	r4, [r5, #4]
 800100a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800100e:	2b00      	cmp	r3, #0
 8001010:	d0ef      	beq.n	8000ff2 <_fflush_r+0xa>
 8001012:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001014:	07d0      	lsls	r0, r2, #31
 8001016:	d404      	bmi.n	8001022 <_fflush_r+0x3a>
 8001018:	0599      	lsls	r1, r3, #22
 800101a:	d402      	bmi.n	8001022 <_fflush_r+0x3a>
 800101c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800101e:	f7ff fdec 	bl	8000bfa <__retarget_lock_acquire_recursive>
 8001022:	4628      	mov	r0, r5
 8001024:	4621      	mov	r1, r4
 8001026:	f7ff ff59 	bl	8000edc <__sflush_r>
 800102a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800102c:	07da      	lsls	r2, r3, #31
 800102e:	4605      	mov	r5, r0
 8001030:	d4e0      	bmi.n	8000ff4 <_fflush_r+0xc>
 8001032:	89a3      	ldrh	r3, [r4, #12]
 8001034:	059b      	lsls	r3, r3, #22
 8001036:	d4dd      	bmi.n	8000ff4 <_fflush_r+0xc>
 8001038:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800103a:	f7ff fddf 	bl	8000bfc <__retarget_lock_release_recursive>
 800103e:	e7d9      	b.n	8000ff4 <_fflush_r+0xc>
 8001040:	4b05      	ldr	r3, [pc, #20]	; (8001058 <_fflush_r+0x70>)
 8001042:	429c      	cmp	r4, r3
 8001044:	d101      	bne.n	800104a <_fflush_r+0x62>
 8001046:	68ac      	ldr	r4, [r5, #8]
 8001048:	e7df      	b.n	800100a <_fflush_r+0x22>
 800104a:	4b04      	ldr	r3, [pc, #16]	; (800105c <_fflush_r+0x74>)
 800104c:	429c      	cmp	r4, r3
 800104e:	bf08      	it	eq
 8001050:	68ec      	ldreq	r4, [r5, #12]
 8001052:	e7da      	b.n	800100a <_fflush_r+0x22>
 8001054:	08001af4 	.word	0x08001af4
 8001058:	08001b14 	.word	0x08001b14
 800105c:	08001ad4 	.word	0x08001ad4

08001060 <fiprintf>:
 8001060:	b40e      	push	{r1, r2, r3}
 8001062:	b503      	push	{r0, r1, lr}
 8001064:	4601      	mov	r1, r0
 8001066:	ab03      	add	r3, sp, #12
 8001068:	4805      	ldr	r0, [pc, #20]	; (8001080 <fiprintf+0x20>)
 800106a:	f853 2b04 	ldr.w	r2, [r3], #4
 800106e:	6800      	ldr	r0, [r0, #0]
 8001070:	9301      	str	r3, [sp, #4]
 8001072:	f000 f8a3 	bl	80011bc <_vfiprintf_r>
 8001076:	b002      	add	sp, #8
 8001078:	f85d eb04 	ldr.w	lr, [sp], #4
 800107c:	b003      	add	sp, #12
 800107e:	4770      	bx	lr
 8001080:	2000000c 	.word	0x2000000c

08001084 <_lseek_r>:
 8001084:	b538      	push	{r3, r4, r5, lr}
 8001086:	4d07      	ldr	r5, [pc, #28]	; (80010a4 <_lseek_r+0x20>)
 8001088:	4604      	mov	r4, r0
 800108a:	4608      	mov	r0, r1
 800108c:	4611      	mov	r1, r2
 800108e:	2200      	movs	r2, #0
 8001090:	602a      	str	r2, [r5, #0]
 8001092:	461a      	mov	r2, r3
 8001094:	f7ff fa5d 	bl	8000552 <_lseek>
 8001098:	1c43      	adds	r3, r0, #1
 800109a:	d102      	bne.n	80010a2 <_lseek_r+0x1e>
 800109c:	682b      	ldr	r3, [r5, #0]
 800109e:	b103      	cbz	r3, 80010a2 <_lseek_r+0x1e>
 80010a0:	6023      	str	r3, [r4, #0]
 80010a2:	bd38      	pop	{r3, r4, r5, pc}
 80010a4:	20000148 	.word	0x20000148

080010a8 <malloc>:
 80010a8:	4b02      	ldr	r3, [pc, #8]	; (80010b4 <malloc+0xc>)
 80010aa:	4601      	mov	r1, r0
 80010ac:	6818      	ldr	r0, [r3, #0]
 80010ae:	f7ff bdcf 	b.w	8000c50 <_malloc_r>
 80010b2:	bf00      	nop
 80010b4:	2000000c 	.word	0x2000000c

080010b8 <__malloc_lock>:
 80010b8:	4801      	ldr	r0, [pc, #4]	; (80010c0 <__malloc_lock+0x8>)
 80010ba:	f7ff bd9e 	b.w	8000bfa <__retarget_lock_acquire_recursive>
 80010be:	bf00      	nop
 80010c0:	2000013c 	.word	0x2000013c

080010c4 <__malloc_unlock>:
 80010c4:	4801      	ldr	r0, [pc, #4]	; (80010cc <__malloc_unlock+0x8>)
 80010c6:	f7ff bd99 	b.w	8000bfc <__retarget_lock_release_recursive>
 80010ca:	bf00      	nop
 80010cc:	2000013c 	.word	0x2000013c

080010d0 <_free_r>:
 80010d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80010d2:	2900      	cmp	r1, #0
 80010d4:	d044      	beq.n	8001160 <_free_r+0x90>
 80010d6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80010da:	9001      	str	r0, [sp, #4]
 80010dc:	2b00      	cmp	r3, #0
 80010de:	f1a1 0404 	sub.w	r4, r1, #4
 80010e2:	bfb8      	it	lt
 80010e4:	18e4      	addlt	r4, r4, r3
 80010e6:	f7ff ffe7 	bl	80010b8 <__malloc_lock>
 80010ea:	4a1e      	ldr	r2, [pc, #120]	; (8001164 <_free_r+0x94>)
 80010ec:	9801      	ldr	r0, [sp, #4]
 80010ee:	6813      	ldr	r3, [r2, #0]
 80010f0:	b933      	cbnz	r3, 8001100 <_free_r+0x30>
 80010f2:	6063      	str	r3, [r4, #4]
 80010f4:	6014      	str	r4, [r2, #0]
 80010f6:	b003      	add	sp, #12
 80010f8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80010fc:	f7ff bfe2 	b.w	80010c4 <__malloc_unlock>
 8001100:	42a3      	cmp	r3, r4
 8001102:	d908      	bls.n	8001116 <_free_r+0x46>
 8001104:	6825      	ldr	r5, [r4, #0]
 8001106:	1961      	adds	r1, r4, r5
 8001108:	428b      	cmp	r3, r1
 800110a:	bf01      	itttt	eq
 800110c:	6819      	ldreq	r1, [r3, #0]
 800110e:	685b      	ldreq	r3, [r3, #4]
 8001110:	1949      	addeq	r1, r1, r5
 8001112:	6021      	streq	r1, [r4, #0]
 8001114:	e7ed      	b.n	80010f2 <_free_r+0x22>
 8001116:	461a      	mov	r2, r3
 8001118:	685b      	ldr	r3, [r3, #4]
 800111a:	b10b      	cbz	r3, 8001120 <_free_r+0x50>
 800111c:	42a3      	cmp	r3, r4
 800111e:	d9fa      	bls.n	8001116 <_free_r+0x46>
 8001120:	6811      	ldr	r1, [r2, #0]
 8001122:	1855      	adds	r5, r2, r1
 8001124:	42a5      	cmp	r5, r4
 8001126:	d10b      	bne.n	8001140 <_free_r+0x70>
 8001128:	6824      	ldr	r4, [r4, #0]
 800112a:	4421      	add	r1, r4
 800112c:	1854      	adds	r4, r2, r1
 800112e:	42a3      	cmp	r3, r4
 8001130:	6011      	str	r1, [r2, #0]
 8001132:	d1e0      	bne.n	80010f6 <_free_r+0x26>
 8001134:	681c      	ldr	r4, [r3, #0]
 8001136:	685b      	ldr	r3, [r3, #4]
 8001138:	6053      	str	r3, [r2, #4]
 800113a:	4421      	add	r1, r4
 800113c:	6011      	str	r1, [r2, #0]
 800113e:	e7da      	b.n	80010f6 <_free_r+0x26>
 8001140:	d902      	bls.n	8001148 <_free_r+0x78>
 8001142:	230c      	movs	r3, #12
 8001144:	6003      	str	r3, [r0, #0]
 8001146:	e7d6      	b.n	80010f6 <_free_r+0x26>
 8001148:	6825      	ldr	r5, [r4, #0]
 800114a:	1961      	adds	r1, r4, r5
 800114c:	428b      	cmp	r3, r1
 800114e:	bf04      	itt	eq
 8001150:	6819      	ldreq	r1, [r3, #0]
 8001152:	685b      	ldreq	r3, [r3, #4]
 8001154:	6063      	str	r3, [r4, #4]
 8001156:	bf04      	itt	eq
 8001158:	1949      	addeq	r1, r1, r5
 800115a:	6021      	streq	r1, [r4, #0]
 800115c:	6054      	str	r4, [r2, #4]
 800115e:	e7ca      	b.n	80010f6 <_free_r+0x26>
 8001160:	b003      	add	sp, #12
 8001162:	bd30      	pop	{r4, r5, pc}
 8001164:	20000140 	.word	0x20000140

08001168 <__sfputc_r>:
 8001168:	6893      	ldr	r3, [r2, #8]
 800116a:	3b01      	subs	r3, #1
 800116c:	2b00      	cmp	r3, #0
 800116e:	b410      	push	{r4}
 8001170:	6093      	str	r3, [r2, #8]
 8001172:	da08      	bge.n	8001186 <__sfputc_r+0x1e>
 8001174:	6994      	ldr	r4, [r2, #24]
 8001176:	42a3      	cmp	r3, r4
 8001178:	db01      	blt.n	800117e <__sfputc_r+0x16>
 800117a:	290a      	cmp	r1, #10
 800117c:	d103      	bne.n	8001186 <__sfputc_r+0x1e>
 800117e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001182:	f000 baf1 	b.w	8001768 <__swbuf_r>
 8001186:	6813      	ldr	r3, [r2, #0]
 8001188:	1c58      	adds	r0, r3, #1
 800118a:	6010      	str	r0, [r2, #0]
 800118c:	7019      	strb	r1, [r3, #0]
 800118e:	4608      	mov	r0, r1
 8001190:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001194:	4770      	bx	lr

08001196 <__sfputs_r>:
 8001196:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001198:	4606      	mov	r6, r0
 800119a:	460f      	mov	r7, r1
 800119c:	4614      	mov	r4, r2
 800119e:	18d5      	adds	r5, r2, r3
 80011a0:	42ac      	cmp	r4, r5
 80011a2:	d101      	bne.n	80011a8 <__sfputs_r+0x12>
 80011a4:	2000      	movs	r0, #0
 80011a6:	e007      	b.n	80011b8 <__sfputs_r+0x22>
 80011a8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80011ac:	463a      	mov	r2, r7
 80011ae:	4630      	mov	r0, r6
 80011b0:	f7ff ffda 	bl	8001168 <__sfputc_r>
 80011b4:	1c43      	adds	r3, r0, #1
 80011b6:	d1f3      	bne.n	80011a0 <__sfputs_r+0xa>
 80011b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080011bc <_vfiprintf_r>:
 80011bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80011c0:	460d      	mov	r5, r1
 80011c2:	b09d      	sub	sp, #116	; 0x74
 80011c4:	4614      	mov	r4, r2
 80011c6:	4698      	mov	r8, r3
 80011c8:	4606      	mov	r6, r0
 80011ca:	b118      	cbz	r0, 80011d4 <_vfiprintf_r+0x18>
 80011cc:	6983      	ldr	r3, [r0, #24]
 80011ce:	b90b      	cbnz	r3, 80011d4 <_vfiprintf_r+0x18>
 80011d0:	f7ff fc50 	bl	8000a74 <__sinit>
 80011d4:	4b89      	ldr	r3, [pc, #548]	; (80013fc <_vfiprintf_r+0x240>)
 80011d6:	429d      	cmp	r5, r3
 80011d8:	d11b      	bne.n	8001212 <_vfiprintf_r+0x56>
 80011da:	6875      	ldr	r5, [r6, #4]
 80011dc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80011de:	07d9      	lsls	r1, r3, #31
 80011e0:	d405      	bmi.n	80011ee <_vfiprintf_r+0x32>
 80011e2:	89ab      	ldrh	r3, [r5, #12]
 80011e4:	059a      	lsls	r2, r3, #22
 80011e6:	d402      	bmi.n	80011ee <_vfiprintf_r+0x32>
 80011e8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80011ea:	f7ff fd06 	bl	8000bfa <__retarget_lock_acquire_recursive>
 80011ee:	89ab      	ldrh	r3, [r5, #12]
 80011f0:	071b      	lsls	r3, r3, #28
 80011f2:	d501      	bpl.n	80011f8 <_vfiprintf_r+0x3c>
 80011f4:	692b      	ldr	r3, [r5, #16]
 80011f6:	b9eb      	cbnz	r3, 8001234 <_vfiprintf_r+0x78>
 80011f8:	4629      	mov	r1, r5
 80011fa:	4630      	mov	r0, r6
 80011fc:	f000 fb06 	bl	800180c <__swsetup_r>
 8001200:	b1c0      	cbz	r0, 8001234 <_vfiprintf_r+0x78>
 8001202:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001204:	07dc      	lsls	r4, r3, #31
 8001206:	d50e      	bpl.n	8001226 <_vfiprintf_r+0x6a>
 8001208:	f04f 30ff 	mov.w	r0, #4294967295
 800120c:	b01d      	add	sp, #116	; 0x74
 800120e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001212:	4b7b      	ldr	r3, [pc, #492]	; (8001400 <_vfiprintf_r+0x244>)
 8001214:	429d      	cmp	r5, r3
 8001216:	d101      	bne.n	800121c <_vfiprintf_r+0x60>
 8001218:	68b5      	ldr	r5, [r6, #8]
 800121a:	e7df      	b.n	80011dc <_vfiprintf_r+0x20>
 800121c:	4b79      	ldr	r3, [pc, #484]	; (8001404 <_vfiprintf_r+0x248>)
 800121e:	429d      	cmp	r5, r3
 8001220:	bf08      	it	eq
 8001222:	68f5      	ldreq	r5, [r6, #12]
 8001224:	e7da      	b.n	80011dc <_vfiprintf_r+0x20>
 8001226:	89ab      	ldrh	r3, [r5, #12]
 8001228:	0598      	lsls	r0, r3, #22
 800122a:	d4ed      	bmi.n	8001208 <_vfiprintf_r+0x4c>
 800122c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800122e:	f7ff fce5 	bl	8000bfc <__retarget_lock_release_recursive>
 8001232:	e7e9      	b.n	8001208 <_vfiprintf_r+0x4c>
 8001234:	2300      	movs	r3, #0
 8001236:	9309      	str	r3, [sp, #36]	; 0x24
 8001238:	2320      	movs	r3, #32
 800123a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800123e:	f8cd 800c 	str.w	r8, [sp, #12]
 8001242:	2330      	movs	r3, #48	; 0x30
 8001244:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001408 <_vfiprintf_r+0x24c>
 8001248:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800124c:	f04f 0901 	mov.w	r9, #1
 8001250:	4623      	mov	r3, r4
 8001252:	469a      	mov	sl, r3
 8001254:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001258:	b10a      	cbz	r2, 800125e <_vfiprintf_r+0xa2>
 800125a:	2a25      	cmp	r2, #37	; 0x25
 800125c:	d1f9      	bne.n	8001252 <_vfiprintf_r+0x96>
 800125e:	ebba 0b04 	subs.w	fp, sl, r4
 8001262:	d00b      	beq.n	800127c <_vfiprintf_r+0xc0>
 8001264:	465b      	mov	r3, fp
 8001266:	4622      	mov	r2, r4
 8001268:	4629      	mov	r1, r5
 800126a:	4630      	mov	r0, r6
 800126c:	f7ff ff93 	bl	8001196 <__sfputs_r>
 8001270:	3001      	adds	r0, #1
 8001272:	f000 80aa 	beq.w	80013ca <_vfiprintf_r+0x20e>
 8001276:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001278:	445a      	add	r2, fp
 800127a:	9209      	str	r2, [sp, #36]	; 0x24
 800127c:	f89a 3000 	ldrb.w	r3, [sl]
 8001280:	2b00      	cmp	r3, #0
 8001282:	f000 80a2 	beq.w	80013ca <_vfiprintf_r+0x20e>
 8001286:	2300      	movs	r3, #0
 8001288:	f04f 32ff 	mov.w	r2, #4294967295
 800128c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001290:	f10a 0a01 	add.w	sl, sl, #1
 8001294:	9304      	str	r3, [sp, #16]
 8001296:	9307      	str	r3, [sp, #28]
 8001298:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800129c:	931a      	str	r3, [sp, #104]	; 0x68
 800129e:	4654      	mov	r4, sl
 80012a0:	2205      	movs	r2, #5
 80012a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80012a6:	4858      	ldr	r0, [pc, #352]	; (8001408 <_vfiprintf_r+0x24c>)
 80012a8:	f7fe ffd2 	bl	8000250 <memchr>
 80012ac:	9a04      	ldr	r2, [sp, #16]
 80012ae:	b9d8      	cbnz	r0, 80012e8 <_vfiprintf_r+0x12c>
 80012b0:	06d1      	lsls	r1, r2, #27
 80012b2:	bf44      	itt	mi
 80012b4:	2320      	movmi	r3, #32
 80012b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80012ba:	0713      	lsls	r3, r2, #28
 80012bc:	bf44      	itt	mi
 80012be:	232b      	movmi	r3, #43	; 0x2b
 80012c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80012c4:	f89a 3000 	ldrb.w	r3, [sl]
 80012c8:	2b2a      	cmp	r3, #42	; 0x2a
 80012ca:	d015      	beq.n	80012f8 <_vfiprintf_r+0x13c>
 80012cc:	9a07      	ldr	r2, [sp, #28]
 80012ce:	4654      	mov	r4, sl
 80012d0:	2000      	movs	r0, #0
 80012d2:	f04f 0c0a 	mov.w	ip, #10
 80012d6:	4621      	mov	r1, r4
 80012d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80012dc:	3b30      	subs	r3, #48	; 0x30
 80012de:	2b09      	cmp	r3, #9
 80012e0:	d94e      	bls.n	8001380 <_vfiprintf_r+0x1c4>
 80012e2:	b1b0      	cbz	r0, 8001312 <_vfiprintf_r+0x156>
 80012e4:	9207      	str	r2, [sp, #28]
 80012e6:	e014      	b.n	8001312 <_vfiprintf_r+0x156>
 80012e8:	eba0 0308 	sub.w	r3, r0, r8
 80012ec:	fa09 f303 	lsl.w	r3, r9, r3
 80012f0:	4313      	orrs	r3, r2
 80012f2:	9304      	str	r3, [sp, #16]
 80012f4:	46a2      	mov	sl, r4
 80012f6:	e7d2      	b.n	800129e <_vfiprintf_r+0xe2>
 80012f8:	9b03      	ldr	r3, [sp, #12]
 80012fa:	1d19      	adds	r1, r3, #4
 80012fc:	681b      	ldr	r3, [r3, #0]
 80012fe:	9103      	str	r1, [sp, #12]
 8001300:	2b00      	cmp	r3, #0
 8001302:	bfbb      	ittet	lt
 8001304:	425b      	neglt	r3, r3
 8001306:	f042 0202 	orrlt.w	r2, r2, #2
 800130a:	9307      	strge	r3, [sp, #28]
 800130c:	9307      	strlt	r3, [sp, #28]
 800130e:	bfb8      	it	lt
 8001310:	9204      	strlt	r2, [sp, #16]
 8001312:	7823      	ldrb	r3, [r4, #0]
 8001314:	2b2e      	cmp	r3, #46	; 0x2e
 8001316:	d10c      	bne.n	8001332 <_vfiprintf_r+0x176>
 8001318:	7863      	ldrb	r3, [r4, #1]
 800131a:	2b2a      	cmp	r3, #42	; 0x2a
 800131c:	d135      	bne.n	800138a <_vfiprintf_r+0x1ce>
 800131e:	9b03      	ldr	r3, [sp, #12]
 8001320:	1d1a      	adds	r2, r3, #4
 8001322:	681b      	ldr	r3, [r3, #0]
 8001324:	9203      	str	r2, [sp, #12]
 8001326:	2b00      	cmp	r3, #0
 8001328:	bfb8      	it	lt
 800132a:	f04f 33ff 	movlt.w	r3, #4294967295
 800132e:	3402      	adds	r4, #2
 8001330:	9305      	str	r3, [sp, #20]
 8001332:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001418 <_vfiprintf_r+0x25c>
 8001336:	7821      	ldrb	r1, [r4, #0]
 8001338:	2203      	movs	r2, #3
 800133a:	4650      	mov	r0, sl
 800133c:	f7fe ff88 	bl	8000250 <memchr>
 8001340:	b140      	cbz	r0, 8001354 <_vfiprintf_r+0x198>
 8001342:	2340      	movs	r3, #64	; 0x40
 8001344:	eba0 000a 	sub.w	r0, r0, sl
 8001348:	fa03 f000 	lsl.w	r0, r3, r0
 800134c:	9b04      	ldr	r3, [sp, #16]
 800134e:	4303      	orrs	r3, r0
 8001350:	3401      	adds	r4, #1
 8001352:	9304      	str	r3, [sp, #16]
 8001354:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001358:	482c      	ldr	r0, [pc, #176]	; (800140c <_vfiprintf_r+0x250>)
 800135a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800135e:	2206      	movs	r2, #6
 8001360:	f7fe ff76 	bl	8000250 <memchr>
 8001364:	2800      	cmp	r0, #0
 8001366:	d03f      	beq.n	80013e8 <_vfiprintf_r+0x22c>
 8001368:	4b29      	ldr	r3, [pc, #164]	; (8001410 <_vfiprintf_r+0x254>)
 800136a:	bb1b      	cbnz	r3, 80013b4 <_vfiprintf_r+0x1f8>
 800136c:	9b03      	ldr	r3, [sp, #12]
 800136e:	3307      	adds	r3, #7
 8001370:	f023 0307 	bic.w	r3, r3, #7
 8001374:	3308      	adds	r3, #8
 8001376:	9303      	str	r3, [sp, #12]
 8001378:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800137a:	443b      	add	r3, r7
 800137c:	9309      	str	r3, [sp, #36]	; 0x24
 800137e:	e767      	b.n	8001250 <_vfiprintf_r+0x94>
 8001380:	fb0c 3202 	mla	r2, ip, r2, r3
 8001384:	460c      	mov	r4, r1
 8001386:	2001      	movs	r0, #1
 8001388:	e7a5      	b.n	80012d6 <_vfiprintf_r+0x11a>
 800138a:	2300      	movs	r3, #0
 800138c:	3401      	adds	r4, #1
 800138e:	9305      	str	r3, [sp, #20]
 8001390:	4619      	mov	r1, r3
 8001392:	f04f 0c0a 	mov.w	ip, #10
 8001396:	4620      	mov	r0, r4
 8001398:	f810 2b01 	ldrb.w	r2, [r0], #1
 800139c:	3a30      	subs	r2, #48	; 0x30
 800139e:	2a09      	cmp	r2, #9
 80013a0:	d903      	bls.n	80013aa <_vfiprintf_r+0x1ee>
 80013a2:	2b00      	cmp	r3, #0
 80013a4:	d0c5      	beq.n	8001332 <_vfiprintf_r+0x176>
 80013a6:	9105      	str	r1, [sp, #20]
 80013a8:	e7c3      	b.n	8001332 <_vfiprintf_r+0x176>
 80013aa:	fb0c 2101 	mla	r1, ip, r1, r2
 80013ae:	4604      	mov	r4, r0
 80013b0:	2301      	movs	r3, #1
 80013b2:	e7f0      	b.n	8001396 <_vfiprintf_r+0x1da>
 80013b4:	ab03      	add	r3, sp, #12
 80013b6:	9300      	str	r3, [sp, #0]
 80013b8:	462a      	mov	r2, r5
 80013ba:	4b16      	ldr	r3, [pc, #88]	; (8001414 <_vfiprintf_r+0x258>)
 80013bc:	a904      	add	r1, sp, #16
 80013be:	4630      	mov	r0, r6
 80013c0:	f3af 8000 	nop.w
 80013c4:	4607      	mov	r7, r0
 80013c6:	1c78      	adds	r0, r7, #1
 80013c8:	d1d6      	bne.n	8001378 <_vfiprintf_r+0x1bc>
 80013ca:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80013cc:	07d9      	lsls	r1, r3, #31
 80013ce:	d405      	bmi.n	80013dc <_vfiprintf_r+0x220>
 80013d0:	89ab      	ldrh	r3, [r5, #12]
 80013d2:	059a      	lsls	r2, r3, #22
 80013d4:	d402      	bmi.n	80013dc <_vfiprintf_r+0x220>
 80013d6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80013d8:	f7ff fc10 	bl	8000bfc <__retarget_lock_release_recursive>
 80013dc:	89ab      	ldrh	r3, [r5, #12]
 80013de:	065b      	lsls	r3, r3, #25
 80013e0:	f53f af12 	bmi.w	8001208 <_vfiprintf_r+0x4c>
 80013e4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80013e6:	e711      	b.n	800120c <_vfiprintf_r+0x50>
 80013e8:	ab03      	add	r3, sp, #12
 80013ea:	9300      	str	r3, [sp, #0]
 80013ec:	462a      	mov	r2, r5
 80013ee:	4b09      	ldr	r3, [pc, #36]	; (8001414 <_vfiprintf_r+0x258>)
 80013f0:	a904      	add	r1, sp, #16
 80013f2:	4630      	mov	r0, r6
 80013f4:	f000 f880 	bl	80014f8 <_printf_i>
 80013f8:	e7e4      	b.n	80013c4 <_vfiprintf_r+0x208>
 80013fa:	bf00      	nop
 80013fc:	08001af4 	.word	0x08001af4
 8001400:	08001b14 	.word	0x08001b14
 8001404:	08001ad4 	.word	0x08001ad4
 8001408:	08001be6 	.word	0x08001be6
 800140c:	08001bf0 	.word	0x08001bf0
 8001410:	00000000 	.word	0x00000000
 8001414:	08001197 	.word	0x08001197
 8001418:	08001bec 	.word	0x08001bec

0800141c <_printf_common>:
 800141c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001420:	4616      	mov	r6, r2
 8001422:	4699      	mov	r9, r3
 8001424:	688a      	ldr	r2, [r1, #8]
 8001426:	690b      	ldr	r3, [r1, #16]
 8001428:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800142c:	4293      	cmp	r3, r2
 800142e:	bfb8      	it	lt
 8001430:	4613      	movlt	r3, r2
 8001432:	6033      	str	r3, [r6, #0]
 8001434:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001438:	4607      	mov	r7, r0
 800143a:	460c      	mov	r4, r1
 800143c:	b10a      	cbz	r2, 8001442 <_printf_common+0x26>
 800143e:	3301      	adds	r3, #1
 8001440:	6033      	str	r3, [r6, #0]
 8001442:	6823      	ldr	r3, [r4, #0]
 8001444:	0699      	lsls	r1, r3, #26
 8001446:	bf42      	ittt	mi
 8001448:	6833      	ldrmi	r3, [r6, #0]
 800144a:	3302      	addmi	r3, #2
 800144c:	6033      	strmi	r3, [r6, #0]
 800144e:	6825      	ldr	r5, [r4, #0]
 8001450:	f015 0506 	ands.w	r5, r5, #6
 8001454:	d106      	bne.n	8001464 <_printf_common+0x48>
 8001456:	f104 0a19 	add.w	sl, r4, #25
 800145a:	68e3      	ldr	r3, [r4, #12]
 800145c:	6832      	ldr	r2, [r6, #0]
 800145e:	1a9b      	subs	r3, r3, r2
 8001460:	42ab      	cmp	r3, r5
 8001462:	dc26      	bgt.n	80014b2 <_printf_common+0x96>
 8001464:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001468:	1e13      	subs	r3, r2, #0
 800146a:	6822      	ldr	r2, [r4, #0]
 800146c:	bf18      	it	ne
 800146e:	2301      	movne	r3, #1
 8001470:	0692      	lsls	r2, r2, #26
 8001472:	d42b      	bmi.n	80014cc <_printf_common+0xb0>
 8001474:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001478:	4649      	mov	r1, r9
 800147a:	4638      	mov	r0, r7
 800147c:	47c0      	blx	r8
 800147e:	3001      	adds	r0, #1
 8001480:	d01e      	beq.n	80014c0 <_printf_common+0xa4>
 8001482:	6823      	ldr	r3, [r4, #0]
 8001484:	68e5      	ldr	r5, [r4, #12]
 8001486:	6832      	ldr	r2, [r6, #0]
 8001488:	f003 0306 	and.w	r3, r3, #6
 800148c:	2b04      	cmp	r3, #4
 800148e:	bf08      	it	eq
 8001490:	1aad      	subeq	r5, r5, r2
 8001492:	68a3      	ldr	r3, [r4, #8]
 8001494:	6922      	ldr	r2, [r4, #16]
 8001496:	bf0c      	ite	eq
 8001498:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800149c:	2500      	movne	r5, #0
 800149e:	4293      	cmp	r3, r2
 80014a0:	bfc4      	itt	gt
 80014a2:	1a9b      	subgt	r3, r3, r2
 80014a4:	18ed      	addgt	r5, r5, r3
 80014a6:	2600      	movs	r6, #0
 80014a8:	341a      	adds	r4, #26
 80014aa:	42b5      	cmp	r5, r6
 80014ac:	d11a      	bne.n	80014e4 <_printf_common+0xc8>
 80014ae:	2000      	movs	r0, #0
 80014b0:	e008      	b.n	80014c4 <_printf_common+0xa8>
 80014b2:	2301      	movs	r3, #1
 80014b4:	4652      	mov	r2, sl
 80014b6:	4649      	mov	r1, r9
 80014b8:	4638      	mov	r0, r7
 80014ba:	47c0      	blx	r8
 80014bc:	3001      	adds	r0, #1
 80014be:	d103      	bne.n	80014c8 <_printf_common+0xac>
 80014c0:	f04f 30ff 	mov.w	r0, #4294967295
 80014c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80014c8:	3501      	adds	r5, #1
 80014ca:	e7c6      	b.n	800145a <_printf_common+0x3e>
 80014cc:	18e1      	adds	r1, r4, r3
 80014ce:	1c5a      	adds	r2, r3, #1
 80014d0:	2030      	movs	r0, #48	; 0x30
 80014d2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80014d6:	4422      	add	r2, r4
 80014d8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80014dc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80014e0:	3302      	adds	r3, #2
 80014e2:	e7c7      	b.n	8001474 <_printf_common+0x58>
 80014e4:	2301      	movs	r3, #1
 80014e6:	4622      	mov	r2, r4
 80014e8:	4649      	mov	r1, r9
 80014ea:	4638      	mov	r0, r7
 80014ec:	47c0      	blx	r8
 80014ee:	3001      	adds	r0, #1
 80014f0:	d0e6      	beq.n	80014c0 <_printf_common+0xa4>
 80014f2:	3601      	adds	r6, #1
 80014f4:	e7d9      	b.n	80014aa <_printf_common+0x8e>
	...

080014f8 <_printf_i>:
 80014f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80014fc:	7e0f      	ldrb	r7, [r1, #24]
 80014fe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001500:	2f78      	cmp	r7, #120	; 0x78
 8001502:	4691      	mov	r9, r2
 8001504:	4680      	mov	r8, r0
 8001506:	460c      	mov	r4, r1
 8001508:	469a      	mov	sl, r3
 800150a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800150e:	d807      	bhi.n	8001520 <_printf_i+0x28>
 8001510:	2f62      	cmp	r7, #98	; 0x62
 8001512:	d80a      	bhi.n	800152a <_printf_i+0x32>
 8001514:	2f00      	cmp	r7, #0
 8001516:	f000 80d8 	beq.w	80016ca <_printf_i+0x1d2>
 800151a:	2f58      	cmp	r7, #88	; 0x58
 800151c:	f000 80a3 	beq.w	8001666 <_printf_i+0x16e>
 8001520:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001524:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001528:	e03a      	b.n	80015a0 <_printf_i+0xa8>
 800152a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800152e:	2b15      	cmp	r3, #21
 8001530:	d8f6      	bhi.n	8001520 <_printf_i+0x28>
 8001532:	a101      	add	r1, pc, #4	; (adr r1, 8001538 <_printf_i+0x40>)
 8001534:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001538:	08001591 	.word	0x08001591
 800153c:	080015a5 	.word	0x080015a5
 8001540:	08001521 	.word	0x08001521
 8001544:	08001521 	.word	0x08001521
 8001548:	08001521 	.word	0x08001521
 800154c:	08001521 	.word	0x08001521
 8001550:	080015a5 	.word	0x080015a5
 8001554:	08001521 	.word	0x08001521
 8001558:	08001521 	.word	0x08001521
 800155c:	08001521 	.word	0x08001521
 8001560:	08001521 	.word	0x08001521
 8001564:	080016b1 	.word	0x080016b1
 8001568:	080015d5 	.word	0x080015d5
 800156c:	08001693 	.word	0x08001693
 8001570:	08001521 	.word	0x08001521
 8001574:	08001521 	.word	0x08001521
 8001578:	080016d3 	.word	0x080016d3
 800157c:	08001521 	.word	0x08001521
 8001580:	080015d5 	.word	0x080015d5
 8001584:	08001521 	.word	0x08001521
 8001588:	08001521 	.word	0x08001521
 800158c:	0800169b 	.word	0x0800169b
 8001590:	682b      	ldr	r3, [r5, #0]
 8001592:	1d1a      	adds	r2, r3, #4
 8001594:	681b      	ldr	r3, [r3, #0]
 8001596:	602a      	str	r2, [r5, #0]
 8001598:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800159c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80015a0:	2301      	movs	r3, #1
 80015a2:	e0a3      	b.n	80016ec <_printf_i+0x1f4>
 80015a4:	6820      	ldr	r0, [r4, #0]
 80015a6:	6829      	ldr	r1, [r5, #0]
 80015a8:	0606      	lsls	r6, r0, #24
 80015aa:	f101 0304 	add.w	r3, r1, #4
 80015ae:	d50a      	bpl.n	80015c6 <_printf_i+0xce>
 80015b0:	680e      	ldr	r6, [r1, #0]
 80015b2:	602b      	str	r3, [r5, #0]
 80015b4:	2e00      	cmp	r6, #0
 80015b6:	da03      	bge.n	80015c0 <_printf_i+0xc8>
 80015b8:	232d      	movs	r3, #45	; 0x2d
 80015ba:	4276      	negs	r6, r6
 80015bc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80015c0:	485e      	ldr	r0, [pc, #376]	; (800173c <_printf_i+0x244>)
 80015c2:	230a      	movs	r3, #10
 80015c4:	e019      	b.n	80015fa <_printf_i+0x102>
 80015c6:	680e      	ldr	r6, [r1, #0]
 80015c8:	602b      	str	r3, [r5, #0]
 80015ca:	f010 0f40 	tst.w	r0, #64	; 0x40
 80015ce:	bf18      	it	ne
 80015d0:	b236      	sxthne	r6, r6
 80015d2:	e7ef      	b.n	80015b4 <_printf_i+0xbc>
 80015d4:	682b      	ldr	r3, [r5, #0]
 80015d6:	6820      	ldr	r0, [r4, #0]
 80015d8:	1d19      	adds	r1, r3, #4
 80015da:	6029      	str	r1, [r5, #0]
 80015dc:	0601      	lsls	r1, r0, #24
 80015de:	d501      	bpl.n	80015e4 <_printf_i+0xec>
 80015e0:	681e      	ldr	r6, [r3, #0]
 80015e2:	e002      	b.n	80015ea <_printf_i+0xf2>
 80015e4:	0646      	lsls	r6, r0, #25
 80015e6:	d5fb      	bpl.n	80015e0 <_printf_i+0xe8>
 80015e8:	881e      	ldrh	r6, [r3, #0]
 80015ea:	4854      	ldr	r0, [pc, #336]	; (800173c <_printf_i+0x244>)
 80015ec:	2f6f      	cmp	r7, #111	; 0x6f
 80015ee:	bf0c      	ite	eq
 80015f0:	2308      	moveq	r3, #8
 80015f2:	230a      	movne	r3, #10
 80015f4:	2100      	movs	r1, #0
 80015f6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80015fa:	6865      	ldr	r5, [r4, #4]
 80015fc:	60a5      	str	r5, [r4, #8]
 80015fe:	2d00      	cmp	r5, #0
 8001600:	bfa2      	ittt	ge
 8001602:	6821      	ldrge	r1, [r4, #0]
 8001604:	f021 0104 	bicge.w	r1, r1, #4
 8001608:	6021      	strge	r1, [r4, #0]
 800160a:	b90e      	cbnz	r6, 8001610 <_printf_i+0x118>
 800160c:	2d00      	cmp	r5, #0
 800160e:	d04d      	beq.n	80016ac <_printf_i+0x1b4>
 8001610:	4615      	mov	r5, r2
 8001612:	fbb6 f1f3 	udiv	r1, r6, r3
 8001616:	fb03 6711 	mls	r7, r3, r1, r6
 800161a:	5dc7      	ldrb	r7, [r0, r7]
 800161c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001620:	4637      	mov	r7, r6
 8001622:	42bb      	cmp	r3, r7
 8001624:	460e      	mov	r6, r1
 8001626:	d9f4      	bls.n	8001612 <_printf_i+0x11a>
 8001628:	2b08      	cmp	r3, #8
 800162a:	d10b      	bne.n	8001644 <_printf_i+0x14c>
 800162c:	6823      	ldr	r3, [r4, #0]
 800162e:	07de      	lsls	r6, r3, #31
 8001630:	d508      	bpl.n	8001644 <_printf_i+0x14c>
 8001632:	6923      	ldr	r3, [r4, #16]
 8001634:	6861      	ldr	r1, [r4, #4]
 8001636:	4299      	cmp	r1, r3
 8001638:	bfde      	ittt	le
 800163a:	2330      	movle	r3, #48	; 0x30
 800163c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001640:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001644:	1b52      	subs	r2, r2, r5
 8001646:	6122      	str	r2, [r4, #16]
 8001648:	f8cd a000 	str.w	sl, [sp]
 800164c:	464b      	mov	r3, r9
 800164e:	aa03      	add	r2, sp, #12
 8001650:	4621      	mov	r1, r4
 8001652:	4640      	mov	r0, r8
 8001654:	f7ff fee2 	bl	800141c <_printf_common>
 8001658:	3001      	adds	r0, #1
 800165a:	d14c      	bne.n	80016f6 <_printf_i+0x1fe>
 800165c:	f04f 30ff 	mov.w	r0, #4294967295
 8001660:	b004      	add	sp, #16
 8001662:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001666:	4835      	ldr	r0, [pc, #212]	; (800173c <_printf_i+0x244>)
 8001668:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800166c:	6829      	ldr	r1, [r5, #0]
 800166e:	6823      	ldr	r3, [r4, #0]
 8001670:	f851 6b04 	ldr.w	r6, [r1], #4
 8001674:	6029      	str	r1, [r5, #0]
 8001676:	061d      	lsls	r5, r3, #24
 8001678:	d514      	bpl.n	80016a4 <_printf_i+0x1ac>
 800167a:	07df      	lsls	r7, r3, #31
 800167c:	bf44      	itt	mi
 800167e:	f043 0320 	orrmi.w	r3, r3, #32
 8001682:	6023      	strmi	r3, [r4, #0]
 8001684:	b91e      	cbnz	r6, 800168e <_printf_i+0x196>
 8001686:	6823      	ldr	r3, [r4, #0]
 8001688:	f023 0320 	bic.w	r3, r3, #32
 800168c:	6023      	str	r3, [r4, #0]
 800168e:	2310      	movs	r3, #16
 8001690:	e7b0      	b.n	80015f4 <_printf_i+0xfc>
 8001692:	6823      	ldr	r3, [r4, #0]
 8001694:	f043 0320 	orr.w	r3, r3, #32
 8001698:	6023      	str	r3, [r4, #0]
 800169a:	2378      	movs	r3, #120	; 0x78
 800169c:	4828      	ldr	r0, [pc, #160]	; (8001740 <_printf_i+0x248>)
 800169e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80016a2:	e7e3      	b.n	800166c <_printf_i+0x174>
 80016a4:	0659      	lsls	r1, r3, #25
 80016a6:	bf48      	it	mi
 80016a8:	b2b6      	uxthmi	r6, r6
 80016aa:	e7e6      	b.n	800167a <_printf_i+0x182>
 80016ac:	4615      	mov	r5, r2
 80016ae:	e7bb      	b.n	8001628 <_printf_i+0x130>
 80016b0:	682b      	ldr	r3, [r5, #0]
 80016b2:	6826      	ldr	r6, [r4, #0]
 80016b4:	6961      	ldr	r1, [r4, #20]
 80016b6:	1d18      	adds	r0, r3, #4
 80016b8:	6028      	str	r0, [r5, #0]
 80016ba:	0635      	lsls	r5, r6, #24
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	d501      	bpl.n	80016c4 <_printf_i+0x1cc>
 80016c0:	6019      	str	r1, [r3, #0]
 80016c2:	e002      	b.n	80016ca <_printf_i+0x1d2>
 80016c4:	0670      	lsls	r0, r6, #25
 80016c6:	d5fb      	bpl.n	80016c0 <_printf_i+0x1c8>
 80016c8:	8019      	strh	r1, [r3, #0]
 80016ca:	2300      	movs	r3, #0
 80016cc:	6123      	str	r3, [r4, #16]
 80016ce:	4615      	mov	r5, r2
 80016d0:	e7ba      	b.n	8001648 <_printf_i+0x150>
 80016d2:	682b      	ldr	r3, [r5, #0]
 80016d4:	1d1a      	adds	r2, r3, #4
 80016d6:	602a      	str	r2, [r5, #0]
 80016d8:	681d      	ldr	r5, [r3, #0]
 80016da:	6862      	ldr	r2, [r4, #4]
 80016dc:	2100      	movs	r1, #0
 80016de:	4628      	mov	r0, r5
 80016e0:	f7fe fdb6 	bl	8000250 <memchr>
 80016e4:	b108      	cbz	r0, 80016ea <_printf_i+0x1f2>
 80016e6:	1b40      	subs	r0, r0, r5
 80016e8:	6060      	str	r0, [r4, #4]
 80016ea:	6863      	ldr	r3, [r4, #4]
 80016ec:	6123      	str	r3, [r4, #16]
 80016ee:	2300      	movs	r3, #0
 80016f0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80016f4:	e7a8      	b.n	8001648 <_printf_i+0x150>
 80016f6:	6923      	ldr	r3, [r4, #16]
 80016f8:	462a      	mov	r2, r5
 80016fa:	4649      	mov	r1, r9
 80016fc:	4640      	mov	r0, r8
 80016fe:	47d0      	blx	sl
 8001700:	3001      	adds	r0, #1
 8001702:	d0ab      	beq.n	800165c <_printf_i+0x164>
 8001704:	6823      	ldr	r3, [r4, #0]
 8001706:	079b      	lsls	r3, r3, #30
 8001708:	d413      	bmi.n	8001732 <_printf_i+0x23a>
 800170a:	68e0      	ldr	r0, [r4, #12]
 800170c:	9b03      	ldr	r3, [sp, #12]
 800170e:	4298      	cmp	r0, r3
 8001710:	bfb8      	it	lt
 8001712:	4618      	movlt	r0, r3
 8001714:	e7a4      	b.n	8001660 <_printf_i+0x168>
 8001716:	2301      	movs	r3, #1
 8001718:	4632      	mov	r2, r6
 800171a:	4649      	mov	r1, r9
 800171c:	4640      	mov	r0, r8
 800171e:	47d0      	blx	sl
 8001720:	3001      	adds	r0, #1
 8001722:	d09b      	beq.n	800165c <_printf_i+0x164>
 8001724:	3501      	adds	r5, #1
 8001726:	68e3      	ldr	r3, [r4, #12]
 8001728:	9903      	ldr	r1, [sp, #12]
 800172a:	1a5b      	subs	r3, r3, r1
 800172c:	42ab      	cmp	r3, r5
 800172e:	dcf2      	bgt.n	8001716 <_printf_i+0x21e>
 8001730:	e7eb      	b.n	800170a <_printf_i+0x212>
 8001732:	2500      	movs	r5, #0
 8001734:	f104 0619 	add.w	r6, r4, #25
 8001738:	e7f5      	b.n	8001726 <_printf_i+0x22e>
 800173a:	bf00      	nop
 800173c:	08001bf7 	.word	0x08001bf7
 8001740:	08001c08 	.word	0x08001c08

08001744 <_read_r>:
 8001744:	b538      	push	{r3, r4, r5, lr}
 8001746:	4d07      	ldr	r5, [pc, #28]	; (8001764 <_read_r+0x20>)
 8001748:	4604      	mov	r4, r0
 800174a:	4608      	mov	r0, r1
 800174c:	4611      	mov	r1, r2
 800174e:	2200      	movs	r2, #0
 8001750:	602a      	str	r2, [r5, #0]
 8001752:	461a      	mov	r2, r3
 8001754:	f7fe fea5 	bl	80004a2 <_read>
 8001758:	1c43      	adds	r3, r0, #1
 800175a:	d102      	bne.n	8001762 <_read_r+0x1e>
 800175c:	682b      	ldr	r3, [r5, #0]
 800175e:	b103      	cbz	r3, 8001762 <_read_r+0x1e>
 8001760:	6023      	str	r3, [r4, #0]
 8001762:	bd38      	pop	{r3, r4, r5, pc}
 8001764:	20000148 	.word	0x20000148

08001768 <__swbuf_r>:
 8001768:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800176a:	460e      	mov	r6, r1
 800176c:	4614      	mov	r4, r2
 800176e:	4605      	mov	r5, r0
 8001770:	b118      	cbz	r0, 800177a <__swbuf_r+0x12>
 8001772:	6983      	ldr	r3, [r0, #24]
 8001774:	b90b      	cbnz	r3, 800177a <__swbuf_r+0x12>
 8001776:	f7ff f97d 	bl	8000a74 <__sinit>
 800177a:	4b21      	ldr	r3, [pc, #132]	; (8001800 <__swbuf_r+0x98>)
 800177c:	429c      	cmp	r4, r3
 800177e:	d12b      	bne.n	80017d8 <__swbuf_r+0x70>
 8001780:	686c      	ldr	r4, [r5, #4]
 8001782:	69a3      	ldr	r3, [r4, #24]
 8001784:	60a3      	str	r3, [r4, #8]
 8001786:	89a3      	ldrh	r3, [r4, #12]
 8001788:	071a      	lsls	r2, r3, #28
 800178a:	d52f      	bpl.n	80017ec <__swbuf_r+0x84>
 800178c:	6923      	ldr	r3, [r4, #16]
 800178e:	b36b      	cbz	r3, 80017ec <__swbuf_r+0x84>
 8001790:	6923      	ldr	r3, [r4, #16]
 8001792:	6820      	ldr	r0, [r4, #0]
 8001794:	1ac0      	subs	r0, r0, r3
 8001796:	6963      	ldr	r3, [r4, #20]
 8001798:	b2f6      	uxtb	r6, r6
 800179a:	4283      	cmp	r3, r0
 800179c:	4637      	mov	r7, r6
 800179e:	dc04      	bgt.n	80017aa <__swbuf_r+0x42>
 80017a0:	4621      	mov	r1, r4
 80017a2:	4628      	mov	r0, r5
 80017a4:	f7ff fc20 	bl	8000fe8 <_fflush_r>
 80017a8:	bb30      	cbnz	r0, 80017f8 <__swbuf_r+0x90>
 80017aa:	68a3      	ldr	r3, [r4, #8]
 80017ac:	3b01      	subs	r3, #1
 80017ae:	60a3      	str	r3, [r4, #8]
 80017b0:	6823      	ldr	r3, [r4, #0]
 80017b2:	1c5a      	adds	r2, r3, #1
 80017b4:	6022      	str	r2, [r4, #0]
 80017b6:	701e      	strb	r6, [r3, #0]
 80017b8:	6963      	ldr	r3, [r4, #20]
 80017ba:	3001      	adds	r0, #1
 80017bc:	4283      	cmp	r3, r0
 80017be:	d004      	beq.n	80017ca <__swbuf_r+0x62>
 80017c0:	89a3      	ldrh	r3, [r4, #12]
 80017c2:	07db      	lsls	r3, r3, #31
 80017c4:	d506      	bpl.n	80017d4 <__swbuf_r+0x6c>
 80017c6:	2e0a      	cmp	r6, #10
 80017c8:	d104      	bne.n	80017d4 <__swbuf_r+0x6c>
 80017ca:	4621      	mov	r1, r4
 80017cc:	4628      	mov	r0, r5
 80017ce:	f7ff fc0b 	bl	8000fe8 <_fflush_r>
 80017d2:	b988      	cbnz	r0, 80017f8 <__swbuf_r+0x90>
 80017d4:	4638      	mov	r0, r7
 80017d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80017d8:	4b0a      	ldr	r3, [pc, #40]	; (8001804 <__swbuf_r+0x9c>)
 80017da:	429c      	cmp	r4, r3
 80017dc:	d101      	bne.n	80017e2 <__swbuf_r+0x7a>
 80017de:	68ac      	ldr	r4, [r5, #8]
 80017e0:	e7cf      	b.n	8001782 <__swbuf_r+0x1a>
 80017e2:	4b09      	ldr	r3, [pc, #36]	; (8001808 <__swbuf_r+0xa0>)
 80017e4:	429c      	cmp	r4, r3
 80017e6:	bf08      	it	eq
 80017e8:	68ec      	ldreq	r4, [r5, #12]
 80017ea:	e7ca      	b.n	8001782 <__swbuf_r+0x1a>
 80017ec:	4621      	mov	r1, r4
 80017ee:	4628      	mov	r0, r5
 80017f0:	f000 f80c 	bl	800180c <__swsetup_r>
 80017f4:	2800      	cmp	r0, #0
 80017f6:	d0cb      	beq.n	8001790 <__swbuf_r+0x28>
 80017f8:	f04f 37ff 	mov.w	r7, #4294967295
 80017fc:	e7ea      	b.n	80017d4 <__swbuf_r+0x6c>
 80017fe:	bf00      	nop
 8001800:	08001af4 	.word	0x08001af4
 8001804:	08001b14 	.word	0x08001b14
 8001808:	08001ad4 	.word	0x08001ad4

0800180c <__swsetup_r>:
 800180c:	4b32      	ldr	r3, [pc, #200]	; (80018d8 <__swsetup_r+0xcc>)
 800180e:	b570      	push	{r4, r5, r6, lr}
 8001810:	681d      	ldr	r5, [r3, #0]
 8001812:	4606      	mov	r6, r0
 8001814:	460c      	mov	r4, r1
 8001816:	b125      	cbz	r5, 8001822 <__swsetup_r+0x16>
 8001818:	69ab      	ldr	r3, [r5, #24]
 800181a:	b913      	cbnz	r3, 8001822 <__swsetup_r+0x16>
 800181c:	4628      	mov	r0, r5
 800181e:	f7ff f929 	bl	8000a74 <__sinit>
 8001822:	4b2e      	ldr	r3, [pc, #184]	; (80018dc <__swsetup_r+0xd0>)
 8001824:	429c      	cmp	r4, r3
 8001826:	d10f      	bne.n	8001848 <__swsetup_r+0x3c>
 8001828:	686c      	ldr	r4, [r5, #4]
 800182a:	89a3      	ldrh	r3, [r4, #12]
 800182c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001830:	0719      	lsls	r1, r3, #28
 8001832:	d42c      	bmi.n	800188e <__swsetup_r+0x82>
 8001834:	06dd      	lsls	r5, r3, #27
 8001836:	d411      	bmi.n	800185c <__swsetup_r+0x50>
 8001838:	2309      	movs	r3, #9
 800183a:	6033      	str	r3, [r6, #0]
 800183c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001840:	81a3      	strh	r3, [r4, #12]
 8001842:	f04f 30ff 	mov.w	r0, #4294967295
 8001846:	e03e      	b.n	80018c6 <__swsetup_r+0xba>
 8001848:	4b25      	ldr	r3, [pc, #148]	; (80018e0 <__swsetup_r+0xd4>)
 800184a:	429c      	cmp	r4, r3
 800184c:	d101      	bne.n	8001852 <__swsetup_r+0x46>
 800184e:	68ac      	ldr	r4, [r5, #8]
 8001850:	e7eb      	b.n	800182a <__swsetup_r+0x1e>
 8001852:	4b24      	ldr	r3, [pc, #144]	; (80018e4 <__swsetup_r+0xd8>)
 8001854:	429c      	cmp	r4, r3
 8001856:	bf08      	it	eq
 8001858:	68ec      	ldreq	r4, [r5, #12]
 800185a:	e7e6      	b.n	800182a <__swsetup_r+0x1e>
 800185c:	0758      	lsls	r0, r3, #29
 800185e:	d512      	bpl.n	8001886 <__swsetup_r+0x7a>
 8001860:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001862:	b141      	cbz	r1, 8001876 <__swsetup_r+0x6a>
 8001864:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001868:	4299      	cmp	r1, r3
 800186a:	d002      	beq.n	8001872 <__swsetup_r+0x66>
 800186c:	4630      	mov	r0, r6
 800186e:	f7ff fc2f 	bl	80010d0 <_free_r>
 8001872:	2300      	movs	r3, #0
 8001874:	6363      	str	r3, [r4, #52]	; 0x34
 8001876:	89a3      	ldrh	r3, [r4, #12]
 8001878:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800187c:	81a3      	strh	r3, [r4, #12]
 800187e:	2300      	movs	r3, #0
 8001880:	6063      	str	r3, [r4, #4]
 8001882:	6923      	ldr	r3, [r4, #16]
 8001884:	6023      	str	r3, [r4, #0]
 8001886:	89a3      	ldrh	r3, [r4, #12]
 8001888:	f043 0308 	orr.w	r3, r3, #8
 800188c:	81a3      	strh	r3, [r4, #12]
 800188e:	6923      	ldr	r3, [r4, #16]
 8001890:	b94b      	cbnz	r3, 80018a6 <__swsetup_r+0x9a>
 8001892:	89a3      	ldrh	r3, [r4, #12]
 8001894:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001898:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800189c:	d003      	beq.n	80018a6 <__swsetup_r+0x9a>
 800189e:	4621      	mov	r1, r4
 80018a0:	4630      	mov	r0, r6
 80018a2:	f000 f84d 	bl	8001940 <__smakebuf_r>
 80018a6:	89a0      	ldrh	r0, [r4, #12]
 80018a8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80018ac:	f010 0301 	ands.w	r3, r0, #1
 80018b0:	d00a      	beq.n	80018c8 <__swsetup_r+0xbc>
 80018b2:	2300      	movs	r3, #0
 80018b4:	60a3      	str	r3, [r4, #8]
 80018b6:	6963      	ldr	r3, [r4, #20]
 80018b8:	425b      	negs	r3, r3
 80018ba:	61a3      	str	r3, [r4, #24]
 80018bc:	6923      	ldr	r3, [r4, #16]
 80018be:	b943      	cbnz	r3, 80018d2 <__swsetup_r+0xc6>
 80018c0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80018c4:	d1ba      	bne.n	800183c <__swsetup_r+0x30>
 80018c6:	bd70      	pop	{r4, r5, r6, pc}
 80018c8:	0781      	lsls	r1, r0, #30
 80018ca:	bf58      	it	pl
 80018cc:	6963      	ldrpl	r3, [r4, #20]
 80018ce:	60a3      	str	r3, [r4, #8]
 80018d0:	e7f4      	b.n	80018bc <__swsetup_r+0xb0>
 80018d2:	2000      	movs	r0, #0
 80018d4:	e7f7      	b.n	80018c6 <__swsetup_r+0xba>
 80018d6:	bf00      	nop
 80018d8:	2000000c 	.word	0x2000000c
 80018dc:	08001af4 	.word	0x08001af4
 80018e0:	08001b14 	.word	0x08001b14
 80018e4:	08001ad4 	.word	0x08001ad4

080018e8 <abort>:
 80018e8:	b508      	push	{r3, lr}
 80018ea:	2006      	movs	r0, #6
 80018ec:	f000 f890 	bl	8001a10 <raise>
 80018f0:	2001      	movs	r0, #1
 80018f2:	f000 f8d3 	bl	8001a9c <_exit>

080018f6 <__swhatbuf_r>:
 80018f6:	b570      	push	{r4, r5, r6, lr}
 80018f8:	460e      	mov	r6, r1
 80018fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80018fe:	2900      	cmp	r1, #0
 8001900:	b096      	sub	sp, #88	; 0x58
 8001902:	4614      	mov	r4, r2
 8001904:	461d      	mov	r5, r3
 8001906:	da08      	bge.n	800191a <__swhatbuf_r+0x24>
 8001908:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800190c:	2200      	movs	r2, #0
 800190e:	602a      	str	r2, [r5, #0]
 8001910:	061a      	lsls	r2, r3, #24
 8001912:	d410      	bmi.n	8001936 <__swhatbuf_r+0x40>
 8001914:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001918:	e00e      	b.n	8001938 <__swhatbuf_r+0x42>
 800191a:	466a      	mov	r2, sp
 800191c:	f000 f894 	bl	8001a48 <_fstat_r>
 8001920:	2800      	cmp	r0, #0
 8001922:	dbf1      	blt.n	8001908 <__swhatbuf_r+0x12>
 8001924:	9a01      	ldr	r2, [sp, #4]
 8001926:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800192a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800192e:	425a      	negs	r2, r3
 8001930:	415a      	adcs	r2, r3
 8001932:	602a      	str	r2, [r5, #0]
 8001934:	e7ee      	b.n	8001914 <__swhatbuf_r+0x1e>
 8001936:	2340      	movs	r3, #64	; 0x40
 8001938:	2000      	movs	r0, #0
 800193a:	6023      	str	r3, [r4, #0]
 800193c:	b016      	add	sp, #88	; 0x58
 800193e:	bd70      	pop	{r4, r5, r6, pc}

08001940 <__smakebuf_r>:
 8001940:	898b      	ldrh	r3, [r1, #12]
 8001942:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001944:	079d      	lsls	r5, r3, #30
 8001946:	4606      	mov	r6, r0
 8001948:	460c      	mov	r4, r1
 800194a:	d507      	bpl.n	800195c <__smakebuf_r+0x1c>
 800194c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001950:	6023      	str	r3, [r4, #0]
 8001952:	6123      	str	r3, [r4, #16]
 8001954:	2301      	movs	r3, #1
 8001956:	6163      	str	r3, [r4, #20]
 8001958:	b002      	add	sp, #8
 800195a:	bd70      	pop	{r4, r5, r6, pc}
 800195c:	ab01      	add	r3, sp, #4
 800195e:	466a      	mov	r2, sp
 8001960:	f7ff ffc9 	bl	80018f6 <__swhatbuf_r>
 8001964:	9900      	ldr	r1, [sp, #0]
 8001966:	4605      	mov	r5, r0
 8001968:	4630      	mov	r0, r6
 800196a:	f7ff f971 	bl	8000c50 <_malloc_r>
 800196e:	b948      	cbnz	r0, 8001984 <__smakebuf_r+0x44>
 8001970:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001974:	059a      	lsls	r2, r3, #22
 8001976:	d4ef      	bmi.n	8001958 <__smakebuf_r+0x18>
 8001978:	f023 0303 	bic.w	r3, r3, #3
 800197c:	f043 0302 	orr.w	r3, r3, #2
 8001980:	81a3      	strh	r3, [r4, #12]
 8001982:	e7e3      	b.n	800194c <__smakebuf_r+0xc>
 8001984:	4b0d      	ldr	r3, [pc, #52]	; (80019bc <__smakebuf_r+0x7c>)
 8001986:	62b3      	str	r3, [r6, #40]	; 0x28
 8001988:	89a3      	ldrh	r3, [r4, #12]
 800198a:	6020      	str	r0, [r4, #0]
 800198c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001990:	81a3      	strh	r3, [r4, #12]
 8001992:	9b00      	ldr	r3, [sp, #0]
 8001994:	6163      	str	r3, [r4, #20]
 8001996:	9b01      	ldr	r3, [sp, #4]
 8001998:	6120      	str	r0, [r4, #16]
 800199a:	b15b      	cbz	r3, 80019b4 <__smakebuf_r+0x74>
 800199c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80019a0:	4630      	mov	r0, r6
 80019a2:	f000 f863 	bl	8001a6c <_isatty_r>
 80019a6:	b128      	cbz	r0, 80019b4 <__smakebuf_r+0x74>
 80019a8:	89a3      	ldrh	r3, [r4, #12]
 80019aa:	f023 0303 	bic.w	r3, r3, #3
 80019ae:	f043 0301 	orr.w	r3, r3, #1
 80019b2:	81a3      	strh	r3, [r4, #12]
 80019b4:	89a0      	ldrh	r0, [r4, #12]
 80019b6:	4305      	orrs	r5, r0
 80019b8:	81a5      	strh	r5, [r4, #12]
 80019ba:	e7cd      	b.n	8001958 <__smakebuf_r+0x18>
 80019bc:	08000a0d 	.word	0x08000a0d

080019c0 <_raise_r>:
 80019c0:	291f      	cmp	r1, #31
 80019c2:	b538      	push	{r3, r4, r5, lr}
 80019c4:	4604      	mov	r4, r0
 80019c6:	460d      	mov	r5, r1
 80019c8:	d904      	bls.n	80019d4 <_raise_r+0x14>
 80019ca:	2316      	movs	r3, #22
 80019cc:	6003      	str	r3, [r0, #0]
 80019ce:	f04f 30ff 	mov.w	r0, #4294967295
 80019d2:	bd38      	pop	{r3, r4, r5, pc}
 80019d4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80019d6:	b112      	cbz	r2, 80019de <_raise_r+0x1e>
 80019d8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80019dc:	b94b      	cbnz	r3, 80019f2 <_raise_r+0x32>
 80019de:	4620      	mov	r0, r4
 80019e0:	f000 f830 	bl	8001a44 <_getpid_r>
 80019e4:	462a      	mov	r2, r5
 80019e6:	4601      	mov	r1, r0
 80019e8:	4620      	mov	r0, r4
 80019ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80019ee:	f000 b817 	b.w	8001a20 <_kill_r>
 80019f2:	2b01      	cmp	r3, #1
 80019f4:	d00a      	beq.n	8001a0c <_raise_r+0x4c>
 80019f6:	1c59      	adds	r1, r3, #1
 80019f8:	d103      	bne.n	8001a02 <_raise_r+0x42>
 80019fa:	2316      	movs	r3, #22
 80019fc:	6003      	str	r3, [r0, #0]
 80019fe:	2001      	movs	r0, #1
 8001a00:	e7e7      	b.n	80019d2 <_raise_r+0x12>
 8001a02:	2400      	movs	r4, #0
 8001a04:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8001a08:	4628      	mov	r0, r5
 8001a0a:	4798      	blx	r3
 8001a0c:	2000      	movs	r0, #0
 8001a0e:	e7e0      	b.n	80019d2 <_raise_r+0x12>

08001a10 <raise>:
 8001a10:	4b02      	ldr	r3, [pc, #8]	; (8001a1c <raise+0xc>)
 8001a12:	4601      	mov	r1, r0
 8001a14:	6818      	ldr	r0, [r3, #0]
 8001a16:	f7ff bfd3 	b.w	80019c0 <_raise_r>
 8001a1a:	bf00      	nop
 8001a1c:	2000000c 	.word	0x2000000c

08001a20 <_kill_r>:
 8001a20:	b538      	push	{r3, r4, r5, lr}
 8001a22:	4d07      	ldr	r5, [pc, #28]	; (8001a40 <_kill_r+0x20>)
 8001a24:	2300      	movs	r3, #0
 8001a26:	4604      	mov	r4, r0
 8001a28:	4608      	mov	r0, r1
 8001a2a:	4611      	mov	r1, r2
 8001a2c:	602b      	str	r3, [r5, #0]
 8001a2e:	f000 f82d 	bl	8001a8c <_kill>
 8001a32:	1c43      	adds	r3, r0, #1
 8001a34:	d102      	bne.n	8001a3c <_kill_r+0x1c>
 8001a36:	682b      	ldr	r3, [r5, #0]
 8001a38:	b103      	cbz	r3, 8001a3c <_kill_r+0x1c>
 8001a3a:	6023      	str	r3, [r4, #0]
 8001a3c:	bd38      	pop	{r3, r4, r5, pc}
 8001a3e:	bf00      	nop
 8001a40:	20000148 	.word	0x20000148

08001a44 <_getpid_r>:
 8001a44:	f7fe bdee 	b.w	8000624 <_getpid>

08001a48 <_fstat_r>:
 8001a48:	b538      	push	{r3, r4, r5, lr}
 8001a4a:	4d07      	ldr	r5, [pc, #28]	; (8001a68 <_fstat_r+0x20>)
 8001a4c:	2300      	movs	r3, #0
 8001a4e:	4604      	mov	r4, r0
 8001a50:	4608      	mov	r0, r1
 8001a52:	4611      	mov	r1, r2
 8001a54:	602b      	str	r3, [r5, #0]
 8001a56:	f7fe fe2c 	bl	80006b2 <_fstat>
 8001a5a:	1c43      	adds	r3, r0, #1
 8001a5c:	d102      	bne.n	8001a64 <_fstat_r+0x1c>
 8001a5e:	682b      	ldr	r3, [r5, #0]
 8001a60:	b103      	cbz	r3, 8001a64 <_fstat_r+0x1c>
 8001a62:	6023      	str	r3, [r4, #0]
 8001a64:	bd38      	pop	{r3, r4, r5, pc}
 8001a66:	bf00      	nop
 8001a68:	20000148 	.word	0x20000148

08001a6c <_isatty_r>:
 8001a6c:	b538      	push	{r3, r4, r5, lr}
 8001a6e:	4d06      	ldr	r5, [pc, #24]	; (8001a88 <_isatty_r+0x1c>)
 8001a70:	2300      	movs	r3, #0
 8001a72:	4604      	mov	r4, r0
 8001a74:	4608      	mov	r0, r1
 8001a76:	602b      	str	r3, [r5, #0]
 8001a78:	f7fe ff82 	bl	8000980 <_isatty>
 8001a7c:	1c43      	adds	r3, r0, #1
 8001a7e:	d102      	bne.n	8001a86 <_isatty_r+0x1a>
 8001a80:	682b      	ldr	r3, [r5, #0]
 8001a82:	b103      	cbz	r3, 8001a86 <_isatty_r+0x1a>
 8001a84:	6023      	str	r3, [r4, #0]
 8001a86:	bd38      	pop	{r3, r4, r5, pc}
 8001a88:	20000148 	.word	0x20000148

08001a8c <_kill>:
 8001a8c:	4b02      	ldr	r3, [pc, #8]	; (8001a98 <_kill+0xc>)
 8001a8e:	2258      	movs	r2, #88	; 0x58
 8001a90:	601a      	str	r2, [r3, #0]
 8001a92:	f04f 30ff 	mov.w	r0, #4294967295
 8001a96:	4770      	bx	lr
 8001a98:	20000148 	.word	0x20000148

08001a9c <_exit>:
 8001a9c:	e7fe      	b.n	8001a9c <_exit>
	...

08001aa0 <_init>:
 8001aa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001aa2:	bf00      	nop
 8001aa4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001aa6:	bc08      	pop	{r3}
 8001aa8:	469e      	mov	lr, r3
 8001aaa:	4770      	bx	lr

08001aac <_fini>:
 8001aac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001aae:	bf00      	nop
 8001ab0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001ab2:	bc08      	pop	{r3}
 8001ab4:	469e      	mov	lr, r3
 8001ab6:	4770      	bx	lr
