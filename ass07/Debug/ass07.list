
ass07.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001a40  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000188  08001be0  08001be0  00011be0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001d68  08001d68  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08001d68  08001d68  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001d68  08001d68  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001d68  08001d68  00011d68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001d6c  08001d6c  00011d6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08001d70  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000dc  20000070  08001de0  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000014c  08001de0  0002014c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000028d  00000000  00000000  000200a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000151  00000000  00000000  0002032d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000080  00000000  00000000  00020480  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000048  00000000  00000000  00020500  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001c06  00000000  00000000  00020548  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000757  00000000  00000000  0002214e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00007ba0  00000000  00000000  000228a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002a445  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ef8  00000000  00000000  0002a498  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         00000024  00000000  00000000  0002b390  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      0000003c  00000000  00000000  0002b3b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000070 	.word	0x20000070
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001bc8 	.word	0x08001bc8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000074 	.word	0x20000074
 80001dc:	08001bc8 	.word	0x08001bc8

080001e0 <multiply>:
	.globl power
	.text
	.thumb_func

multiply:
	MOVS.N R2, #0				// making variable for return value, R2 = m, R3 = i
 80001e0:	2200      	movs	r2, #0

080001e2 <check>:
check:
	CMP.N	R0, #0				// if A = 0
 80001e2:	2800      	cmp	r0, #0
	BNE.N 	loop				// als ie niet gelijk is aan 0, jump naar loop
 80001e4:	d101      	bne.n	80001ea <loop>
	MOVS.N 	R0, R2				// return M als return waarde
 80001e6:	0010      	movs	r0, r2
	BX.N	LR					// weten we niet helemaal zeker
 80001e8:	4770      	bx	lr

080001ea <loop>:
loop:
	ADD.N	R2, R2, R1			// m = m + b
 80001ea:	440a      	add	r2, r1
	SUBS.N	R0, #1				// A = A - 1
 80001ec:	3801      	subs	r0, #1
	B.N		check
 80001ee:	e7f8      	b.n	80001e2 <check>

080001f0 <power>:

power:
	PUSH.N 	{LR}
 80001f0:	b500      	push	{lr}
	MOVS.N	R2, #1
 80001f2:	2201      	movs	r2, #1
	CMP.N 	R1, #0
 80001f4:	2900      	cmp	r1, #0
	BNE.N	check_loop
 80001f6:	d101      	bne.n	80001fc <check_loop>
	MOVS.N 	R0, #1
 80001f8:	2001      	movs	r0, #1
	BX.N	LR						// volgorde: R0 = n, R1 = m, R2 = p
 80001fa:	4770      	bx	lr

080001fc <check_loop>:

check_loop:
	CMP.N	R1, #1
 80001fc:	2901      	cmp	r1, #1
	BEQ.N	return
 80001fe:	d016      	beq.n	800022e <return>

08000200 <while_loop>:
while_loop:
	MOVS.N	R3, #1					// r3 = 1
 8000200:	2301      	movs	r3, #1
	ANDS.N	R3, R3, R1				// R1 is even of oneven
 8000202:	400b      	ands	r3, r1
	CMP.N	R3, #1					//--> immediately lose function of R3
 8000204:	2b01      	cmp	r3, #1
	BNE.N	skip
 8000206:	d10a      	bne.n	800021e <skip>
	MOVS.N	R3, R1
 8000208:	000b      	movs	r3, r1
	MOVS.N	R1, R0
 800020a:	0001      	movs	r1, r0
	MOVS.N	R0, R2
 800020c:	0010      	movs	r0, r2
	MOVS.N	R2, R3					// volgorde: R0 = p, R1 = n, R2 = m, R3 = m
 800020e:	001a      	movs	r2, r3
	PUSH.N	{R1, R2, R3}			//--> push value of R1R2R3 on stack
 8000210:	b40e      	push	{r1, r2, r3}
	LDR.N	R2, =multiply
 8000212:	4a09      	ldr	r2, [pc, #36]	; (8000238 <return+0xa>)
	BLX.N	R2
 8000214:	4790      	blx	r2
	POP.N 	{R1, R2, R3}
 8000216:	bc0e      	pop	{r1, r2, r3}
	MOVS.N 	R2, R0
 8000218:	0002      	movs	r2, r0
	MOVS.N 	R0, R1
 800021a:	0008      	movs	r0, r1
	MOVS.N 	R1, R3					// volgorde: R0 = n, R1 = m, R2 = p, R3 = m
 800021c:	0019      	movs	r1, r3

0800021e <skip>:
skip:
	PUSH.N	{R1, R2}				// behoud waarde van m en p
 800021e:	b406      	push	{r1, r2}
	MOVS.N	R1, R0					// R0 en R1 zijn n
 8000220:	0001      	movs	r1, r0
	LDR.N	R2, =multiply
 8000222:	4a05      	ldr	r2, [pc, #20]	; (8000238 <return+0xa>)
	BLX.N	R2
 8000224:	4790      	blx	r2
	POP.N 	{R1, R2}				// volgorde: R0 = n, R1 = m, R2 = p, R3 = x
 8000226:	bc06      	pop	{r1, r2}
	LSRS.N	R1, R1, #1
 8000228:	0849      	lsrs	r1, r1, #1
	CMP.N	R1, #1
 800022a:	2901      	cmp	r1, #1
	BNE.N	while_loop
 800022c:	d1e8      	bne.n	8000200 <while_loop>

0800022e <return>:
return:
	MOVS.N 	R1, R2					// volgorde R0 = n, R1 = p, R2 = p, R3 = x
 800022e:	0011      	movs	r1, r2
	LDR.N	R2, =multiply
 8000230:	4a01      	ldr	r2, [pc, #4]	; (8000238 <return+0xa>)
	BLX.N	R2
 8000232:	4790      	blx	r2
	POP.N	{PC}
 8000234:	bd00      	pop	{pc}
	BX.N 	LR
 8000236:	4770      	bx	lr
	LDR.N	R2, =multiply
 8000238:	080001e1 	.word	0x080001e1

0800023c <strlen>:
 800023c:	4603      	mov	r3, r0
 800023e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000242:	2a00      	cmp	r2, #0
 8000244:	d1fb      	bne.n	800023e <strlen+0x2>
 8000246:	1a18      	subs	r0, r3, r0
 8000248:	3801      	subs	r0, #1
 800024a:	4770      	bx	lr
 800024c:	0000      	movs	r0, r0
	...

08000250 <memchr>:
 8000250:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000254:	2a10      	cmp	r2, #16
 8000256:	db2b      	blt.n	80002b0 <memchr+0x60>
 8000258:	f010 0f07 	tst.w	r0, #7
 800025c:	d008      	beq.n	8000270 <memchr+0x20>
 800025e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000262:	3a01      	subs	r2, #1
 8000264:	428b      	cmp	r3, r1
 8000266:	d02d      	beq.n	80002c4 <memchr+0x74>
 8000268:	f010 0f07 	tst.w	r0, #7
 800026c:	b342      	cbz	r2, 80002c0 <memchr+0x70>
 800026e:	d1f6      	bne.n	800025e <memchr+0xe>
 8000270:	b4f0      	push	{r4, r5, r6, r7}
 8000272:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000276:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800027a:	f022 0407 	bic.w	r4, r2, #7
 800027e:	f07f 0700 	mvns.w	r7, #0
 8000282:	2300      	movs	r3, #0
 8000284:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000288:	3c08      	subs	r4, #8
 800028a:	ea85 0501 	eor.w	r5, r5, r1
 800028e:	ea86 0601 	eor.w	r6, r6, r1
 8000292:	fa85 f547 	uadd8	r5, r5, r7
 8000296:	faa3 f587 	sel	r5, r3, r7
 800029a:	fa86 f647 	uadd8	r6, r6, r7
 800029e:	faa5 f687 	sel	r6, r5, r7
 80002a2:	b98e      	cbnz	r6, 80002c8 <memchr+0x78>
 80002a4:	d1ee      	bne.n	8000284 <memchr+0x34>
 80002a6:	bcf0      	pop	{r4, r5, r6, r7}
 80002a8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002ac:	f002 0207 	and.w	r2, r2, #7
 80002b0:	b132      	cbz	r2, 80002c0 <memchr+0x70>
 80002b2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002b6:	3a01      	subs	r2, #1
 80002b8:	ea83 0301 	eor.w	r3, r3, r1
 80002bc:	b113      	cbz	r3, 80002c4 <memchr+0x74>
 80002be:	d1f8      	bne.n	80002b2 <memchr+0x62>
 80002c0:	2000      	movs	r0, #0
 80002c2:	4770      	bx	lr
 80002c4:	3801      	subs	r0, #1
 80002c6:	4770      	bx	lr
 80002c8:	2d00      	cmp	r5, #0
 80002ca:	bf06      	itte	eq
 80002cc:	4635      	moveq	r5, r6
 80002ce:	3803      	subeq	r0, #3
 80002d0:	3807      	subne	r0, #7
 80002d2:	f015 0f01 	tst.w	r5, #1
 80002d6:	d107      	bne.n	80002e8 <memchr+0x98>
 80002d8:	3001      	adds	r0, #1
 80002da:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002de:	bf02      	ittt	eq
 80002e0:	3001      	addeq	r0, #1
 80002e2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002e6:	3001      	addeq	r0, #1
 80002e8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ea:	3801      	subs	r0, #1
 80002ec:	4770      	bx	lr
 80002ee:	bf00      	nop

080002f0 <tothepower>:
#include <stdlib.h>

extern int power(int a, int b);
extern int multiply(int a, int b);

int tothepower(int a, int b){
 80002f0:	b480      	push	{r7}
 80002f2:	b085      	sub	sp, #20
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	6078      	str	r0, [r7, #4]
 80002f8:	6039      	str	r1, [r7, #0]
	int result = 1;
 80002fa:	2301      	movs	r3, #1
 80002fc:	60fb      	str	r3, [r7, #12]
	for (int i = 0; i < b; i++){
 80002fe:	2300      	movs	r3, #0
 8000300:	60bb      	str	r3, [r7, #8]
 8000302:	e007      	b.n	8000314 <tothepower+0x24>
		result = result * a;
 8000304:	68fb      	ldr	r3, [r7, #12]
 8000306:	687a      	ldr	r2, [r7, #4]
 8000308:	fb02 f303 	mul.w	r3, r2, r3
 800030c:	60fb      	str	r3, [r7, #12]
	for (int i = 0; i < b; i++){
 800030e:	68bb      	ldr	r3, [r7, #8]
 8000310:	3301      	adds	r3, #1
 8000312:	60bb      	str	r3, [r7, #8]
 8000314:	68ba      	ldr	r2, [r7, #8]
 8000316:	683b      	ldr	r3, [r7, #0]
 8000318:	429a      	cmp	r2, r3
 800031a:	dbf3      	blt.n	8000304 <tothepower+0x14>
	}
	return result;
 800031c:	68fb      	ldr	r3, [r7, #12]
}
 800031e:	4618      	mov	r0, r3
 8000320:	3714      	adds	r7, #20
 8000322:	46bd      	mov	sp, r7
 8000324:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000328:	4770      	bx	lr
	...

0800032c <test_random_numbers>:

int test_random_numbers(int number_of_tests){
 800032c:	b580      	push	{r7, lr}
 800032e:	b088      	sub	sp, #32
 8000330:	af00      	add	r7, sp, #0
 8000332:	6078      	str	r0, [r7, #4]

	int succesful = 0;
 8000334:	2300      	movs	r3, #0
 8000336:	61fb      	str	r3, [r7, #28]
	int a = 0;
 8000338:	2300      	movs	r3, #0
 800033a:	617b      	str	r3, [r7, #20]
	int b = 0;
 800033c:	2300      	movs	r3, #0
 800033e:	613b      	str	r3, [r7, #16]
	int result_assembly = 0;
 8000340:	2300      	movs	r3, #0
 8000342:	60fb      	str	r3, [r7, #12]
	int result_c = 0;
 8000344:	2300      	movs	r3, #0
 8000346:	60bb      	str	r3, [r7, #8]

	for (int i = 0; i < number_of_tests; i++){
 8000348:	2300      	movs	r3, #0
 800034a:	61bb      	str	r3, [r7, #24]
 800034c:	e030      	b.n	80003b0 <test_random_numbers+0x84>
		a = rand() % 5;
 800034e:	f000 fd87 	bl	8000e60 <rand>
 8000352:	4602      	mov	r2, r0
 8000354:	4b1b      	ldr	r3, [pc, #108]	; (80003c4 <test_random_numbers+0x98>)
 8000356:	fb83 1302 	smull	r1, r3, r3, r2
 800035a:	1059      	asrs	r1, r3, #1
 800035c:	17d3      	asrs	r3, r2, #31
 800035e:	1ac9      	subs	r1, r1, r3
 8000360:	460b      	mov	r3, r1
 8000362:	009b      	lsls	r3, r3, #2
 8000364:	440b      	add	r3, r1
 8000366:	1ad3      	subs	r3, r2, r3
 8000368:	617b      	str	r3, [r7, #20]
		b = rand() % 10;
 800036a:	f000 fd79 	bl	8000e60 <rand>
 800036e:	4602      	mov	r2, r0
 8000370:	4b14      	ldr	r3, [pc, #80]	; (80003c4 <test_random_numbers+0x98>)
 8000372:	fb83 1302 	smull	r1, r3, r3, r2
 8000376:	1099      	asrs	r1, r3, #2
 8000378:	17d3      	asrs	r3, r2, #31
 800037a:	1ac9      	subs	r1, r1, r3
 800037c:	460b      	mov	r3, r1
 800037e:	009b      	lsls	r3, r3, #2
 8000380:	440b      	add	r3, r1
 8000382:	005b      	lsls	r3, r3, #1
 8000384:	1ad3      	subs	r3, r2, r3
 8000386:	613b      	str	r3, [r7, #16]

		result_assembly = power(a, b);
 8000388:	6939      	ldr	r1, [r7, #16]
 800038a:	6978      	ldr	r0, [r7, #20]
 800038c:	f7ff ff30 	bl	80001f0 <power>
 8000390:	60f8      	str	r0, [r7, #12]
		result_c = tothepower(a, b);
 8000392:	6939      	ldr	r1, [r7, #16]
 8000394:	6978      	ldr	r0, [r7, #20]
 8000396:	f7ff ffab 	bl	80002f0 <tothepower>
 800039a:	60b8      	str	r0, [r7, #8]

		if (result_assembly == result_c){
 800039c:	68fa      	ldr	r2, [r7, #12]
 800039e:	68bb      	ldr	r3, [r7, #8]
 80003a0:	429a      	cmp	r2, r3
 80003a2:	d102      	bne.n	80003aa <test_random_numbers+0x7e>
			succesful++;
 80003a4:	69fb      	ldr	r3, [r7, #28]
 80003a6:	3301      	adds	r3, #1
 80003a8:	61fb      	str	r3, [r7, #28]
	for (int i = 0; i < number_of_tests; i++){
 80003aa:	69bb      	ldr	r3, [r7, #24]
 80003ac:	3301      	adds	r3, #1
 80003ae:	61bb      	str	r3, [r7, #24]
 80003b0:	69ba      	ldr	r2, [r7, #24]
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	429a      	cmp	r2, r3
 80003b6:	dbca      	blt.n	800034e <test_random_numbers+0x22>
		}
	}
	return succesful;
 80003b8:	69fb      	ldr	r3, [r7, #28]
}
 80003ba:	4618      	mov	r0, r3
 80003bc:	3720      	adds	r7, #32
 80003be:	46bd      	mov	sp, r7
 80003c0:	bd80      	pop	{r7, pc}
 80003c2:	bf00      	nop
 80003c4:	66666667 	.word	0x66666667

080003c8 <test_limits>:

int test_limits(){
 80003c8:	b580      	push	{r7, lr}
 80003ca:	b084      	sub	sp, #16
 80003cc:	af00      	add	r7, sp, #0
	int succesful = 0;
 80003ce:	2300      	movs	r3, #0
 80003d0:	60fb      	str	r3, [r7, #12]
	int result_assembly = 0;
 80003d2:	2300      	movs	r3, #0
 80003d4:	60bb      	str	r3, [r7, #8]
	int result_c = 0;
 80003d6:	2300      	movs	r3, #0
 80003d8:	607b      	str	r3, [r7, #4]

	result_assembly = power(0, 0);
 80003da:	2100      	movs	r1, #0
 80003dc:	2000      	movs	r0, #0
 80003de:	f7ff ff07 	bl	80001f0 <power>
 80003e2:	60b8      	str	r0, [r7, #8]
	result_c = tothepower(0, 0);
 80003e4:	2100      	movs	r1, #0
 80003e6:	2000      	movs	r0, #0
 80003e8:	f7ff ff82 	bl	80002f0 <tothepower>
 80003ec:	6078      	str	r0, [r7, #4]

	if (result_assembly == result_c){
 80003ee:	68ba      	ldr	r2, [r7, #8]
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	429a      	cmp	r2, r3
 80003f4:	d102      	bne.n	80003fc <test_limits+0x34>
		succesful++;
 80003f6:	68fb      	ldr	r3, [r7, #12]
 80003f8:	3301      	adds	r3, #1
 80003fa:	60fb      	str	r3, [r7, #12]
	}

	result_assembly = power(1, 0);
 80003fc:	2100      	movs	r1, #0
 80003fe:	2001      	movs	r0, #1
 8000400:	f7ff fef6 	bl	80001f0 <power>
 8000404:	60b8      	str	r0, [r7, #8]
	result_c = tothepower(1, 0);
 8000406:	2100      	movs	r1, #0
 8000408:	2001      	movs	r0, #1
 800040a:	f7ff ff71 	bl	80002f0 <tothepower>
 800040e:	6078      	str	r0, [r7, #4]

	if (result_assembly == result_c){
 8000410:	68ba      	ldr	r2, [r7, #8]
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	429a      	cmp	r2, r3
 8000416:	d102      	bne.n	800041e <test_limits+0x56>
		succesful++;
 8000418:	68fb      	ldr	r3, [r7, #12]
 800041a:	3301      	adds	r3, #1
 800041c:	60fb      	str	r3, [r7, #12]
	}

	result_assembly = power(0, 1);
 800041e:	2101      	movs	r1, #1
 8000420:	2000      	movs	r0, #0
 8000422:	f7ff fee5 	bl	80001f0 <power>
 8000426:	60b8      	str	r0, [r7, #8]
	result_c = tothepower(0, 1);
 8000428:	2101      	movs	r1, #1
 800042a:	2000      	movs	r0, #0
 800042c:	f7ff ff60 	bl	80002f0 <tothepower>
 8000430:	6078      	str	r0, [r7, #4]

	if (result_assembly == result_c){
 8000432:	68ba      	ldr	r2, [r7, #8]
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	429a      	cmp	r2, r3
 8000438:	d102      	bne.n	8000440 <test_limits+0x78>
		succesful++;
 800043a:	68fb      	ldr	r3, [r7, #12]
 800043c:	3301      	adds	r3, #1
 800043e:	60fb      	str	r3, [r7, #12]
	}

	result_assembly = power(1, 1);
 8000440:	2101      	movs	r1, #1
 8000442:	2001      	movs	r0, #1
 8000444:	f7ff fed4 	bl	80001f0 <power>
 8000448:	60b8      	str	r0, [r7, #8]
	result_c = tothepower(1, 1);
 800044a:	2101      	movs	r1, #1
 800044c:	2001      	movs	r0, #1
 800044e:	f7ff ff4f 	bl	80002f0 <tothepower>
 8000452:	6078      	str	r0, [r7, #4]

	if (result_assembly == result_c){
 8000454:	68ba      	ldr	r2, [r7, #8]
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	429a      	cmp	r2, r3
 800045a:	d102      	bne.n	8000462 <test_limits+0x9a>
		succesful++;
 800045c:	68fb      	ldr	r3, [r7, #12]
 800045e:	3301      	adds	r3, #1
 8000460:	60fb      	str	r3, [r7, #12]
	}
	result_assembly = power(2, 31);
 8000462:	211f      	movs	r1, #31
 8000464:	2002      	movs	r0, #2
 8000466:	f7ff fec3 	bl	80001f0 <power>
 800046a:	60b8      	str	r0, [r7, #8]
	result_c = tothepower(2, 31);
 800046c:	211f      	movs	r1, #31
 800046e:	2002      	movs	r0, #2
 8000470:	f7ff ff3e 	bl	80002f0 <tothepower>
 8000474:	6078      	str	r0, [r7, #4]

	if (result_assembly == result_c){
 8000476:	68ba      	ldr	r2, [r7, #8]
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	429a      	cmp	r2, r3
 800047c:	d102      	bne.n	8000484 <test_limits+0xbc>
		succesful++;
 800047e:	68fb      	ldr	r3, [r7, #12]
 8000480:	3301      	adds	r3, #1
 8000482:	60fb      	str	r3, [r7, #12]
	}
	return succesful;
 8000484:	68fb      	ldr	r3, [r7, #12]
}
 8000486:	4618      	mov	r0, r3
 8000488:	3710      	adds	r7, #16
 800048a:	46bd      	mov	sp, r7
 800048c:	bd80      	pop	{r7, pc}
	...

08000490 <main>:

int main(void)
{
 8000490:	b590      	push	{r4, r7, lr}
 8000492:	b083      	sub	sp, #12
 8000494:	af00      	add	r7, sp, #0
	extern void initialise_monitor_handles(void);
	int tests_per_test = 20;
 8000496:	2314      	movs	r3, #20
 8000498:	607b      	str	r3, [r7, #4]
	initialise_monitor_handles();
 800049a:	f000 fa8d 	bl	80009b8 <initialise_monitor_handles>
	int succesful = 0;
 800049e:	2300      	movs	r3, #0
 80004a0:	603b      	str	r3, [r7, #0]

	succesful = test_random_numbers(tests_per_test) + test_limits();
 80004a2:	6878      	ldr	r0, [r7, #4]
 80004a4:	f7ff ff42 	bl	800032c <test_random_numbers>
 80004a8:	4604      	mov	r4, r0
 80004aa:	f7ff ff8d 	bl	80003c8 <test_limits>
 80004ae:	4603      	mov	r3, r0
 80004b0:	4423      	add	r3, r4
 80004b2:	603b      	str	r3, [r7, #0]

	printf("%d of the %d tests have succeeded\r\n", succesful, (tests_per_test + 5));
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	3305      	adds	r3, #5
 80004b8:	461a      	mov	r2, r3
 80004ba:	6839      	ldr	r1, [r7, #0]
 80004bc:	4803      	ldr	r0, [pc, #12]	; (80004cc <main+0x3c>)
 80004be:	f000 fcb7 	bl	8000e30 <iprintf>

    return 0;
 80004c2:	2300      	movs	r3, #0
}
 80004c4:	4618      	mov	r0, r3
 80004c6:	370c      	adds	r7, #12
 80004c8:	46bd      	mov	sp, r7
 80004ca:	bd90      	pop	{r4, r7, pc}
 80004cc:	08001be0 	.word	0x08001be0

080004d0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 80004d0:	f8df d030 	ldr.w	sp, [pc, #48]	; 8000504 <main_has_returned+0x2>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80004d4:	480c      	ldr	r0, [pc, #48]	; (8000508 <main_has_returned+0x6>)
  ldr r1, =_edata
 80004d6:	490d      	ldr	r1, [pc, #52]	; (800050c <main_has_returned+0xa>)
  ldr r2, =_sidata
 80004d8:	4a0d      	ldr	r2, [pc, #52]	; (8000510 <main_has_returned+0xe>)
  movs r3, #0
 80004da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004dc:	e002      	b.n	80004e4 <LoopCopyDataInit>

080004de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004e2:	3304      	adds	r3, #4

080004e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004e8:	d3f9      	bcc.n	80004de <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004ea:	4a0a      	ldr	r2, [pc, #40]	; (8000514 <main_has_returned+0x12>)
  ldr r4, =_ebss
 80004ec:	4c0a      	ldr	r4, [pc, #40]	; (8000518 <main_has_returned+0x16>)
  movs r3, #0
 80004ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004f0:	e001      	b.n	80004f6 <LoopFillZerobss>

080004f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004f4:	3204      	adds	r2, #4

080004f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004f8:	d3fb      	bcc.n	80004f2 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80004fa:	f000 fbd5 	bl	8000ca8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80004fe:	f7ff ffc7 	bl	8000490 <main>

08000502 <main_has_returned>:
main_has_returned:
  b  main_has_returned // endless loop
 8000502:	e7fe      	b.n	8000502 <main_has_returned>
  ldr   sp, =_estack    		 /* set stack pointer */
 8000504:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000508:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800050c:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 8000510:	08001d70 	.word	0x08001d70
  ldr r2, =_sbss
 8000514:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 8000518:	2000014c 	.word	0x2000014c

0800051c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800051c:	e7fe      	b.n	800051c <ADC_IRQHandler>
	...

08000520 <findslot>:
 8000520:	4b0a      	ldr	r3, [pc, #40]	; (800054c <findslot+0x2c>)
 8000522:	b510      	push	{r4, lr}
 8000524:	4604      	mov	r4, r0
 8000526:	6818      	ldr	r0, [r3, #0]
 8000528:	b118      	cbz	r0, 8000532 <findslot+0x12>
 800052a:	6983      	ldr	r3, [r0, #24]
 800052c:	b90b      	cbnz	r3, 8000532 <findslot+0x12>
 800052e:	f000 fb1d 	bl	8000b6c <__sinit>
 8000532:	2c13      	cmp	r4, #19
 8000534:	d807      	bhi.n	8000546 <findslot+0x26>
 8000536:	4806      	ldr	r0, [pc, #24]	; (8000550 <findslot+0x30>)
 8000538:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 800053c:	3201      	adds	r2, #1
 800053e:	d002      	beq.n	8000546 <findslot+0x26>
 8000540:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8000544:	bd10      	pop	{r4, pc}
 8000546:	2000      	movs	r0, #0
 8000548:	e7fc      	b.n	8000544 <findslot+0x24>
 800054a:	bf00      	nop
 800054c:	2000000c 	.word	0x2000000c
 8000550:	2000009c 	.word	0x2000009c

08000554 <error>:
 8000554:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000556:	4604      	mov	r4, r0
 8000558:	f000 faaa 	bl	8000ab0 <__errno>
 800055c:	2613      	movs	r6, #19
 800055e:	4605      	mov	r5, r0
 8000560:	2700      	movs	r7, #0
 8000562:	4630      	mov	r0, r6
 8000564:	4639      	mov	r1, r7
 8000566:	beab      	bkpt	0x00ab
 8000568:	4606      	mov	r6, r0
 800056a:	602e      	str	r6, [r5, #0]
 800056c:	4620      	mov	r0, r4
 800056e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000570 <checkerror>:
 8000570:	1c43      	adds	r3, r0, #1
 8000572:	d101      	bne.n	8000578 <checkerror+0x8>
 8000574:	f7ff bfee 	b.w	8000554 <error>
 8000578:	4770      	bx	lr

0800057a <_swiread>:
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	b085      	sub	sp, #20
 800057e:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8000582:	9203      	str	r2, [sp, #12]
 8000584:	2406      	movs	r4, #6
 8000586:	ad01      	add	r5, sp, #4
 8000588:	4620      	mov	r0, r4
 800058a:	4629      	mov	r1, r5
 800058c:	beab      	bkpt	0x00ab
 800058e:	4604      	mov	r4, r0
 8000590:	4620      	mov	r0, r4
 8000592:	f7ff ffed 	bl	8000570 <checkerror>
 8000596:	b005      	add	sp, #20
 8000598:	bd30      	pop	{r4, r5, pc}

0800059a <_read>:
 800059a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800059c:	4615      	mov	r5, r2
 800059e:	9101      	str	r1, [sp, #4]
 80005a0:	f7ff ffbe 	bl	8000520 <findslot>
 80005a4:	9901      	ldr	r1, [sp, #4]
 80005a6:	4604      	mov	r4, r0
 80005a8:	b938      	cbnz	r0, 80005ba <_read+0x20>
 80005aa:	f000 fa81 	bl	8000ab0 <__errno>
 80005ae:	2309      	movs	r3, #9
 80005b0:	6003      	str	r3, [r0, #0]
 80005b2:	f04f 30ff 	mov.w	r0, #4294967295
 80005b6:	b003      	add	sp, #12
 80005b8:	bd30      	pop	{r4, r5, pc}
 80005ba:	6800      	ldr	r0, [r0, #0]
 80005bc:	462a      	mov	r2, r5
 80005be:	f7ff ffdc 	bl	800057a <_swiread>
 80005c2:	1c43      	adds	r3, r0, #1
 80005c4:	d0f7      	beq.n	80005b6 <_read+0x1c>
 80005c6:	6863      	ldr	r3, [r4, #4]
 80005c8:	1a2a      	subs	r2, r5, r0
 80005ca:	4413      	add	r3, r2
 80005cc:	6063      	str	r3, [r4, #4]
 80005ce:	4610      	mov	r0, r2
 80005d0:	e7f1      	b.n	80005b6 <_read+0x1c>

080005d2 <_swilseek>:
 80005d2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80005d4:	460c      	mov	r4, r1
 80005d6:	4616      	mov	r6, r2
 80005d8:	f7ff ffa2 	bl	8000520 <findslot>
 80005dc:	4605      	mov	r5, r0
 80005de:	b940      	cbnz	r0, 80005f2 <_swilseek+0x20>
 80005e0:	f000 fa66 	bl	8000ab0 <__errno>
 80005e4:	2309      	movs	r3, #9
 80005e6:	6003      	str	r3, [r0, #0]
 80005e8:	f04f 34ff 	mov.w	r4, #4294967295
 80005ec:	4620      	mov	r0, r4
 80005ee:	b003      	add	sp, #12
 80005f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005f2:	2e02      	cmp	r6, #2
 80005f4:	d903      	bls.n	80005fe <_swilseek+0x2c>
 80005f6:	f000 fa5b 	bl	8000ab0 <__errno>
 80005fa:	2316      	movs	r3, #22
 80005fc:	e7f3      	b.n	80005e6 <_swilseek+0x14>
 80005fe:	2e01      	cmp	r6, #1
 8000600:	d112      	bne.n	8000628 <_swilseek+0x56>
 8000602:	6843      	ldr	r3, [r0, #4]
 8000604:	18e4      	adds	r4, r4, r3
 8000606:	d4f6      	bmi.n	80005f6 <_swilseek+0x24>
 8000608:	682b      	ldr	r3, [r5, #0]
 800060a:	260a      	movs	r6, #10
 800060c:	e9cd 3400 	strd	r3, r4, [sp]
 8000610:	466f      	mov	r7, sp
 8000612:	4630      	mov	r0, r6
 8000614:	4639      	mov	r1, r7
 8000616:	beab      	bkpt	0x00ab
 8000618:	4606      	mov	r6, r0
 800061a:	4630      	mov	r0, r6
 800061c:	f7ff ffa8 	bl	8000570 <checkerror>
 8000620:	2800      	cmp	r0, #0
 8000622:	dbe1      	blt.n	80005e8 <_swilseek+0x16>
 8000624:	606c      	str	r4, [r5, #4]
 8000626:	e7e1      	b.n	80005ec <_swilseek+0x1a>
 8000628:	2e02      	cmp	r6, #2
 800062a:	d1ed      	bne.n	8000608 <_swilseek+0x36>
 800062c:	6803      	ldr	r3, [r0, #0]
 800062e:	9300      	str	r3, [sp, #0]
 8000630:	260c      	movs	r6, #12
 8000632:	466f      	mov	r7, sp
 8000634:	4630      	mov	r0, r6
 8000636:	4639      	mov	r1, r7
 8000638:	beab      	bkpt	0x00ab
 800063a:	4606      	mov	r6, r0
 800063c:	4630      	mov	r0, r6
 800063e:	f7ff ff97 	bl	8000570 <checkerror>
 8000642:	1c43      	adds	r3, r0, #1
 8000644:	d0d0      	beq.n	80005e8 <_swilseek+0x16>
 8000646:	4404      	add	r4, r0
 8000648:	e7de      	b.n	8000608 <_swilseek+0x36>

0800064a <_lseek>:
 800064a:	f7ff bfc2 	b.w	80005d2 <_swilseek>

0800064e <_swiwrite>:
 800064e:	b530      	push	{r4, r5, lr}
 8000650:	b085      	sub	sp, #20
 8000652:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8000656:	9203      	str	r2, [sp, #12]
 8000658:	2405      	movs	r4, #5
 800065a:	ad01      	add	r5, sp, #4
 800065c:	4620      	mov	r0, r4
 800065e:	4629      	mov	r1, r5
 8000660:	beab      	bkpt	0x00ab
 8000662:	4604      	mov	r4, r0
 8000664:	4620      	mov	r0, r4
 8000666:	f7ff ff83 	bl	8000570 <checkerror>
 800066a:	b005      	add	sp, #20
 800066c:	bd30      	pop	{r4, r5, pc}

0800066e <_write>:
 800066e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000670:	4615      	mov	r5, r2
 8000672:	9101      	str	r1, [sp, #4]
 8000674:	f7ff ff54 	bl	8000520 <findslot>
 8000678:	9901      	ldr	r1, [sp, #4]
 800067a:	4604      	mov	r4, r0
 800067c:	b930      	cbnz	r0, 800068c <_write+0x1e>
 800067e:	f000 fa17 	bl	8000ab0 <__errno>
 8000682:	2309      	movs	r3, #9
 8000684:	6003      	str	r3, [r0, #0]
 8000686:	f04f 30ff 	mov.w	r0, #4294967295
 800068a:	e012      	b.n	80006b2 <_write+0x44>
 800068c:	6800      	ldr	r0, [r0, #0]
 800068e:	462a      	mov	r2, r5
 8000690:	f7ff ffdd 	bl	800064e <_swiwrite>
 8000694:	2800      	cmp	r0, #0
 8000696:	dbf6      	blt.n	8000686 <_write+0x18>
 8000698:	6862      	ldr	r2, [r4, #4]
 800069a:	1a2b      	subs	r3, r5, r0
 800069c:	441a      	add	r2, r3
 800069e:	42a8      	cmp	r0, r5
 80006a0:	6062      	str	r2, [r4, #4]
 80006a2:	d105      	bne.n	80006b0 <_write+0x42>
 80006a4:	2000      	movs	r0, #0
 80006a6:	b003      	add	sp, #12
 80006a8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80006ac:	f7ff bf52 	b.w	8000554 <error>
 80006b0:	4618      	mov	r0, r3
 80006b2:	b003      	add	sp, #12
 80006b4:	bd30      	pop	{r4, r5, pc}

080006b6 <_swiclose>:
 80006b6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80006b8:	2402      	movs	r4, #2
 80006ba:	9001      	str	r0, [sp, #4]
 80006bc:	ad01      	add	r5, sp, #4
 80006be:	4620      	mov	r0, r4
 80006c0:	4629      	mov	r1, r5
 80006c2:	beab      	bkpt	0x00ab
 80006c4:	4604      	mov	r4, r0
 80006c6:	4620      	mov	r0, r4
 80006c8:	f7ff ff52 	bl	8000570 <checkerror>
 80006cc:	b003      	add	sp, #12
 80006ce:	bd30      	pop	{r4, r5, pc}

080006d0 <_close>:
 80006d0:	b538      	push	{r3, r4, r5, lr}
 80006d2:	4605      	mov	r5, r0
 80006d4:	f7ff ff24 	bl	8000520 <findslot>
 80006d8:	4604      	mov	r4, r0
 80006da:	b930      	cbnz	r0, 80006ea <_close+0x1a>
 80006dc:	f000 f9e8 	bl	8000ab0 <__errno>
 80006e0:	2309      	movs	r3, #9
 80006e2:	6003      	str	r3, [r0, #0]
 80006e4:	f04f 30ff 	mov.w	r0, #4294967295
 80006e8:	bd38      	pop	{r3, r4, r5, pc}
 80006ea:	3d01      	subs	r5, #1
 80006ec:	2d01      	cmp	r5, #1
 80006ee:	d809      	bhi.n	8000704 <_close+0x34>
 80006f0:	4b09      	ldr	r3, [pc, #36]	; (8000718 <_close+0x48>)
 80006f2:	689a      	ldr	r2, [r3, #8]
 80006f4:	691b      	ldr	r3, [r3, #16]
 80006f6:	429a      	cmp	r2, r3
 80006f8:	d104      	bne.n	8000704 <_close+0x34>
 80006fa:	f04f 33ff 	mov.w	r3, #4294967295
 80006fe:	6003      	str	r3, [r0, #0]
 8000700:	2000      	movs	r0, #0
 8000702:	e7f1      	b.n	80006e8 <_close+0x18>
 8000704:	6820      	ldr	r0, [r4, #0]
 8000706:	f7ff ffd6 	bl	80006b6 <_swiclose>
 800070a:	2800      	cmp	r0, #0
 800070c:	d1ec      	bne.n	80006e8 <_close+0x18>
 800070e:	f04f 33ff 	mov.w	r3, #4294967295
 8000712:	6023      	str	r3, [r4, #0]
 8000714:	e7e8      	b.n	80006e8 <_close+0x18>
 8000716:	bf00      	nop
 8000718:	2000009c 	.word	0x2000009c

0800071c <_getpid>:
 800071c:	2001      	movs	r0, #1
 800071e:	4770      	bx	lr

08000720 <_sbrk>:
 8000720:	4a0d      	ldr	r2, [pc, #52]	; (8000758 <_sbrk+0x38>)
 8000722:	6811      	ldr	r1, [r2, #0]
 8000724:	b510      	push	{r4, lr}
 8000726:	4603      	mov	r3, r0
 8000728:	b909      	cbnz	r1, 800072e <_sbrk+0xe>
 800072a:	490c      	ldr	r1, [pc, #48]	; (800075c <_sbrk+0x3c>)
 800072c:	6011      	str	r1, [r2, #0]
 800072e:	6810      	ldr	r0, [r2, #0]
 8000730:	4669      	mov	r1, sp
 8000732:	4403      	add	r3, r0
 8000734:	428b      	cmp	r3, r1
 8000736:	d806      	bhi.n	8000746 <_sbrk+0x26>
 8000738:	4909      	ldr	r1, [pc, #36]	; (8000760 <_sbrk+0x40>)
 800073a:	4c0a      	ldr	r4, [pc, #40]	; (8000764 <_sbrk+0x44>)
 800073c:	6809      	ldr	r1, [r1, #0]
 800073e:	42a1      	cmp	r1, r4
 8000740:	d008      	beq.n	8000754 <_sbrk+0x34>
 8000742:	428b      	cmp	r3, r1
 8000744:	d906      	bls.n	8000754 <_sbrk+0x34>
 8000746:	f000 f9b3 	bl	8000ab0 <__errno>
 800074a:	230c      	movs	r3, #12
 800074c:	6003      	str	r3, [r0, #0]
 800074e:	f04f 30ff 	mov.w	r0, #4294967295
 8000752:	bd10      	pop	{r4, pc}
 8000754:	6013      	str	r3, [r2, #0]
 8000756:	e7fc      	b.n	8000752 <_sbrk+0x32>
 8000758:	2000008c 	.word	0x2000008c
 800075c:	20000150 	.word	0x20000150
 8000760:	20000000 	.word	0x20000000
 8000764:	cafedead 	.word	0xcafedead

08000768 <_swistat>:
 8000768:	b570      	push	{r4, r5, r6, lr}
 800076a:	460c      	mov	r4, r1
 800076c:	f7ff fed8 	bl	8000520 <findslot>
 8000770:	4605      	mov	r5, r0
 8000772:	b930      	cbnz	r0, 8000782 <_swistat+0x1a>
 8000774:	f000 f99c 	bl	8000ab0 <__errno>
 8000778:	2309      	movs	r3, #9
 800077a:	6003      	str	r3, [r0, #0]
 800077c:	f04f 30ff 	mov.w	r0, #4294967295
 8000780:	bd70      	pop	{r4, r5, r6, pc}
 8000782:	6863      	ldr	r3, [r4, #4]
 8000784:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000788:	6063      	str	r3, [r4, #4]
 800078a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800078e:	64a3      	str	r3, [r4, #72]	; 0x48
 8000790:	260c      	movs	r6, #12
 8000792:	4630      	mov	r0, r6
 8000794:	4629      	mov	r1, r5
 8000796:	beab      	bkpt	0x00ab
 8000798:	4605      	mov	r5, r0
 800079a:	4628      	mov	r0, r5
 800079c:	f7ff fee8 	bl	8000570 <checkerror>
 80007a0:	1c43      	adds	r3, r0, #1
 80007a2:	bf1c      	itt	ne
 80007a4:	6120      	strne	r0, [r4, #16]
 80007a6:	2000      	movne	r0, #0
 80007a8:	e7ea      	b.n	8000780 <_swistat+0x18>

080007aa <_fstat>:
 80007aa:	460b      	mov	r3, r1
 80007ac:	b510      	push	{r4, lr}
 80007ae:	2100      	movs	r1, #0
 80007b0:	4604      	mov	r4, r0
 80007b2:	2258      	movs	r2, #88	; 0x58
 80007b4:	4618      	mov	r0, r3
 80007b6:	f000 fa9e 	bl	8000cf6 <memset>
 80007ba:	4601      	mov	r1, r0
 80007bc:	4620      	mov	r0, r4
 80007be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007c2:	f7ff bfd1 	b.w	8000768 <_swistat>

080007c6 <_stat>:
 80007c6:	b538      	push	{r3, r4, r5, lr}
 80007c8:	460d      	mov	r5, r1
 80007ca:	4604      	mov	r4, r0
 80007cc:	2258      	movs	r2, #88	; 0x58
 80007ce:	2100      	movs	r1, #0
 80007d0:	4628      	mov	r0, r5
 80007d2:	f000 fa90 	bl	8000cf6 <memset>
 80007d6:	4620      	mov	r0, r4
 80007d8:	2100      	movs	r1, #0
 80007da:	f000 f811 	bl	8000800 <_swiopen>
 80007de:	1c43      	adds	r3, r0, #1
 80007e0:	4604      	mov	r4, r0
 80007e2:	d00b      	beq.n	80007fc <_stat+0x36>
 80007e4:	686b      	ldr	r3, [r5, #4]
 80007e6:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 80007ea:	606b      	str	r3, [r5, #4]
 80007ec:	4629      	mov	r1, r5
 80007ee:	f7ff ffbb 	bl	8000768 <_swistat>
 80007f2:	4605      	mov	r5, r0
 80007f4:	4620      	mov	r0, r4
 80007f6:	f7ff ff6b 	bl	80006d0 <_close>
 80007fa:	462c      	mov	r4, r5
 80007fc:	4620      	mov	r0, r4
 80007fe:	bd38      	pop	{r3, r4, r5, pc}

08000800 <_swiopen>:
 8000800:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000804:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80008b0 <_swiopen+0xb0>
 8000808:	b097      	sub	sp, #92	; 0x5c
 800080a:	4607      	mov	r7, r0
 800080c:	460e      	mov	r6, r1
 800080e:	2500      	movs	r5, #0
 8000810:	f858 4035 	ldr.w	r4, [r8, r5, lsl #3]
 8000814:	1c61      	adds	r1, r4, #1
 8000816:	d037      	beq.n	8000888 <_swiopen+0x88>
 8000818:	3501      	adds	r5, #1
 800081a:	2d14      	cmp	r5, #20
 800081c:	d1f8      	bne.n	8000810 <_swiopen+0x10>
 800081e:	f000 f947 	bl	8000ab0 <__errno>
 8000822:	2318      	movs	r3, #24
 8000824:	6003      	str	r3, [r0, #0]
 8000826:	f04f 34ff 	mov.w	r4, #4294967295
 800082a:	e03d      	b.n	80008a8 <_swiopen+0xa8>
 800082c:	f3c6 4400 	ubfx	r4, r6, #16, #1
 8000830:	f240 6301 	movw	r3, #1537	; 0x601
 8000834:	07b2      	lsls	r2, r6, #30
 8000836:	bf48      	it	mi
 8000838:	f044 0402 	orrmi.w	r4, r4, #2
 800083c:	421e      	tst	r6, r3
 800083e:	bf18      	it	ne
 8000840:	f044 0404 	orrne.w	r4, r4, #4
 8000844:	0733      	lsls	r3, r6, #28
 8000846:	bf48      	it	mi
 8000848:	f024 0404 	bicmi.w	r4, r4, #4
 800084c:	4638      	mov	r0, r7
 800084e:	bf48      	it	mi
 8000850:	f044 0408 	orrmi.w	r4, r4, #8
 8000854:	9700      	str	r7, [sp, #0]
 8000856:	f7ff fcf1 	bl	800023c <strlen>
 800085a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800085e:	2401      	movs	r4, #1
 8000860:	4620      	mov	r0, r4
 8000862:	4649      	mov	r1, r9
 8000864:	beab      	bkpt	0x00ab
 8000866:	4604      	mov	r4, r0
 8000868:	2c00      	cmp	r4, #0
 800086a:	db08      	blt.n	800087e <_swiopen+0x7e>
 800086c:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 8000870:	eb08 08c5 	add.w	r8, r8, r5, lsl #3
 8000874:	2300      	movs	r3, #0
 8000876:	f8c8 3004 	str.w	r3, [r8, #4]
 800087a:	462c      	mov	r4, r5
 800087c:	e014      	b.n	80008a8 <_swiopen+0xa8>
 800087e:	4620      	mov	r0, r4
 8000880:	f7ff fe68 	bl	8000554 <error>
 8000884:	4604      	mov	r4, r0
 8000886:	e00f      	b.n	80008a8 <_swiopen+0xa8>
 8000888:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 800088c:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8000890:	46e9      	mov	r9, sp
 8000892:	d1cb      	bne.n	800082c <_swiopen+0x2c>
 8000894:	4649      	mov	r1, r9
 8000896:	4638      	mov	r0, r7
 8000898:	f7ff ff95 	bl	80007c6 <_stat>
 800089c:	3001      	adds	r0, #1
 800089e:	d0c5      	beq.n	800082c <_swiopen+0x2c>
 80008a0:	f000 f906 	bl	8000ab0 <__errno>
 80008a4:	2311      	movs	r3, #17
 80008a6:	6003      	str	r3, [r0, #0]
 80008a8:	4620      	mov	r0, r4
 80008aa:	b017      	add	sp, #92	; 0x5c
 80008ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80008b0:	2000009c 	.word	0x2000009c

080008b4 <_get_semihosting_exts>:
 80008b4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80008b8:	4606      	mov	r6, r0
 80008ba:	460f      	mov	r7, r1
 80008bc:	482a      	ldr	r0, [pc, #168]	; (8000968 <_get_semihosting_exts+0xb4>)
 80008be:	2100      	movs	r1, #0
 80008c0:	4615      	mov	r5, r2
 80008c2:	f7ff ff9d 	bl	8000800 <_swiopen>
 80008c6:	462a      	mov	r2, r5
 80008c8:	4604      	mov	r4, r0
 80008ca:	2100      	movs	r1, #0
 80008cc:	4630      	mov	r0, r6
 80008ce:	f000 fa12 	bl	8000cf6 <memset>
 80008d2:	1c63      	adds	r3, r4, #1
 80008d4:	d016      	beq.n	8000904 <_get_semihosting_exts+0x50>
 80008d6:	4620      	mov	r0, r4
 80008d8:	f7ff fe22 	bl	8000520 <findslot>
 80008dc:	f04f 090c 	mov.w	r9, #12
 80008e0:	4680      	mov	r8, r0
 80008e2:	4648      	mov	r0, r9
 80008e4:	4641      	mov	r1, r8
 80008e6:	beab      	bkpt	0x00ab
 80008e8:	4680      	mov	r8, r0
 80008ea:	4640      	mov	r0, r8
 80008ec:	f7ff fe40 	bl	8000570 <checkerror>
 80008f0:	2803      	cmp	r0, #3
 80008f2:	dd02      	ble.n	80008fa <_get_semihosting_exts+0x46>
 80008f4:	1ec3      	subs	r3, r0, #3
 80008f6:	42ab      	cmp	r3, r5
 80008f8:	dc08      	bgt.n	800090c <_get_semihosting_exts+0x58>
 80008fa:	4620      	mov	r0, r4
 80008fc:	f7ff fee8 	bl	80006d0 <_close>
 8000900:	f04f 34ff 	mov.w	r4, #4294967295
 8000904:	4620      	mov	r0, r4
 8000906:	b003      	add	sp, #12
 8000908:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800090c:	2204      	movs	r2, #4
 800090e:	eb0d 0102 	add.w	r1, sp, r2
 8000912:	4620      	mov	r0, r4
 8000914:	f7ff fe41 	bl	800059a <_read>
 8000918:	2803      	cmp	r0, #3
 800091a:	ddee      	ble.n	80008fa <_get_semihosting_exts+0x46>
 800091c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000920:	2b53      	cmp	r3, #83	; 0x53
 8000922:	d1ea      	bne.n	80008fa <_get_semihosting_exts+0x46>
 8000924:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8000928:	2b48      	cmp	r3, #72	; 0x48
 800092a:	d1e6      	bne.n	80008fa <_get_semihosting_exts+0x46>
 800092c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8000930:	2b46      	cmp	r3, #70	; 0x46
 8000932:	d1e2      	bne.n	80008fa <_get_semihosting_exts+0x46>
 8000934:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8000938:	2b42      	cmp	r3, #66	; 0x42
 800093a:	d1de      	bne.n	80008fa <_get_semihosting_exts+0x46>
 800093c:	2201      	movs	r2, #1
 800093e:	4639      	mov	r1, r7
 8000940:	4620      	mov	r0, r4
 8000942:	f7ff fe46 	bl	80005d2 <_swilseek>
 8000946:	2800      	cmp	r0, #0
 8000948:	dbd7      	blt.n	80008fa <_get_semihosting_exts+0x46>
 800094a:	462a      	mov	r2, r5
 800094c:	4631      	mov	r1, r6
 800094e:	4620      	mov	r0, r4
 8000950:	f7ff fe23 	bl	800059a <_read>
 8000954:	4605      	mov	r5, r0
 8000956:	4620      	mov	r0, r4
 8000958:	f7ff feba 	bl	80006d0 <_close>
 800095c:	4628      	mov	r0, r5
 800095e:	f7ff fe07 	bl	8000570 <checkerror>
 8000962:	4604      	mov	r4, r0
 8000964:	e7ce      	b.n	8000904 <_get_semihosting_exts+0x50>
 8000966:	bf00      	nop
 8000968:	08001c04 	.word	0x08001c04

0800096c <initialise_semihosting_exts>:
 800096c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800096e:	4d0a      	ldr	r5, [pc, #40]	; (8000998 <initialise_semihosting_exts+0x2c>)
 8000970:	4c0a      	ldr	r4, [pc, #40]	; (800099c <initialise_semihosting_exts+0x30>)
 8000972:	2100      	movs	r1, #0
 8000974:	2201      	movs	r2, #1
 8000976:	a801      	add	r0, sp, #4
 8000978:	6029      	str	r1, [r5, #0]
 800097a:	6022      	str	r2, [r4, #0]
 800097c:	f7ff ff9a 	bl	80008b4 <_get_semihosting_exts>
 8000980:	2800      	cmp	r0, #0
 8000982:	dd07      	ble.n	8000994 <initialise_semihosting_exts+0x28>
 8000984:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000988:	f003 0201 	and.w	r2, r3, #1
 800098c:	f003 0302 	and.w	r3, r3, #2
 8000990:	602a      	str	r2, [r5, #0]
 8000992:	6023      	str	r3, [r4, #0]
 8000994:	b003      	add	sp, #12
 8000996:	bd30      	pop	{r4, r5, pc}
 8000998:	20000004 	.word	0x20000004
 800099c:	20000008 	.word	0x20000008

080009a0 <_has_ext_stdout_stderr>:
 80009a0:	b510      	push	{r4, lr}
 80009a2:	4c04      	ldr	r4, [pc, #16]	; (80009b4 <_has_ext_stdout_stderr+0x14>)
 80009a4:	6823      	ldr	r3, [r4, #0]
 80009a6:	2b00      	cmp	r3, #0
 80009a8:	da01      	bge.n	80009ae <_has_ext_stdout_stderr+0xe>
 80009aa:	f7ff ffdf 	bl	800096c <initialise_semihosting_exts>
 80009ae:	6820      	ldr	r0, [r4, #0]
 80009b0:	bd10      	pop	{r4, pc}
 80009b2:	bf00      	nop
 80009b4:	20000008 	.word	0x20000008

080009b8 <initialise_monitor_handles>:
 80009b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009bc:	b085      	sub	sp, #20
 80009be:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8000a70 <initialise_monitor_handles+0xb8>
 80009c2:	f8cd 9004 	str.w	r9, [sp, #4]
 80009c6:	2303      	movs	r3, #3
 80009c8:	2400      	movs	r4, #0
 80009ca:	9303      	str	r3, [sp, #12]
 80009cc:	af01      	add	r7, sp, #4
 80009ce:	9402      	str	r4, [sp, #8]
 80009d0:	2501      	movs	r5, #1
 80009d2:	4628      	mov	r0, r5
 80009d4:	4639      	mov	r1, r7
 80009d6:	beab      	bkpt	0x00ab
 80009d8:	4605      	mov	r5, r0
 80009da:	f8df 8098 	ldr.w	r8, [pc, #152]	; 8000a74 <initialise_monitor_handles+0xbc>
 80009de:	4623      	mov	r3, r4
 80009e0:	4c20      	ldr	r4, [pc, #128]	; (8000a64 <initialise_monitor_handles+0xac>)
 80009e2:	f8c8 5000 	str.w	r5, [r8]
 80009e6:	f04f 32ff 	mov.w	r2, #4294967295
 80009ea:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
 80009ee:	3301      	adds	r3, #1
 80009f0:	2b14      	cmp	r3, #20
 80009f2:	d1fa      	bne.n	80009ea <initialise_monitor_handles+0x32>
 80009f4:	f7ff ffd4 	bl	80009a0 <_has_ext_stdout_stderr>
 80009f8:	4d1b      	ldr	r5, [pc, #108]	; (8000a68 <initialise_monitor_handles+0xb0>)
 80009fa:	b1d0      	cbz	r0, 8000a32 <initialise_monitor_handles+0x7a>
 80009fc:	f04f 0a03 	mov.w	sl, #3
 8000a00:	2304      	movs	r3, #4
 8000a02:	f8cd 9004 	str.w	r9, [sp, #4]
 8000a06:	2601      	movs	r6, #1
 8000a08:	f8cd a00c 	str.w	sl, [sp, #12]
 8000a0c:	9302      	str	r3, [sp, #8]
 8000a0e:	4630      	mov	r0, r6
 8000a10:	4639      	mov	r1, r7
 8000a12:	beab      	bkpt	0x00ab
 8000a14:	4683      	mov	fp, r0
 8000a16:	4b15      	ldr	r3, [pc, #84]	; (8000a6c <initialise_monitor_handles+0xb4>)
 8000a18:	f8cd 9004 	str.w	r9, [sp, #4]
 8000a1c:	f8c3 b000 	str.w	fp, [r3]
 8000a20:	2308      	movs	r3, #8
 8000a22:	f8cd a00c 	str.w	sl, [sp, #12]
 8000a26:	9302      	str	r3, [sp, #8]
 8000a28:	4630      	mov	r0, r6
 8000a2a:	4639      	mov	r1, r7
 8000a2c:	beab      	bkpt	0x00ab
 8000a2e:	4606      	mov	r6, r0
 8000a30:	602e      	str	r6, [r5, #0]
 8000a32:	682b      	ldr	r3, [r5, #0]
 8000a34:	3301      	adds	r3, #1
 8000a36:	bf02      	ittt	eq
 8000a38:	4b0c      	ldreq	r3, [pc, #48]	; (8000a6c <initialise_monitor_handles+0xb4>)
 8000a3a:	681b      	ldreq	r3, [r3, #0]
 8000a3c:	602b      	streq	r3, [r5, #0]
 8000a3e:	2600      	movs	r6, #0
 8000a40:	f8d8 3000 	ldr.w	r3, [r8]
 8000a44:	6023      	str	r3, [r4, #0]
 8000a46:	6066      	str	r6, [r4, #4]
 8000a48:	f7ff ffaa 	bl	80009a0 <_has_ext_stdout_stderr>
 8000a4c:	b130      	cbz	r0, 8000a5c <initialise_monitor_handles+0xa4>
 8000a4e:	4b07      	ldr	r3, [pc, #28]	; (8000a6c <initialise_monitor_handles+0xb4>)
 8000a50:	681b      	ldr	r3, [r3, #0]
 8000a52:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8000a56:	682b      	ldr	r3, [r5, #0]
 8000a58:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8000a5c:	b005      	add	sp, #20
 8000a5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a62:	bf00      	nop
 8000a64:	2000009c 	.word	0x2000009c
 8000a68:	20000090 	.word	0x20000090
 8000a6c:	20000098 	.word	0x20000098
 8000a70:	08001c1a 	.word	0x08001c1a
 8000a74:	20000094 	.word	0x20000094

08000a78 <_isatty>:
 8000a78:	b570      	push	{r4, r5, r6, lr}
 8000a7a:	f7ff fd51 	bl	8000520 <findslot>
 8000a7e:	2509      	movs	r5, #9
 8000a80:	4604      	mov	r4, r0
 8000a82:	b920      	cbnz	r0, 8000a8e <_isatty+0x16>
 8000a84:	f000 f814 	bl	8000ab0 <__errno>
 8000a88:	6005      	str	r5, [r0, #0]
 8000a8a:	4620      	mov	r0, r4
 8000a8c:	bd70      	pop	{r4, r5, r6, pc}
 8000a8e:	4628      	mov	r0, r5
 8000a90:	4621      	mov	r1, r4
 8000a92:	beab      	bkpt	0x00ab
 8000a94:	4604      	mov	r4, r0
 8000a96:	2c01      	cmp	r4, #1
 8000a98:	d0f7      	beq.n	8000a8a <_isatty+0x12>
 8000a9a:	f000 f809 	bl	8000ab0 <__errno>
 8000a9e:	2400      	movs	r4, #0
 8000aa0:	4605      	mov	r5, r0
 8000aa2:	2613      	movs	r6, #19
 8000aa4:	4630      	mov	r0, r6
 8000aa6:	4621      	mov	r1, r4
 8000aa8:	beab      	bkpt	0x00ab
 8000aaa:	4606      	mov	r6, r0
 8000aac:	602e      	str	r6, [r5, #0]
 8000aae:	e7ec      	b.n	8000a8a <_isatty+0x12>

08000ab0 <__errno>:
 8000ab0:	4b01      	ldr	r3, [pc, #4]	; (8000ab8 <__errno+0x8>)
 8000ab2:	6818      	ldr	r0, [r3, #0]
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop
 8000ab8:	2000000c 	.word	0x2000000c

08000abc <std>:
 8000abc:	2300      	movs	r3, #0
 8000abe:	b510      	push	{r4, lr}
 8000ac0:	4604      	mov	r4, r0
 8000ac2:	e9c0 3300 	strd	r3, r3, [r0]
 8000ac6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000aca:	6083      	str	r3, [r0, #8]
 8000acc:	8181      	strh	r1, [r0, #12]
 8000ace:	6643      	str	r3, [r0, #100]	; 0x64
 8000ad0:	81c2      	strh	r2, [r0, #14]
 8000ad2:	6183      	str	r3, [r0, #24]
 8000ad4:	4619      	mov	r1, r3
 8000ad6:	2208      	movs	r2, #8
 8000ad8:	305c      	adds	r0, #92	; 0x5c
 8000ada:	f000 f90c 	bl	8000cf6 <memset>
 8000ade:	4b05      	ldr	r3, [pc, #20]	; (8000af4 <std+0x38>)
 8000ae0:	6263      	str	r3, [r4, #36]	; 0x24
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <std+0x3c>)
 8000ae4:	62a3      	str	r3, [r4, #40]	; 0x28
 8000ae6:	4b05      	ldr	r3, [pc, #20]	; (8000afc <std+0x40>)
 8000ae8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000aea:	4b05      	ldr	r3, [pc, #20]	; (8000b00 <std+0x44>)
 8000aec:	6224      	str	r4, [r4, #32]
 8000aee:	6323      	str	r3, [r4, #48]	; 0x30
 8000af0:	bd10      	pop	{r4, pc}
 8000af2:	bf00      	nop
 8000af4:	08000efd 	.word	0x08000efd
 8000af8:	08000f1f 	.word	0x08000f1f
 8000afc:	08000f57 	.word	0x08000f57
 8000b00:	08000f7b 	.word	0x08000f7b

08000b04 <_cleanup_r>:
 8000b04:	4901      	ldr	r1, [pc, #4]	; (8000b0c <_cleanup_r+0x8>)
 8000b06:	f000 b8af 	b.w	8000c68 <_fwalk_reent>
 8000b0a:	bf00      	nop
 8000b0c:	08001111 	.word	0x08001111

08000b10 <__sfmoreglue>:
 8000b10:	b570      	push	{r4, r5, r6, lr}
 8000b12:	2268      	movs	r2, #104	; 0x68
 8000b14:	1e4d      	subs	r5, r1, #1
 8000b16:	4355      	muls	r5, r2
 8000b18:	460e      	mov	r6, r1
 8000b1a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000b1e:	f000 f913 	bl	8000d48 <_malloc_r>
 8000b22:	4604      	mov	r4, r0
 8000b24:	b140      	cbz	r0, 8000b38 <__sfmoreglue+0x28>
 8000b26:	2100      	movs	r1, #0
 8000b28:	e9c0 1600 	strd	r1, r6, [r0]
 8000b2c:	300c      	adds	r0, #12
 8000b2e:	60a0      	str	r0, [r4, #8]
 8000b30:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000b34:	f000 f8df 	bl	8000cf6 <memset>
 8000b38:	4620      	mov	r0, r4
 8000b3a:	bd70      	pop	{r4, r5, r6, pc}

08000b3c <__sfp_lock_acquire>:
 8000b3c:	4801      	ldr	r0, [pc, #4]	; (8000b44 <__sfp_lock_acquire+0x8>)
 8000b3e:	f000 b8d8 	b.w	8000cf2 <__retarget_lock_acquire_recursive>
 8000b42:	bf00      	nop
 8000b44:	2000013d 	.word	0x2000013d

08000b48 <__sfp_lock_release>:
 8000b48:	4801      	ldr	r0, [pc, #4]	; (8000b50 <__sfp_lock_release+0x8>)
 8000b4a:	f000 b8d3 	b.w	8000cf4 <__retarget_lock_release_recursive>
 8000b4e:	bf00      	nop
 8000b50:	2000013d 	.word	0x2000013d

08000b54 <__sinit_lock_acquire>:
 8000b54:	4801      	ldr	r0, [pc, #4]	; (8000b5c <__sinit_lock_acquire+0x8>)
 8000b56:	f000 b8cc 	b.w	8000cf2 <__retarget_lock_acquire_recursive>
 8000b5a:	bf00      	nop
 8000b5c:	2000013e 	.word	0x2000013e

08000b60 <__sinit_lock_release>:
 8000b60:	4801      	ldr	r0, [pc, #4]	; (8000b68 <__sinit_lock_release+0x8>)
 8000b62:	f000 b8c7 	b.w	8000cf4 <__retarget_lock_release_recursive>
 8000b66:	bf00      	nop
 8000b68:	2000013e 	.word	0x2000013e

08000b6c <__sinit>:
 8000b6c:	b510      	push	{r4, lr}
 8000b6e:	4604      	mov	r4, r0
 8000b70:	f7ff fff0 	bl	8000b54 <__sinit_lock_acquire>
 8000b74:	69a3      	ldr	r3, [r4, #24]
 8000b76:	b11b      	cbz	r3, 8000b80 <__sinit+0x14>
 8000b78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b7c:	f7ff bff0 	b.w	8000b60 <__sinit_lock_release>
 8000b80:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000b84:	6523      	str	r3, [r4, #80]	; 0x50
 8000b86:	4b13      	ldr	r3, [pc, #76]	; (8000bd4 <__sinit+0x68>)
 8000b88:	4a13      	ldr	r2, [pc, #76]	; (8000bd8 <__sinit+0x6c>)
 8000b8a:	681b      	ldr	r3, [r3, #0]
 8000b8c:	62a2      	str	r2, [r4, #40]	; 0x28
 8000b8e:	42a3      	cmp	r3, r4
 8000b90:	bf04      	itt	eq
 8000b92:	2301      	moveq	r3, #1
 8000b94:	61a3      	streq	r3, [r4, #24]
 8000b96:	4620      	mov	r0, r4
 8000b98:	f000 f820 	bl	8000bdc <__sfp>
 8000b9c:	6060      	str	r0, [r4, #4]
 8000b9e:	4620      	mov	r0, r4
 8000ba0:	f000 f81c 	bl	8000bdc <__sfp>
 8000ba4:	60a0      	str	r0, [r4, #8]
 8000ba6:	4620      	mov	r0, r4
 8000ba8:	f000 f818 	bl	8000bdc <__sfp>
 8000bac:	2200      	movs	r2, #0
 8000bae:	60e0      	str	r0, [r4, #12]
 8000bb0:	2104      	movs	r1, #4
 8000bb2:	6860      	ldr	r0, [r4, #4]
 8000bb4:	f7ff ff82 	bl	8000abc <std>
 8000bb8:	68a0      	ldr	r0, [r4, #8]
 8000bba:	2201      	movs	r2, #1
 8000bbc:	2109      	movs	r1, #9
 8000bbe:	f7ff ff7d 	bl	8000abc <std>
 8000bc2:	68e0      	ldr	r0, [r4, #12]
 8000bc4:	2202      	movs	r2, #2
 8000bc6:	2112      	movs	r1, #18
 8000bc8:	f7ff ff78 	bl	8000abc <std>
 8000bcc:	2301      	movs	r3, #1
 8000bce:	61a3      	str	r3, [r4, #24]
 8000bd0:	e7d2      	b.n	8000b78 <__sinit+0xc>
 8000bd2:	bf00      	nop
 8000bd4:	08001c80 	.word	0x08001c80
 8000bd8:	08000b05 	.word	0x08000b05

08000bdc <__sfp>:
 8000bdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bde:	4607      	mov	r7, r0
 8000be0:	f7ff ffac 	bl	8000b3c <__sfp_lock_acquire>
 8000be4:	4b1e      	ldr	r3, [pc, #120]	; (8000c60 <__sfp+0x84>)
 8000be6:	681e      	ldr	r6, [r3, #0]
 8000be8:	69b3      	ldr	r3, [r6, #24]
 8000bea:	b913      	cbnz	r3, 8000bf2 <__sfp+0x16>
 8000bec:	4630      	mov	r0, r6
 8000bee:	f7ff ffbd 	bl	8000b6c <__sinit>
 8000bf2:	3648      	adds	r6, #72	; 0x48
 8000bf4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000bf8:	3b01      	subs	r3, #1
 8000bfa:	d503      	bpl.n	8000c04 <__sfp+0x28>
 8000bfc:	6833      	ldr	r3, [r6, #0]
 8000bfe:	b30b      	cbz	r3, 8000c44 <__sfp+0x68>
 8000c00:	6836      	ldr	r6, [r6, #0]
 8000c02:	e7f7      	b.n	8000bf4 <__sfp+0x18>
 8000c04:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000c08:	b9d5      	cbnz	r5, 8000c40 <__sfp+0x64>
 8000c0a:	4b16      	ldr	r3, [pc, #88]	; (8000c64 <__sfp+0x88>)
 8000c0c:	60e3      	str	r3, [r4, #12]
 8000c0e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000c12:	6665      	str	r5, [r4, #100]	; 0x64
 8000c14:	f000 f86c 	bl	8000cf0 <__retarget_lock_init_recursive>
 8000c18:	f7ff ff96 	bl	8000b48 <__sfp_lock_release>
 8000c1c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000c20:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000c24:	6025      	str	r5, [r4, #0]
 8000c26:	61a5      	str	r5, [r4, #24]
 8000c28:	2208      	movs	r2, #8
 8000c2a:	4629      	mov	r1, r5
 8000c2c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000c30:	f000 f861 	bl	8000cf6 <memset>
 8000c34:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000c38:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000c3c:	4620      	mov	r0, r4
 8000c3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c40:	3468      	adds	r4, #104	; 0x68
 8000c42:	e7d9      	b.n	8000bf8 <__sfp+0x1c>
 8000c44:	2104      	movs	r1, #4
 8000c46:	4638      	mov	r0, r7
 8000c48:	f7ff ff62 	bl	8000b10 <__sfmoreglue>
 8000c4c:	4604      	mov	r4, r0
 8000c4e:	6030      	str	r0, [r6, #0]
 8000c50:	2800      	cmp	r0, #0
 8000c52:	d1d5      	bne.n	8000c00 <__sfp+0x24>
 8000c54:	f7ff ff78 	bl	8000b48 <__sfp_lock_release>
 8000c58:	230c      	movs	r3, #12
 8000c5a:	603b      	str	r3, [r7, #0]
 8000c5c:	e7ee      	b.n	8000c3c <__sfp+0x60>
 8000c5e:	bf00      	nop
 8000c60:	08001c80 	.word	0x08001c80
 8000c64:	ffff0001 	.word	0xffff0001

08000c68 <_fwalk_reent>:
 8000c68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c6c:	4606      	mov	r6, r0
 8000c6e:	4688      	mov	r8, r1
 8000c70:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000c74:	2700      	movs	r7, #0
 8000c76:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000c7a:	f1b9 0901 	subs.w	r9, r9, #1
 8000c7e:	d505      	bpl.n	8000c8c <_fwalk_reent+0x24>
 8000c80:	6824      	ldr	r4, [r4, #0]
 8000c82:	2c00      	cmp	r4, #0
 8000c84:	d1f7      	bne.n	8000c76 <_fwalk_reent+0xe>
 8000c86:	4638      	mov	r0, r7
 8000c88:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c8c:	89ab      	ldrh	r3, [r5, #12]
 8000c8e:	2b01      	cmp	r3, #1
 8000c90:	d907      	bls.n	8000ca2 <_fwalk_reent+0x3a>
 8000c92:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c96:	3301      	adds	r3, #1
 8000c98:	d003      	beq.n	8000ca2 <_fwalk_reent+0x3a>
 8000c9a:	4629      	mov	r1, r5
 8000c9c:	4630      	mov	r0, r6
 8000c9e:	47c0      	blx	r8
 8000ca0:	4307      	orrs	r7, r0
 8000ca2:	3568      	adds	r5, #104	; 0x68
 8000ca4:	e7e9      	b.n	8000c7a <_fwalk_reent+0x12>
	...

08000ca8 <__libc_init_array>:
 8000ca8:	b570      	push	{r4, r5, r6, lr}
 8000caa:	4d0d      	ldr	r5, [pc, #52]	; (8000ce0 <__libc_init_array+0x38>)
 8000cac:	4c0d      	ldr	r4, [pc, #52]	; (8000ce4 <__libc_init_array+0x3c>)
 8000cae:	1b64      	subs	r4, r4, r5
 8000cb0:	10a4      	asrs	r4, r4, #2
 8000cb2:	2600      	movs	r6, #0
 8000cb4:	42a6      	cmp	r6, r4
 8000cb6:	d109      	bne.n	8000ccc <__libc_init_array+0x24>
 8000cb8:	4d0b      	ldr	r5, [pc, #44]	; (8000ce8 <__libc_init_array+0x40>)
 8000cba:	4c0c      	ldr	r4, [pc, #48]	; (8000cec <__libc_init_array+0x44>)
 8000cbc:	f000 ff84 	bl	8001bc8 <_init>
 8000cc0:	1b64      	subs	r4, r4, r5
 8000cc2:	10a4      	asrs	r4, r4, #2
 8000cc4:	2600      	movs	r6, #0
 8000cc6:	42a6      	cmp	r6, r4
 8000cc8:	d105      	bne.n	8000cd6 <__libc_init_array+0x2e>
 8000cca:	bd70      	pop	{r4, r5, r6, pc}
 8000ccc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000cd0:	4798      	blx	r3
 8000cd2:	3601      	adds	r6, #1
 8000cd4:	e7ee      	b.n	8000cb4 <__libc_init_array+0xc>
 8000cd6:	f855 3b04 	ldr.w	r3, [r5], #4
 8000cda:	4798      	blx	r3
 8000cdc:	3601      	adds	r6, #1
 8000cde:	e7f2      	b.n	8000cc6 <__libc_init_array+0x1e>
 8000ce0:	08001d68 	.word	0x08001d68
 8000ce4:	08001d68 	.word	0x08001d68
 8000ce8:	08001d68 	.word	0x08001d68
 8000cec:	08001d6c 	.word	0x08001d6c

08000cf0 <__retarget_lock_init_recursive>:
 8000cf0:	4770      	bx	lr

08000cf2 <__retarget_lock_acquire_recursive>:
 8000cf2:	4770      	bx	lr

08000cf4 <__retarget_lock_release_recursive>:
 8000cf4:	4770      	bx	lr

08000cf6 <memset>:
 8000cf6:	4402      	add	r2, r0
 8000cf8:	4603      	mov	r3, r0
 8000cfa:	4293      	cmp	r3, r2
 8000cfc:	d100      	bne.n	8000d00 <memset+0xa>
 8000cfe:	4770      	bx	lr
 8000d00:	f803 1b01 	strb.w	r1, [r3], #1
 8000d04:	e7f9      	b.n	8000cfa <memset+0x4>
	...

08000d08 <sbrk_aligned>:
 8000d08:	b570      	push	{r4, r5, r6, lr}
 8000d0a:	4e0e      	ldr	r6, [pc, #56]	; (8000d44 <sbrk_aligned+0x3c>)
 8000d0c:	460c      	mov	r4, r1
 8000d0e:	6831      	ldr	r1, [r6, #0]
 8000d10:	4605      	mov	r5, r0
 8000d12:	b911      	cbnz	r1, 8000d1a <sbrk_aligned+0x12>
 8000d14:	f000 f8e2 	bl	8000edc <_sbrk_r>
 8000d18:	6030      	str	r0, [r6, #0]
 8000d1a:	4621      	mov	r1, r4
 8000d1c:	4628      	mov	r0, r5
 8000d1e:	f000 f8dd 	bl	8000edc <_sbrk_r>
 8000d22:	1c43      	adds	r3, r0, #1
 8000d24:	d00a      	beq.n	8000d3c <sbrk_aligned+0x34>
 8000d26:	1cc4      	adds	r4, r0, #3
 8000d28:	f024 0403 	bic.w	r4, r4, #3
 8000d2c:	42a0      	cmp	r0, r4
 8000d2e:	d007      	beq.n	8000d40 <sbrk_aligned+0x38>
 8000d30:	1a21      	subs	r1, r4, r0
 8000d32:	4628      	mov	r0, r5
 8000d34:	f000 f8d2 	bl	8000edc <_sbrk_r>
 8000d38:	3001      	adds	r0, #1
 8000d3a:	d101      	bne.n	8000d40 <sbrk_aligned+0x38>
 8000d3c:	f04f 34ff 	mov.w	r4, #4294967295
 8000d40:	4620      	mov	r0, r4
 8000d42:	bd70      	pop	{r4, r5, r6, pc}
 8000d44:	20000144 	.word	0x20000144

08000d48 <_malloc_r>:
 8000d48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d4c:	1ccd      	adds	r5, r1, #3
 8000d4e:	f025 0503 	bic.w	r5, r5, #3
 8000d52:	3508      	adds	r5, #8
 8000d54:	2d0c      	cmp	r5, #12
 8000d56:	bf38      	it	cc
 8000d58:	250c      	movcc	r5, #12
 8000d5a:	2d00      	cmp	r5, #0
 8000d5c:	4607      	mov	r7, r0
 8000d5e:	db01      	blt.n	8000d64 <_malloc_r+0x1c>
 8000d60:	42a9      	cmp	r1, r5
 8000d62:	d905      	bls.n	8000d70 <_malloc_r+0x28>
 8000d64:	230c      	movs	r3, #12
 8000d66:	603b      	str	r3, [r7, #0]
 8000d68:	2600      	movs	r6, #0
 8000d6a:	4630      	mov	r0, r6
 8000d6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000d70:	4e2e      	ldr	r6, [pc, #184]	; (8000e2c <_malloc_r+0xe4>)
 8000d72:	f000 fa35 	bl	80011e0 <__malloc_lock>
 8000d76:	6833      	ldr	r3, [r6, #0]
 8000d78:	461c      	mov	r4, r3
 8000d7a:	bb34      	cbnz	r4, 8000dca <_malloc_r+0x82>
 8000d7c:	4629      	mov	r1, r5
 8000d7e:	4638      	mov	r0, r7
 8000d80:	f7ff ffc2 	bl	8000d08 <sbrk_aligned>
 8000d84:	1c43      	adds	r3, r0, #1
 8000d86:	4604      	mov	r4, r0
 8000d88:	d14d      	bne.n	8000e26 <_malloc_r+0xde>
 8000d8a:	6834      	ldr	r4, [r6, #0]
 8000d8c:	4626      	mov	r6, r4
 8000d8e:	2e00      	cmp	r6, #0
 8000d90:	d140      	bne.n	8000e14 <_malloc_r+0xcc>
 8000d92:	6823      	ldr	r3, [r4, #0]
 8000d94:	4631      	mov	r1, r6
 8000d96:	4638      	mov	r0, r7
 8000d98:	eb04 0803 	add.w	r8, r4, r3
 8000d9c:	f000 f89e 	bl	8000edc <_sbrk_r>
 8000da0:	4580      	cmp	r8, r0
 8000da2:	d13a      	bne.n	8000e1a <_malloc_r+0xd2>
 8000da4:	6821      	ldr	r1, [r4, #0]
 8000da6:	3503      	adds	r5, #3
 8000da8:	1a6d      	subs	r5, r5, r1
 8000daa:	f025 0503 	bic.w	r5, r5, #3
 8000dae:	3508      	adds	r5, #8
 8000db0:	2d0c      	cmp	r5, #12
 8000db2:	bf38      	it	cc
 8000db4:	250c      	movcc	r5, #12
 8000db6:	4629      	mov	r1, r5
 8000db8:	4638      	mov	r0, r7
 8000dba:	f7ff ffa5 	bl	8000d08 <sbrk_aligned>
 8000dbe:	3001      	adds	r0, #1
 8000dc0:	d02b      	beq.n	8000e1a <_malloc_r+0xd2>
 8000dc2:	6823      	ldr	r3, [r4, #0]
 8000dc4:	442b      	add	r3, r5
 8000dc6:	6023      	str	r3, [r4, #0]
 8000dc8:	e00e      	b.n	8000de8 <_malloc_r+0xa0>
 8000dca:	6822      	ldr	r2, [r4, #0]
 8000dcc:	1b52      	subs	r2, r2, r5
 8000dce:	d41e      	bmi.n	8000e0e <_malloc_r+0xc6>
 8000dd0:	2a0b      	cmp	r2, #11
 8000dd2:	d916      	bls.n	8000e02 <_malloc_r+0xba>
 8000dd4:	1961      	adds	r1, r4, r5
 8000dd6:	42a3      	cmp	r3, r4
 8000dd8:	6025      	str	r5, [r4, #0]
 8000dda:	bf18      	it	ne
 8000ddc:	6059      	strne	r1, [r3, #4]
 8000dde:	6863      	ldr	r3, [r4, #4]
 8000de0:	bf08      	it	eq
 8000de2:	6031      	streq	r1, [r6, #0]
 8000de4:	5162      	str	r2, [r4, r5]
 8000de6:	604b      	str	r3, [r1, #4]
 8000de8:	4638      	mov	r0, r7
 8000dea:	f104 060b 	add.w	r6, r4, #11
 8000dee:	f000 f9fd 	bl	80011ec <__malloc_unlock>
 8000df2:	f026 0607 	bic.w	r6, r6, #7
 8000df6:	1d23      	adds	r3, r4, #4
 8000df8:	1af2      	subs	r2, r6, r3
 8000dfa:	d0b6      	beq.n	8000d6a <_malloc_r+0x22>
 8000dfc:	1b9b      	subs	r3, r3, r6
 8000dfe:	50a3      	str	r3, [r4, r2]
 8000e00:	e7b3      	b.n	8000d6a <_malloc_r+0x22>
 8000e02:	6862      	ldr	r2, [r4, #4]
 8000e04:	42a3      	cmp	r3, r4
 8000e06:	bf0c      	ite	eq
 8000e08:	6032      	streq	r2, [r6, #0]
 8000e0a:	605a      	strne	r2, [r3, #4]
 8000e0c:	e7ec      	b.n	8000de8 <_malloc_r+0xa0>
 8000e0e:	4623      	mov	r3, r4
 8000e10:	6864      	ldr	r4, [r4, #4]
 8000e12:	e7b2      	b.n	8000d7a <_malloc_r+0x32>
 8000e14:	4634      	mov	r4, r6
 8000e16:	6876      	ldr	r6, [r6, #4]
 8000e18:	e7b9      	b.n	8000d8e <_malloc_r+0x46>
 8000e1a:	230c      	movs	r3, #12
 8000e1c:	603b      	str	r3, [r7, #0]
 8000e1e:	4638      	mov	r0, r7
 8000e20:	f000 f9e4 	bl	80011ec <__malloc_unlock>
 8000e24:	e7a1      	b.n	8000d6a <_malloc_r+0x22>
 8000e26:	6025      	str	r5, [r4, #0]
 8000e28:	e7de      	b.n	8000de8 <_malloc_r+0xa0>
 8000e2a:	bf00      	nop
 8000e2c:	20000140 	.word	0x20000140

08000e30 <iprintf>:
 8000e30:	b40f      	push	{r0, r1, r2, r3}
 8000e32:	4b0a      	ldr	r3, [pc, #40]	; (8000e5c <iprintf+0x2c>)
 8000e34:	b513      	push	{r0, r1, r4, lr}
 8000e36:	681c      	ldr	r4, [r3, #0]
 8000e38:	b124      	cbz	r4, 8000e44 <iprintf+0x14>
 8000e3a:	69a3      	ldr	r3, [r4, #24]
 8000e3c:	b913      	cbnz	r3, 8000e44 <iprintf+0x14>
 8000e3e:	4620      	mov	r0, r4
 8000e40:	f7ff fe94 	bl	8000b6c <__sinit>
 8000e44:	ab05      	add	r3, sp, #20
 8000e46:	9a04      	ldr	r2, [sp, #16]
 8000e48:	68a1      	ldr	r1, [r4, #8]
 8000e4a:	9301      	str	r3, [sp, #4]
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f000 fa49 	bl	80012e4 <_vfiprintf_r>
 8000e52:	b002      	add	sp, #8
 8000e54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000e58:	b004      	add	sp, #16
 8000e5a:	4770      	bx	lr
 8000e5c:	2000000c 	.word	0x2000000c

08000e60 <rand>:
 8000e60:	4b16      	ldr	r3, [pc, #88]	; (8000ebc <rand+0x5c>)
 8000e62:	b510      	push	{r4, lr}
 8000e64:	681c      	ldr	r4, [r3, #0]
 8000e66:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000e68:	b9b3      	cbnz	r3, 8000e98 <rand+0x38>
 8000e6a:	2018      	movs	r0, #24
 8000e6c:	f000 f9b0 	bl	80011d0 <malloc>
 8000e70:	63a0      	str	r0, [r4, #56]	; 0x38
 8000e72:	b928      	cbnz	r0, 8000e80 <rand+0x20>
 8000e74:	4602      	mov	r2, r0
 8000e76:	4b12      	ldr	r3, [pc, #72]	; (8000ec0 <rand+0x60>)
 8000e78:	4812      	ldr	r0, [pc, #72]	; (8000ec4 <rand+0x64>)
 8000e7a:	214e      	movs	r1, #78	; 0x4e
 8000e7c:	f000 f894 	bl	8000fa8 <__assert_func>
 8000e80:	4a11      	ldr	r2, [pc, #68]	; (8000ec8 <rand+0x68>)
 8000e82:	4b12      	ldr	r3, [pc, #72]	; (8000ecc <rand+0x6c>)
 8000e84:	e9c0 2300 	strd	r2, r3, [r0]
 8000e88:	4b11      	ldr	r3, [pc, #68]	; (8000ed0 <rand+0x70>)
 8000e8a:	6083      	str	r3, [r0, #8]
 8000e8c:	230b      	movs	r3, #11
 8000e8e:	8183      	strh	r3, [r0, #12]
 8000e90:	2201      	movs	r2, #1
 8000e92:	2300      	movs	r3, #0
 8000e94:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8000e98:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 8000e9a:	4a0e      	ldr	r2, [pc, #56]	; (8000ed4 <rand+0x74>)
 8000e9c:	6920      	ldr	r0, [r4, #16]
 8000e9e:	6963      	ldr	r3, [r4, #20]
 8000ea0:	490d      	ldr	r1, [pc, #52]	; (8000ed8 <rand+0x78>)
 8000ea2:	4342      	muls	r2, r0
 8000ea4:	fb01 2203 	mla	r2, r1, r3, r2
 8000ea8:	fba0 0101 	umull	r0, r1, r0, r1
 8000eac:	1c43      	adds	r3, r0, #1
 8000eae:	eb42 0001 	adc.w	r0, r2, r1
 8000eb2:	e9c4 3004 	strd	r3, r0, [r4, #16]
 8000eb6:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8000eba:	bd10      	pop	{r4, pc}
 8000ebc:	2000000c 	.word	0x2000000c
 8000ec0:	08001c84 	.word	0x08001c84
 8000ec4:	08001c9b 	.word	0x08001c9b
 8000ec8:	abcd330e 	.word	0xabcd330e
 8000ecc:	e66d1234 	.word	0xe66d1234
 8000ed0:	0005deec 	.word	0x0005deec
 8000ed4:	5851f42d 	.word	0x5851f42d
 8000ed8:	4c957f2d 	.word	0x4c957f2d

08000edc <_sbrk_r>:
 8000edc:	b538      	push	{r3, r4, r5, lr}
 8000ede:	4d06      	ldr	r5, [pc, #24]	; (8000ef8 <_sbrk_r+0x1c>)
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	4604      	mov	r4, r0
 8000ee4:	4608      	mov	r0, r1
 8000ee6:	602b      	str	r3, [r5, #0]
 8000ee8:	f7ff fc1a 	bl	8000720 <_sbrk>
 8000eec:	1c43      	adds	r3, r0, #1
 8000eee:	d102      	bne.n	8000ef6 <_sbrk_r+0x1a>
 8000ef0:	682b      	ldr	r3, [r5, #0]
 8000ef2:	b103      	cbz	r3, 8000ef6 <_sbrk_r+0x1a>
 8000ef4:	6023      	str	r3, [r4, #0]
 8000ef6:	bd38      	pop	{r3, r4, r5, pc}
 8000ef8:	20000148 	.word	0x20000148

08000efc <__sread>:
 8000efc:	b510      	push	{r4, lr}
 8000efe:	460c      	mov	r4, r1
 8000f00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f04:	f000 fcb2 	bl	800186c <_read_r>
 8000f08:	2800      	cmp	r0, #0
 8000f0a:	bfab      	itete	ge
 8000f0c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000f0e:	89a3      	ldrhlt	r3, [r4, #12]
 8000f10:	181b      	addge	r3, r3, r0
 8000f12:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000f16:	bfac      	ite	ge
 8000f18:	6563      	strge	r3, [r4, #84]	; 0x54
 8000f1a:	81a3      	strhlt	r3, [r4, #12]
 8000f1c:	bd10      	pop	{r4, pc}

08000f1e <__swrite>:
 8000f1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f22:	461f      	mov	r7, r3
 8000f24:	898b      	ldrh	r3, [r1, #12]
 8000f26:	05db      	lsls	r3, r3, #23
 8000f28:	4605      	mov	r5, r0
 8000f2a:	460c      	mov	r4, r1
 8000f2c:	4616      	mov	r6, r2
 8000f2e:	d505      	bpl.n	8000f3c <__swrite+0x1e>
 8000f30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f34:	2302      	movs	r3, #2
 8000f36:	2200      	movs	r2, #0
 8000f38:	f000 f938 	bl	80011ac <_lseek_r>
 8000f3c:	89a3      	ldrh	r3, [r4, #12]
 8000f3e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f42:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f46:	81a3      	strh	r3, [r4, #12]
 8000f48:	4632      	mov	r2, r6
 8000f4a:	463b      	mov	r3, r7
 8000f4c:	4628      	mov	r0, r5
 8000f4e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f52:	f000 b817 	b.w	8000f84 <_write_r>

08000f56 <__sseek>:
 8000f56:	b510      	push	{r4, lr}
 8000f58:	460c      	mov	r4, r1
 8000f5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f5e:	f000 f925 	bl	80011ac <_lseek_r>
 8000f62:	1c43      	adds	r3, r0, #1
 8000f64:	89a3      	ldrh	r3, [r4, #12]
 8000f66:	bf15      	itete	ne
 8000f68:	6560      	strne	r0, [r4, #84]	; 0x54
 8000f6a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000f6e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000f72:	81a3      	strheq	r3, [r4, #12]
 8000f74:	bf18      	it	ne
 8000f76:	81a3      	strhne	r3, [r4, #12]
 8000f78:	bd10      	pop	{r4, pc}

08000f7a <__sclose>:
 8000f7a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f7e:	f000 b831 	b.w	8000fe4 <_close_r>
	...

08000f84 <_write_r>:
 8000f84:	b538      	push	{r3, r4, r5, lr}
 8000f86:	4d07      	ldr	r5, [pc, #28]	; (8000fa4 <_write_r+0x20>)
 8000f88:	4604      	mov	r4, r0
 8000f8a:	4608      	mov	r0, r1
 8000f8c:	4611      	mov	r1, r2
 8000f8e:	2200      	movs	r2, #0
 8000f90:	602a      	str	r2, [r5, #0]
 8000f92:	461a      	mov	r2, r3
 8000f94:	f7ff fb6b 	bl	800066e <_write>
 8000f98:	1c43      	adds	r3, r0, #1
 8000f9a:	d102      	bne.n	8000fa2 <_write_r+0x1e>
 8000f9c:	682b      	ldr	r3, [r5, #0]
 8000f9e:	b103      	cbz	r3, 8000fa2 <_write_r+0x1e>
 8000fa0:	6023      	str	r3, [r4, #0]
 8000fa2:	bd38      	pop	{r3, r4, r5, pc}
 8000fa4:	20000148 	.word	0x20000148

08000fa8 <__assert_func>:
 8000fa8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000faa:	4614      	mov	r4, r2
 8000fac:	461a      	mov	r2, r3
 8000fae:	4b09      	ldr	r3, [pc, #36]	; (8000fd4 <__assert_func+0x2c>)
 8000fb0:	681b      	ldr	r3, [r3, #0]
 8000fb2:	4605      	mov	r5, r0
 8000fb4:	68d8      	ldr	r0, [r3, #12]
 8000fb6:	b14c      	cbz	r4, 8000fcc <__assert_func+0x24>
 8000fb8:	4b07      	ldr	r3, [pc, #28]	; (8000fd8 <__assert_func+0x30>)
 8000fba:	9100      	str	r1, [sp, #0]
 8000fbc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000fc0:	4906      	ldr	r1, [pc, #24]	; (8000fdc <__assert_func+0x34>)
 8000fc2:	462b      	mov	r3, r5
 8000fc4:	f000 f8e0 	bl	8001188 <fiprintf>
 8000fc8:	f000 fd22 	bl	8001a10 <abort>
 8000fcc:	4b04      	ldr	r3, [pc, #16]	; (8000fe0 <__assert_func+0x38>)
 8000fce:	461c      	mov	r4, r3
 8000fd0:	e7f3      	b.n	8000fba <__assert_func+0x12>
 8000fd2:	bf00      	nop
 8000fd4:	2000000c 	.word	0x2000000c
 8000fd8:	08001cf6 	.word	0x08001cf6
 8000fdc:	08001d03 	.word	0x08001d03
 8000fe0:	08001d31 	.word	0x08001d31

08000fe4 <_close_r>:
 8000fe4:	b538      	push	{r3, r4, r5, lr}
 8000fe6:	4d06      	ldr	r5, [pc, #24]	; (8001000 <_close_r+0x1c>)
 8000fe8:	2300      	movs	r3, #0
 8000fea:	4604      	mov	r4, r0
 8000fec:	4608      	mov	r0, r1
 8000fee:	602b      	str	r3, [r5, #0]
 8000ff0:	f7ff fb6e 	bl	80006d0 <_close>
 8000ff4:	1c43      	adds	r3, r0, #1
 8000ff6:	d102      	bne.n	8000ffe <_close_r+0x1a>
 8000ff8:	682b      	ldr	r3, [r5, #0]
 8000ffa:	b103      	cbz	r3, 8000ffe <_close_r+0x1a>
 8000ffc:	6023      	str	r3, [r4, #0]
 8000ffe:	bd38      	pop	{r3, r4, r5, pc}
 8001000:	20000148 	.word	0x20000148

08001004 <__sflush_r>:
 8001004:	898a      	ldrh	r2, [r1, #12]
 8001006:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800100a:	4605      	mov	r5, r0
 800100c:	0710      	lsls	r0, r2, #28
 800100e:	460c      	mov	r4, r1
 8001010:	d458      	bmi.n	80010c4 <__sflush_r+0xc0>
 8001012:	684b      	ldr	r3, [r1, #4]
 8001014:	2b00      	cmp	r3, #0
 8001016:	dc05      	bgt.n	8001024 <__sflush_r+0x20>
 8001018:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800101a:	2b00      	cmp	r3, #0
 800101c:	dc02      	bgt.n	8001024 <__sflush_r+0x20>
 800101e:	2000      	movs	r0, #0
 8001020:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001024:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001026:	2e00      	cmp	r6, #0
 8001028:	d0f9      	beq.n	800101e <__sflush_r+0x1a>
 800102a:	2300      	movs	r3, #0
 800102c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001030:	682f      	ldr	r7, [r5, #0]
 8001032:	602b      	str	r3, [r5, #0]
 8001034:	d032      	beq.n	800109c <__sflush_r+0x98>
 8001036:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001038:	89a3      	ldrh	r3, [r4, #12]
 800103a:	075a      	lsls	r2, r3, #29
 800103c:	d505      	bpl.n	800104a <__sflush_r+0x46>
 800103e:	6863      	ldr	r3, [r4, #4]
 8001040:	1ac0      	subs	r0, r0, r3
 8001042:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001044:	b10b      	cbz	r3, 800104a <__sflush_r+0x46>
 8001046:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001048:	1ac0      	subs	r0, r0, r3
 800104a:	2300      	movs	r3, #0
 800104c:	4602      	mov	r2, r0
 800104e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001050:	6a21      	ldr	r1, [r4, #32]
 8001052:	4628      	mov	r0, r5
 8001054:	47b0      	blx	r6
 8001056:	1c43      	adds	r3, r0, #1
 8001058:	89a3      	ldrh	r3, [r4, #12]
 800105a:	d106      	bne.n	800106a <__sflush_r+0x66>
 800105c:	6829      	ldr	r1, [r5, #0]
 800105e:	291d      	cmp	r1, #29
 8001060:	d82c      	bhi.n	80010bc <__sflush_r+0xb8>
 8001062:	4a2a      	ldr	r2, [pc, #168]	; (800110c <__sflush_r+0x108>)
 8001064:	40ca      	lsrs	r2, r1
 8001066:	07d6      	lsls	r6, r2, #31
 8001068:	d528      	bpl.n	80010bc <__sflush_r+0xb8>
 800106a:	2200      	movs	r2, #0
 800106c:	6062      	str	r2, [r4, #4]
 800106e:	04d9      	lsls	r1, r3, #19
 8001070:	6922      	ldr	r2, [r4, #16]
 8001072:	6022      	str	r2, [r4, #0]
 8001074:	d504      	bpl.n	8001080 <__sflush_r+0x7c>
 8001076:	1c42      	adds	r2, r0, #1
 8001078:	d101      	bne.n	800107e <__sflush_r+0x7a>
 800107a:	682b      	ldr	r3, [r5, #0]
 800107c:	b903      	cbnz	r3, 8001080 <__sflush_r+0x7c>
 800107e:	6560      	str	r0, [r4, #84]	; 0x54
 8001080:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001082:	602f      	str	r7, [r5, #0]
 8001084:	2900      	cmp	r1, #0
 8001086:	d0ca      	beq.n	800101e <__sflush_r+0x1a>
 8001088:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800108c:	4299      	cmp	r1, r3
 800108e:	d002      	beq.n	8001096 <__sflush_r+0x92>
 8001090:	4628      	mov	r0, r5
 8001092:	f000 f8b1 	bl	80011f8 <_free_r>
 8001096:	2000      	movs	r0, #0
 8001098:	6360      	str	r0, [r4, #52]	; 0x34
 800109a:	e7c1      	b.n	8001020 <__sflush_r+0x1c>
 800109c:	6a21      	ldr	r1, [r4, #32]
 800109e:	2301      	movs	r3, #1
 80010a0:	4628      	mov	r0, r5
 80010a2:	47b0      	blx	r6
 80010a4:	1c41      	adds	r1, r0, #1
 80010a6:	d1c7      	bne.n	8001038 <__sflush_r+0x34>
 80010a8:	682b      	ldr	r3, [r5, #0]
 80010aa:	2b00      	cmp	r3, #0
 80010ac:	d0c4      	beq.n	8001038 <__sflush_r+0x34>
 80010ae:	2b1d      	cmp	r3, #29
 80010b0:	d001      	beq.n	80010b6 <__sflush_r+0xb2>
 80010b2:	2b16      	cmp	r3, #22
 80010b4:	d101      	bne.n	80010ba <__sflush_r+0xb6>
 80010b6:	602f      	str	r7, [r5, #0]
 80010b8:	e7b1      	b.n	800101e <__sflush_r+0x1a>
 80010ba:	89a3      	ldrh	r3, [r4, #12]
 80010bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010c0:	81a3      	strh	r3, [r4, #12]
 80010c2:	e7ad      	b.n	8001020 <__sflush_r+0x1c>
 80010c4:	690f      	ldr	r7, [r1, #16]
 80010c6:	2f00      	cmp	r7, #0
 80010c8:	d0a9      	beq.n	800101e <__sflush_r+0x1a>
 80010ca:	0793      	lsls	r3, r2, #30
 80010cc:	680e      	ldr	r6, [r1, #0]
 80010ce:	bf08      	it	eq
 80010d0:	694b      	ldreq	r3, [r1, #20]
 80010d2:	600f      	str	r7, [r1, #0]
 80010d4:	bf18      	it	ne
 80010d6:	2300      	movne	r3, #0
 80010d8:	eba6 0807 	sub.w	r8, r6, r7
 80010dc:	608b      	str	r3, [r1, #8]
 80010de:	f1b8 0f00 	cmp.w	r8, #0
 80010e2:	dd9c      	ble.n	800101e <__sflush_r+0x1a>
 80010e4:	6a21      	ldr	r1, [r4, #32]
 80010e6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80010e8:	4643      	mov	r3, r8
 80010ea:	463a      	mov	r2, r7
 80010ec:	4628      	mov	r0, r5
 80010ee:	47b0      	blx	r6
 80010f0:	2800      	cmp	r0, #0
 80010f2:	dc06      	bgt.n	8001102 <__sflush_r+0xfe>
 80010f4:	89a3      	ldrh	r3, [r4, #12]
 80010f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010fa:	81a3      	strh	r3, [r4, #12]
 80010fc:	f04f 30ff 	mov.w	r0, #4294967295
 8001100:	e78e      	b.n	8001020 <__sflush_r+0x1c>
 8001102:	4407      	add	r7, r0
 8001104:	eba8 0800 	sub.w	r8, r8, r0
 8001108:	e7e9      	b.n	80010de <__sflush_r+0xda>
 800110a:	bf00      	nop
 800110c:	20400001 	.word	0x20400001

08001110 <_fflush_r>:
 8001110:	b538      	push	{r3, r4, r5, lr}
 8001112:	690b      	ldr	r3, [r1, #16]
 8001114:	4605      	mov	r5, r0
 8001116:	460c      	mov	r4, r1
 8001118:	b913      	cbnz	r3, 8001120 <_fflush_r+0x10>
 800111a:	2500      	movs	r5, #0
 800111c:	4628      	mov	r0, r5
 800111e:	bd38      	pop	{r3, r4, r5, pc}
 8001120:	b118      	cbz	r0, 800112a <_fflush_r+0x1a>
 8001122:	6983      	ldr	r3, [r0, #24]
 8001124:	b90b      	cbnz	r3, 800112a <_fflush_r+0x1a>
 8001126:	f7ff fd21 	bl	8000b6c <__sinit>
 800112a:	4b14      	ldr	r3, [pc, #80]	; (800117c <_fflush_r+0x6c>)
 800112c:	429c      	cmp	r4, r3
 800112e:	d11b      	bne.n	8001168 <_fflush_r+0x58>
 8001130:	686c      	ldr	r4, [r5, #4]
 8001132:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001136:	2b00      	cmp	r3, #0
 8001138:	d0ef      	beq.n	800111a <_fflush_r+0xa>
 800113a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800113c:	07d0      	lsls	r0, r2, #31
 800113e:	d404      	bmi.n	800114a <_fflush_r+0x3a>
 8001140:	0599      	lsls	r1, r3, #22
 8001142:	d402      	bmi.n	800114a <_fflush_r+0x3a>
 8001144:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001146:	f7ff fdd4 	bl	8000cf2 <__retarget_lock_acquire_recursive>
 800114a:	4628      	mov	r0, r5
 800114c:	4621      	mov	r1, r4
 800114e:	f7ff ff59 	bl	8001004 <__sflush_r>
 8001152:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001154:	07da      	lsls	r2, r3, #31
 8001156:	4605      	mov	r5, r0
 8001158:	d4e0      	bmi.n	800111c <_fflush_r+0xc>
 800115a:	89a3      	ldrh	r3, [r4, #12]
 800115c:	059b      	lsls	r3, r3, #22
 800115e:	d4dd      	bmi.n	800111c <_fflush_r+0xc>
 8001160:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001162:	f7ff fdc7 	bl	8000cf4 <__retarget_lock_release_recursive>
 8001166:	e7d9      	b.n	800111c <_fflush_r+0xc>
 8001168:	4b05      	ldr	r3, [pc, #20]	; (8001180 <_fflush_r+0x70>)
 800116a:	429c      	cmp	r4, r3
 800116c:	d101      	bne.n	8001172 <_fflush_r+0x62>
 800116e:	68ac      	ldr	r4, [r5, #8]
 8001170:	e7df      	b.n	8001132 <_fflush_r+0x22>
 8001172:	4b04      	ldr	r3, [pc, #16]	; (8001184 <_fflush_r+0x74>)
 8001174:	429c      	cmp	r4, r3
 8001176:	bf08      	it	eq
 8001178:	68ec      	ldreq	r4, [r5, #12]
 800117a:	e7da      	b.n	8001132 <_fflush_r+0x22>
 800117c:	08001c40 	.word	0x08001c40
 8001180:	08001c60 	.word	0x08001c60
 8001184:	08001c20 	.word	0x08001c20

08001188 <fiprintf>:
 8001188:	b40e      	push	{r1, r2, r3}
 800118a:	b503      	push	{r0, r1, lr}
 800118c:	4601      	mov	r1, r0
 800118e:	ab03      	add	r3, sp, #12
 8001190:	4805      	ldr	r0, [pc, #20]	; (80011a8 <fiprintf+0x20>)
 8001192:	f853 2b04 	ldr.w	r2, [r3], #4
 8001196:	6800      	ldr	r0, [r0, #0]
 8001198:	9301      	str	r3, [sp, #4]
 800119a:	f000 f8a3 	bl	80012e4 <_vfiprintf_r>
 800119e:	b002      	add	sp, #8
 80011a0:	f85d eb04 	ldr.w	lr, [sp], #4
 80011a4:	b003      	add	sp, #12
 80011a6:	4770      	bx	lr
 80011a8:	2000000c 	.word	0x2000000c

080011ac <_lseek_r>:
 80011ac:	b538      	push	{r3, r4, r5, lr}
 80011ae:	4d07      	ldr	r5, [pc, #28]	; (80011cc <_lseek_r+0x20>)
 80011b0:	4604      	mov	r4, r0
 80011b2:	4608      	mov	r0, r1
 80011b4:	4611      	mov	r1, r2
 80011b6:	2200      	movs	r2, #0
 80011b8:	602a      	str	r2, [r5, #0]
 80011ba:	461a      	mov	r2, r3
 80011bc:	f7ff fa45 	bl	800064a <_lseek>
 80011c0:	1c43      	adds	r3, r0, #1
 80011c2:	d102      	bne.n	80011ca <_lseek_r+0x1e>
 80011c4:	682b      	ldr	r3, [r5, #0]
 80011c6:	b103      	cbz	r3, 80011ca <_lseek_r+0x1e>
 80011c8:	6023      	str	r3, [r4, #0]
 80011ca:	bd38      	pop	{r3, r4, r5, pc}
 80011cc:	20000148 	.word	0x20000148

080011d0 <malloc>:
 80011d0:	4b02      	ldr	r3, [pc, #8]	; (80011dc <malloc+0xc>)
 80011d2:	4601      	mov	r1, r0
 80011d4:	6818      	ldr	r0, [r3, #0]
 80011d6:	f7ff bdb7 	b.w	8000d48 <_malloc_r>
 80011da:	bf00      	nop
 80011dc:	2000000c 	.word	0x2000000c

080011e0 <__malloc_lock>:
 80011e0:	4801      	ldr	r0, [pc, #4]	; (80011e8 <__malloc_lock+0x8>)
 80011e2:	f7ff bd86 	b.w	8000cf2 <__retarget_lock_acquire_recursive>
 80011e6:	bf00      	nop
 80011e8:	2000013c 	.word	0x2000013c

080011ec <__malloc_unlock>:
 80011ec:	4801      	ldr	r0, [pc, #4]	; (80011f4 <__malloc_unlock+0x8>)
 80011ee:	f7ff bd81 	b.w	8000cf4 <__retarget_lock_release_recursive>
 80011f2:	bf00      	nop
 80011f4:	2000013c 	.word	0x2000013c

080011f8 <_free_r>:
 80011f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80011fa:	2900      	cmp	r1, #0
 80011fc:	d044      	beq.n	8001288 <_free_r+0x90>
 80011fe:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001202:	9001      	str	r0, [sp, #4]
 8001204:	2b00      	cmp	r3, #0
 8001206:	f1a1 0404 	sub.w	r4, r1, #4
 800120a:	bfb8      	it	lt
 800120c:	18e4      	addlt	r4, r4, r3
 800120e:	f7ff ffe7 	bl	80011e0 <__malloc_lock>
 8001212:	4a1e      	ldr	r2, [pc, #120]	; (800128c <_free_r+0x94>)
 8001214:	9801      	ldr	r0, [sp, #4]
 8001216:	6813      	ldr	r3, [r2, #0]
 8001218:	b933      	cbnz	r3, 8001228 <_free_r+0x30>
 800121a:	6063      	str	r3, [r4, #4]
 800121c:	6014      	str	r4, [r2, #0]
 800121e:	b003      	add	sp, #12
 8001220:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001224:	f7ff bfe2 	b.w	80011ec <__malloc_unlock>
 8001228:	42a3      	cmp	r3, r4
 800122a:	d908      	bls.n	800123e <_free_r+0x46>
 800122c:	6825      	ldr	r5, [r4, #0]
 800122e:	1961      	adds	r1, r4, r5
 8001230:	428b      	cmp	r3, r1
 8001232:	bf01      	itttt	eq
 8001234:	6819      	ldreq	r1, [r3, #0]
 8001236:	685b      	ldreq	r3, [r3, #4]
 8001238:	1949      	addeq	r1, r1, r5
 800123a:	6021      	streq	r1, [r4, #0]
 800123c:	e7ed      	b.n	800121a <_free_r+0x22>
 800123e:	461a      	mov	r2, r3
 8001240:	685b      	ldr	r3, [r3, #4]
 8001242:	b10b      	cbz	r3, 8001248 <_free_r+0x50>
 8001244:	42a3      	cmp	r3, r4
 8001246:	d9fa      	bls.n	800123e <_free_r+0x46>
 8001248:	6811      	ldr	r1, [r2, #0]
 800124a:	1855      	adds	r5, r2, r1
 800124c:	42a5      	cmp	r5, r4
 800124e:	d10b      	bne.n	8001268 <_free_r+0x70>
 8001250:	6824      	ldr	r4, [r4, #0]
 8001252:	4421      	add	r1, r4
 8001254:	1854      	adds	r4, r2, r1
 8001256:	42a3      	cmp	r3, r4
 8001258:	6011      	str	r1, [r2, #0]
 800125a:	d1e0      	bne.n	800121e <_free_r+0x26>
 800125c:	681c      	ldr	r4, [r3, #0]
 800125e:	685b      	ldr	r3, [r3, #4]
 8001260:	6053      	str	r3, [r2, #4]
 8001262:	4421      	add	r1, r4
 8001264:	6011      	str	r1, [r2, #0]
 8001266:	e7da      	b.n	800121e <_free_r+0x26>
 8001268:	d902      	bls.n	8001270 <_free_r+0x78>
 800126a:	230c      	movs	r3, #12
 800126c:	6003      	str	r3, [r0, #0]
 800126e:	e7d6      	b.n	800121e <_free_r+0x26>
 8001270:	6825      	ldr	r5, [r4, #0]
 8001272:	1961      	adds	r1, r4, r5
 8001274:	428b      	cmp	r3, r1
 8001276:	bf04      	itt	eq
 8001278:	6819      	ldreq	r1, [r3, #0]
 800127a:	685b      	ldreq	r3, [r3, #4]
 800127c:	6063      	str	r3, [r4, #4]
 800127e:	bf04      	itt	eq
 8001280:	1949      	addeq	r1, r1, r5
 8001282:	6021      	streq	r1, [r4, #0]
 8001284:	6054      	str	r4, [r2, #4]
 8001286:	e7ca      	b.n	800121e <_free_r+0x26>
 8001288:	b003      	add	sp, #12
 800128a:	bd30      	pop	{r4, r5, pc}
 800128c:	20000140 	.word	0x20000140

08001290 <__sfputc_r>:
 8001290:	6893      	ldr	r3, [r2, #8]
 8001292:	3b01      	subs	r3, #1
 8001294:	2b00      	cmp	r3, #0
 8001296:	b410      	push	{r4}
 8001298:	6093      	str	r3, [r2, #8]
 800129a:	da08      	bge.n	80012ae <__sfputc_r+0x1e>
 800129c:	6994      	ldr	r4, [r2, #24]
 800129e:	42a3      	cmp	r3, r4
 80012a0:	db01      	blt.n	80012a6 <__sfputc_r+0x16>
 80012a2:	290a      	cmp	r1, #10
 80012a4:	d103      	bne.n	80012ae <__sfputc_r+0x1e>
 80012a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80012aa:	f000 baf1 	b.w	8001890 <__swbuf_r>
 80012ae:	6813      	ldr	r3, [r2, #0]
 80012b0:	1c58      	adds	r0, r3, #1
 80012b2:	6010      	str	r0, [r2, #0]
 80012b4:	7019      	strb	r1, [r3, #0]
 80012b6:	4608      	mov	r0, r1
 80012b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80012bc:	4770      	bx	lr

080012be <__sfputs_r>:
 80012be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012c0:	4606      	mov	r6, r0
 80012c2:	460f      	mov	r7, r1
 80012c4:	4614      	mov	r4, r2
 80012c6:	18d5      	adds	r5, r2, r3
 80012c8:	42ac      	cmp	r4, r5
 80012ca:	d101      	bne.n	80012d0 <__sfputs_r+0x12>
 80012cc:	2000      	movs	r0, #0
 80012ce:	e007      	b.n	80012e0 <__sfputs_r+0x22>
 80012d0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80012d4:	463a      	mov	r2, r7
 80012d6:	4630      	mov	r0, r6
 80012d8:	f7ff ffda 	bl	8001290 <__sfputc_r>
 80012dc:	1c43      	adds	r3, r0, #1
 80012de:	d1f3      	bne.n	80012c8 <__sfputs_r+0xa>
 80012e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080012e4 <_vfiprintf_r>:
 80012e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80012e8:	460d      	mov	r5, r1
 80012ea:	b09d      	sub	sp, #116	; 0x74
 80012ec:	4614      	mov	r4, r2
 80012ee:	4698      	mov	r8, r3
 80012f0:	4606      	mov	r6, r0
 80012f2:	b118      	cbz	r0, 80012fc <_vfiprintf_r+0x18>
 80012f4:	6983      	ldr	r3, [r0, #24]
 80012f6:	b90b      	cbnz	r3, 80012fc <_vfiprintf_r+0x18>
 80012f8:	f7ff fc38 	bl	8000b6c <__sinit>
 80012fc:	4b89      	ldr	r3, [pc, #548]	; (8001524 <_vfiprintf_r+0x240>)
 80012fe:	429d      	cmp	r5, r3
 8001300:	d11b      	bne.n	800133a <_vfiprintf_r+0x56>
 8001302:	6875      	ldr	r5, [r6, #4]
 8001304:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001306:	07d9      	lsls	r1, r3, #31
 8001308:	d405      	bmi.n	8001316 <_vfiprintf_r+0x32>
 800130a:	89ab      	ldrh	r3, [r5, #12]
 800130c:	059a      	lsls	r2, r3, #22
 800130e:	d402      	bmi.n	8001316 <_vfiprintf_r+0x32>
 8001310:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001312:	f7ff fcee 	bl	8000cf2 <__retarget_lock_acquire_recursive>
 8001316:	89ab      	ldrh	r3, [r5, #12]
 8001318:	071b      	lsls	r3, r3, #28
 800131a:	d501      	bpl.n	8001320 <_vfiprintf_r+0x3c>
 800131c:	692b      	ldr	r3, [r5, #16]
 800131e:	b9eb      	cbnz	r3, 800135c <_vfiprintf_r+0x78>
 8001320:	4629      	mov	r1, r5
 8001322:	4630      	mov	r0, r6
 8001324:	f000 fb06 	bl	8001934 <__swsetup_r>
 8001328:	b1c0      	cbz	r0, 800135c <_vfiprintf_r+0x78>
 800132a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800132c:	07dc      	lsls	r4, r3, #31
 800132e:	d50e      	bpl.n	800134e <_vfiprintf_r+0x6a>
 8001330:	f04f 30ff 	mov.w	r0, #4294967295
 8001334:	b01d      	add	sp, #116	; 0x74
 8001336:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800133a:	4b7b      	ldr	r3, [pc, #492]	; (8001528 <_vfiprintf_r+0x244>)
 800133c:	429d      	cmp	r5, r3
 800133e:	d101      	bne.n	8001344 <_vfiprintf_r+0x60>
 8001340:	68b5      	ldr	r5, [r6, #8]
 8001342:	e7df      	b.n	8001304 <_vfiprintf_r+0x20>
 8001344:	4b79      	ldr	r3, [pc, #484]	; (800152c <_vfiprintf_r+0x248>)
 8001346:	429d      	cmp	r5, r3
 8001348:	bf08      	it	eq
 800134a:	68f5      	ldreq	r5, [r6, #12]
 800134c:	e7da      	b.n	8001304 <_vfiprintf_r+0x20>
 800134e:	89ab      	ldrh	r3, [r5, #12]
 8001350:	0598      	lsls	r0, r3, #22
 8001352:	d4ed      	bmi.n	8001330 <_vfiprintf_r+0x4c>
 8001354:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001356:	f7ff fccd 	bl	8000cf4 <__retarget_lock_release_recursive>
 800135a:	e7e9      	b.n	8001330 <_vfiprintf_r+0x4c>
 800135c:	2300      	movs	r3, #0
 800135e:	9309      	str	r3, [sp, #36]	; 0x24
 8001360:	2320      	movs	r3, #32
 8001362:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8001366:	f8cd 800c 	str.w	r8, [sp, #12]
 800136a:	2330      	movs	r3, #48	; 0x30
 800136c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001530 <_vfiprintf_r+0x24c>
 8001370:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001374:	f04f 0901 	mov.w	r9, #1
 8001378:	4623      	mov	r3, r4
 800137a:	469a      	mov	sl, r3
 800137c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001380:	b10a      	cbz	r2, 8001386 <_vfiprintf_r+0xa2>
 8001382:	2a25      	cmp	r2, #37	; 0x25
 8001384:	d1f9      	bne.n	800137a <_vfiprintf_r+0x96>
 8001386:	ebba 0b04 	subs.w	fp, sl, r4
 800138a:	d00b      	beq.n	80013a4 <_vfiprintf_r+0xc0>
 800138c:	465b      	mov	r3, fp
 800138e:	4622      	mov	r2, r4
 8001390:	4629      	mov	r1, r5
 8001392:	4630      	mov	r0, r6
 8001394:	f7ff ff93 	bl	80012be <__sfputs_r>
 8001398:	3001      	adds	r0, #1
 800139a:	f000 80aa 	beq.w	80014f2 <_vfiprintf_r+0x20e>
 800139e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80013a0:	445a      	add	r2, fp
 80013a2:	9209      	str	r2, [sp, #36]	; 0x24
 80013a4:	f89a 3000 	ldrb.w	r3, [sl]
 80013a8:	2b00      	cmp	r3, #0
 80013aa:	f000 80a2 	beq.w	80014f2 <_vfiprintf_r+0x20e>
 80013ae:	2300      	movs	r3, #0
 80013b0:	f04f 32ff 	mov.w	r2, #4294967295
 80013b4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80013b8:	f10a 0a01 	add.w	sl, sl, #1
 80013bc:	9304      	str	r3, [sp, #16]
 80013be:	9307      	str	r3, [sp, #28]
 80013c0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80013c4:	931a      	str	r3, [sp, #104]	; 0x68
 80013c6:	4654      	mov	r4, sl
 80013c8:	2205      	movs	r2, #5
 80013ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 80013ce:	4858      	ldr	r0, [pc, #352]	; (8001530 <_vfiprintf_r+0x24c>)
 80013d0:	f7fe ff3e 	bl	8000250 <memchr>
 80013d4:	9a04      	ldr	r2, [sp, #16]
 80013d6:	b9d8      	cbnz	r0, 8001410 <_vfiprintf_r+0x12c>
 80013d8:	06d1      	lsls	r1, r2, #27
 80013da:	bf44      	itt	mi
 80013dc:	2320      	movmi	r3, #32
 80013de:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80013e2:	0713      	lsls	r3, r2, #28
 80013e4:	bf44      	itt	mi
 80013e6:	232b      	movmi	r3, #43	; 0x2b
 80013e8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80013ec:	f89a 3000 	ldrb.w	r3, [sl]
 80013f0:	2b2a      	cmp	r3, #42	; 0x2a
 80013f2:	d015      	beq.n	8001420 <_vfiprintf_r+0x13c>
 80013f4:	9a07      	ldr	r2, [sp, #28]
 80013f6:	4654      	mov	r4, sl
 80013f8:	2000      	movs	r0, #0
 80013fa:	f04f 0c0a 	mov.w	ip, #10
 80013fe:	4621      	mov	r1, r4
 8001400:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001404:	3b30      	subs	r3, #48	; 0x30
 8001406:	2b09      	cmp	r3, #9
 8001408:	d94e      	bls.n	80014a8 <_vfiprintf_r+0x1c4>
 800140a:	b1b0      	cbz	r0, 800143a <_vfiprintf_r+0x156>
 800140c:	9207      	str	r2, [sp, #28]
 800140e:	e014      	b.n	800143a <_vfiprintf_r+0x156>
 8001410:	eba0 0308 	sub.w	r3, r0, r8
 8001414:	fa09 f303 	lsl.w	r3, r9, r3
 8001418:	4313      	orrs	r3, r2
 800141a:	9304      	str	r3, [sp, #16]
 800141c:	46a2      	mov	sl, r4
 800141e:	e7d2      	b.n	80013c6 <_vfiprintf_r+0xe2>
 8001420:	9b03      	ldr	r3, [sp, #12]
 8001422:	1d19      	adds	r1, r3, #4
 8001424:	681b      	ldr	r3, [r3, #0]
 8001426:	9103      	str	r1, [sp, #12]
 8001428:	2b00      	cmp	r3, #0
 800142a:	bfbb      	ittet	lt
 800142c:	425b      	neglt	r3, r3
 800142e:	f042 0202 	orrlt.w	r2, r2, #2
 8001432:	9307      	strge	r3, [sp, #28]
 8001434:	9307      	strlt	r3, [sp, #28]
 8001436:	bfb8      	it	lt
 8001438:	9204      	strlt	r2, [sp, #16]
 800143a:	7823      	ldrb	r3, [r4, #0]
 800143c:	2b2e      	cmp	r3, #46	; 0x2e
 800143e:	d10c      	bne.n	800145a <_vfiprintf_r+0x176>
 8001440:	7863      	ldrb	r3, [r4, #1]
 8001442:	2b2a      	cmp	r3, #42	; 0x2a
 8001444:	d135      	bne.n	80014b2 <_vfiprintf_r+0x1ce>
 8001446:	9b03      	ldr	r3, [sp, #12]
 8001448:	1d1a      	adds	r2, r3, #4
 800144a:	681b      	ldr	r3, [r3, #0]
 800144c:	9203      	str	r2, [sp, #12]
 800144e:	2b00      	cmp	r3, #0
 8001450:	bfb8      	it	lt
 8001452:	f04f 33ff 	movlt.w	r3, #4294967295
 8001456:	3402      	adds	r4, #2
 8001458:	9305      	str	r3, [sp, #20]
 800145a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001540 <_vfiprintf_r+0x25c>
 800145e:	7821      	ldrb	r1, [r4, #0]
 8001460:	2203      	movs	r2, #3
 8001462:	4650      	mov	r0, sl
 8001464:	f7fe fef4 	bl	8000250 <memchr>
 8001468:	b140      	cbz	r0, 800147c <_vfiprintf_r+0x198>
 800146a:	2340      	movs	r3, #64	; 0x40
 800146c:	eba0 000a 	sub.w	r0, r0, sl
 8001470:	fa03 f000 	lsl.w	r0, r3, r0
 8001474:	9b04      	ldr	r3, [sp, #16]
 8001476:	4303      	orrs	r3, r0
 8001478:	3401      	adds	r4, #1
 800147a:	9304      	str	r3, [sp, #16]
 800147c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001480:	482c      	ldr	r0, [pc, #176]	; (8001534 <_vfiprintf_r+0x250>)
 8001482:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001486:	2206      	movs	r2, #6
 8001488:	f7fe fee2 	bl	8000250 <memchr>
 800148c:	2800      	cmp	r0, #0
 800148e:	d03f      	beq.n	8001510 <_vfiprintf_r+0x22c>
 8001490:	4b29      	ldr	r3, [pc, #164]	; (8001538 <_vfiprintf_r+0x254>)
 8001492:	bb1b      	cbnz	r3, 80014dc <_vfiprintf_r+0x1f8>
 8001494:	9b03      	ldr	r3, [sp, #12]
 8001496:	3307      	adds	r3, #7
 8001498:	f023 0307 	bic.w	r3, r3, #7
 800149c:	3308      	adds	r3, #8
 800149e:	9303      	str	r3, [sp, #12]
 80014a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80014a2:	443b      	add	r3, r7
 80014a4:	9309      	str	r3, [sp, #36]	; 0x24
 80014a6:	e767      	b.n	8001378 <_vfiprintf_r+0x94>
 80014a8:	fb0c 3202 	mla	r2, ip, r2, r3
 80014ac:	460c      	mov	r4, r1
 80014ae:	2001      	movs	r0, #1
 80014b0:	e7a5      	b.n	80013fe <_vfiprintf_r+0x11a>
 80014b2:	2300      	movs	r3, #0
 80014b4:	3401      	adds	r4, #1
 80014b6:	9305      	str	r3, [sp, #20]
 80014b8:	4619      	mov	r1, r3
 80014ba:	f04f 0c0a 	mov.w	ip, #10
 80014be:	4620      	mov	r0, r4
 80014c0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80014c4:	3a30      	subs	r2, #48	; 0x30
 80014c6:	2a09      	cmp	r2, #9
 80014c8:	d903      	bls.n	80014d2 <_vfiprintf_r+0x1ee>
 80014ca:	2b00      	cmp	r3, #0
 80014cc:	d0c5      	beq.n	800145a <_vfiprintf_r+0x176>
 80014ce:	9105      	str	r1, [sp, #20]
 80014d0:	e7c3      	b.n	800145a <_vfiprintf_r+0x176>
 80014d2:	fb0c 2101 	mla	r1, ip, r1, r2
 80014d6:	4604      	mov	r4, r0
 80014d8:	2301      	movs	r3, #1
 80014da:	e7f0      	b.n	80014be <_vfiprintf_r+0x1da>
 80014dc:	ab03      	add	r3, sp, #12
 80014de:	9300      	str	r3, [sp, #0]
 80014e0:	462a      	mov	r2, r5
 80014e2:	4b16      	ldr	r3, [pc, #88]	; (800153c <_vfiprintf_r+0x258>)
 80014e4:	a904      	add	r1, sp, #16
 80014e6:	4630      	mov	r0, r6
 80014e8:	f3af 8000 	nop.w
 80014ec:	4607      	mov	r7, r0
 80014ee:	1c78      	adds	r0, r7, #1
 80014f0:	d1d6      	bne.n	80014a0 <_vfiprintf_r+0x1bc>
 80014f2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80014f4:	07d9      	lsls	r1, r3, #31
 80014f6:	d405      	bmi.n	8001504 <_vfiprintf_r+0x220>
 80014f8:	89ab      	ldrh	r3, [r5, #12]
 80014fa:	059a      	lsls	r2, r3, #22
 80014fc:	d402      	bmi.n	8001504 <_vfiprintf_r+0x220>
 80014fe:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001500:	f7ff fbf8 	bl	8000cf4 <__retarget_lock_release_recursive>
 8001504:	89ab      	ldrh	r3, [r5, #12]
 8001506:	065b      	lsls	r3, r3, #25
 8001508:	f53f af12 	bmi.w	8001330 <_vfiprintf_r+0x4c>
 800150c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800150e:	e711      	b.n	8001334 <_vfiprintf_r+0x50>
 8001510:	ab03      	add	r3, sp, #12
 8001512:	9300      	str	r3, [sp, #0]
 8001514:	462a      	mov	r2, r5
 8001516:	4b09      	ldr	r3, [pc, #36]	; (800153c <_vfiprintf_r+0x258>)
 8001518:	a904      	add	r1, sp, #16
 800151a:	4630      	mov	r0, r6
 800151c:	f000 f880 	bl	8001620 <_printf_i>
 8001520:	e7e4      	b.n	80014ec <_vfiprintf_r+0x208>
 8001522:	bf00      	nop
 8001524:	08001c40 	.word	0x08001c40
 8001528:	08001c60 	.word	0x08001c60
 800152c:	08001c20 	.word	0x08001c20
 8001530:	08001d32 	.word	0x08001d32
 8001534:	08001d3c 	.word	0x08001d3c
 8001538:	00000000 	.word	0x00000000
 800153c:	080012bf 	.word	0x080012bf
 8001540:	08001d38 	.word	0x08001d38

08001544 <_printf_common>:
 8001544:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001548:	4616      	mov	r6, r2
 800154a:	4699      	mov	r9, r3
 800154c:	688a      	ldr	r2, [r1, #8]
 800154e:	690b      	ldr	r3, [r1, #16]
 8001550:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001554:	4293      	cmp	r3, r2
 8001556:	bfb8      	it	lt
 8001558:	4613      	movlt	r3, r2
 800155a:	6033      	str	r3, [r6, #0]
 800155c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001560:	4607      	mov	r7, r0
 8001562:	460c      	mov	r4, r1
 8001564:	b10a      	cbz	r2, 800156a <_printf_common+0x26>
 8001566:	3301      	adds	r3, #1
 8001568:	6033      	str	r3, [r6, #0]
 800156a:	6823      	ldr	r3, [r4, #0]
 800156c:	0699      	lsls	r1, r3, #26
 800156e:	bf42      	ittt	mi
 8001570:	6833      	ldrmi	r3, [r6, #0]
 8001572:	3302      	addmi	r3, #2
 8001574:	6033      	strmi	r3, [r6, #0]
 8001576:	6825      	ldr	r5, [r4, #0]
 8001578:	f015 0506 	ands.w	r5, r5, #6
 800157c:	d106      	bne.n	800158c <_printf_common+0x48>
 800157e:	f104 0a19 	add.w	sl, r4, #25
 8001582:	68e3      	ldr	r3, [r4, #12]
 8001584:	6832      	ldr	r2, [r6, #0]
 8001586:	1a9b      	subs	r3, r3, r2
 8001588:	42ab      	cmp	r3, r5
 800158a:	dc26      	bgt.n	80015da <_printf_common+0x96>
 800158c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001590:	1e13      	subs	r3, r2, #0
 8001592:	6822      	ldr	r2, [r4, #0]
 8001594:	bf18      	it	ne
 8001596:	2301      	movne	r3, #1
 8001598:	0692      	lsls	r2, r2, #26
 800159a:	d42b      	bmi.n	80015f4 <_printf_common+0xb0>
 800159c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80015a0:	4649      	mov	r1, r9
 80015a2:	4638      	mov	r0, r7
 80015a4:	47c0      	blx	r8
 80015a6:	3001      	adds	r0, #1
 80015a8:	d01e      	beq.n	80015e8 <_printf_common+0xa4>
 80015aa:	6823      	ldr	r3, [r4, #0]
 80015ac:	68e5      	ldr	r5, [r4, #12]
 80015ae:	6832      	ldr	r2, [r6, #0]
 80015b0:	f003 0306 	and.w	r3, r3, #6
 80015b4:	2b04      	cmp	r3, #4
 80015b6:	bf08      	it	eq
 80015b8:	1aad      	subeq	r5, r5, r2
 80015ba:	68a3      	ldr	r3, [r4, #8]
 80015bc:	6922      	ldr	r2, [r4, #16]
 80015be:	bf0c      	ite	eq
 80015c0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80015c4:	2500      	movne	r5, #0
 80015c6:	4293      	cmp	r3, r2
 80015c8:	bfc4      	itt	gt
 80015ca:	1a9b      	subgt	r3, r3, r2
 80015cc:	18ed      	addgt	r5, r5, r3
 80015ce:	2600      	movs	r6, #0
 80015d0:	341a      	adds	r4, #26
 80015d2:	42b5      	cmp	r5, r6
 80015d4:	d11a      	bne.n	800160c <_printf_common+0xc8>
 80015d6:	2000      	movs	r0, #0
 80015d8:	e008      	b.n	80015ec <_printf_common+0xa8>
 80015da:	2301      	movs	r3, #1
 80015dc:	4652      	mov	r2, sl
 80015de:	4649      	mov	r1, r9
 80015e0:	4638      	mov	r0, r7
 80015e2:	47c0      	blx	r8
 80015e4:	3001      	adds	r0, #1
 80015e6:	d103      	bne.n	80015f0 <_printf_common+0xac>
 80015e8:	f04f 30ff 	mov.w	r0, #4294967295
 80015ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80015f0:	3501      	adds	r5, #1
 80015f2:	e7c6      	b.n	8001582 <_printf_common+0x3e>
 80015f4:	18e1      	adds	r1, r4, r3
 80015f6:	1c5a      	adds	r2, r3, #1
 80015f8:	2030      	movs	r0, #48	; 0x30
 80015fa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80015fe:	4422      	add	r2, r4
 8001600:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001604:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001608:	3302      	adds	r3, #2
 800160a:	e7c7      	b.n	800159c <_printf_common+0x58>
 800160c:	2301      	movs	r3, #1
 800160e:	4622      	mov	r2, r4
 8001610:	4649      	mov	r1, r9
 8001612:	4638      	mov	r0, r7
 8001614:	47c0      	blx	r8
 8001616:	3001      	adds	r0, #1
 8001618:	d0e6      	beq.n	80015e8 <_printf_common+0xa4>
 800161a:	3601      	adds	r6, #1
 800161c:	e7d9      	b.n	80015d2 <_printf_common+0x8e>
	...

08001620 <_printf_i>:
 8001620:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001624:	7e0f      	ldrb	r7, [r1, #24]
 8001626:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001628:	2f78      	cmp	r7, #120	; 0x78
 800162a:	4691      	mov	r9, r2
 800162c:	4680      	mov	r8, r0
 800162e:	460c      	mov	r4, r1
 8001630:	469a      	mov	sl, r3
 8001632:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001636:	d807      	bhi.n	8001648 <_printf_i+0x28>
 8001638:	2f62      	cmp	r7, #98	; 0x62
 800163a:	d80a      	bhi.n	8001652 <_printf_i+0x32>
 800163c:	2f00      	cmp	r7, #0
 800163e:	f000 80d8 	beq.w	80017f2 <_printf_i+0x1d2>
 8001642:	2f58      	cmp	r7, #88	; 0x58
 8001644:	f000 80a3 	beq.w	800178e <_printf_i+0x16e>
 8001648:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800164c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001650:	e03a      	b.n	80016c8 <_printf_i+0xa8>
 8001652:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001656:	2b15      	cmp	r3, #21
 8001658:	d8f6      	bhi.n	8001648 <_printf_i+0x28>
 800165a:	a101      	add	r1, pc, #4	; (adr r1, 8001660 <_printf_i+0x40>)
 800165c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001660:	080016b9 	.word	0x080016b9
 8001664:	080016cd 	.word	0x080016cd
 8001668:	08001649 	.word	0x08001649
 800166c:	08001649 	.word	0x08001649
 8001670:	08001649 	.word	0x08001649
 8001674:	08001649 	.word	0x08001649
 8001678:	080016cd 	.word	0x080016cd
 800167c:	08001649 	.word	0x08001649
 8001680:	08001649 	.word	0x08001649
 8001684:	08001649 	.word	0x08001649
 8001688:	08001649 	.word	0x08001649
 800168c:	080017d9 	.word	0x080017d9
 8001690:	080016fd 	.word	0x080016fd
 8001694:	080017bb 	.word	0x080017bb
 8001698:	08001649 	.word	0x08001649
 800169c:	08001649 	.word	0x08001649
 80016a0:	080017fb 	.word	0x080017fb
 80016a4:	08001649 	.word	0x08001649
 80016a8:	080016fd 	.word	0x080016fd
 80016ac:	08001649 	.word	0x08001649
 80016b0:	08001649 	.word	0x08001649
 80016b4:	080017c3 	.word	0x080017c3
 80016b8:	682b      	ldr	r3, [r5, #0]
 80016ba:	1d1a      	adds	r2, r3, #4
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	602a      	str	r2, [r5, #0]
 80016c0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80016c4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80016c8:	2301      	movs	r3, #1
 80016ca:	e0a3      	b.n	8001814 <_printf_i+0x1f4>
 80016cc:	6820      	ldr	r0, [r4, #0]
 80016ce:	6829      	ldr	r1, [r5, #0]
 80016d0:	0606      	lsls	r6, r0, #24
 80016d2:	f101 0304 	add.w	r3, r1, #4
 80016d6:	d50a      	bpl.n	80016ee <_printf_i+0xce>
 80016d8:	680e      	ldr	r6, [r1, #0]
 80016da:	602b      	str	r3, [r5, #0]
 80016dc:	2e00      	cmp	r6, #0
 80016de:	da03      	bge.n	80016e8 <_printf_i+0xc8>
 80016e0:	232d      	movs	r3, #45	; 0x2d
 80016e2:	4276      	negs	r6, r6
 80016e4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80016e8:	485e      	ldr	r0, [pc, #376]	; (8001864 <_printf_i+0x244>)
 80016ea:	230a      	movs	r3, #10
 80016ec:	e019      	b.n	8001722 <_printf_i+0x102>
 80016ee:	680e      	ldr	r6, [r1, #0]
 80016f0:	602b      	str	r3, [r5, #0]
 80016f2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80016f6:	bf18      	it	ne
 80016f8:	b236      	sxthne	r6, r6
 80016fa:	e7ef      	b.n	80016dc <_printf_i+0xbc>
 80016fc:	682b      	ldr	r3, [r5, #0]
 80016fe:	6820      	ldr	r0, [r4, #0]
 8001700:	1d19      	adds	r1, r3, #4
 8001702:	6029      	str	r1, [r5, #0]
 8001704:	0601      	lsls	r1, r0, #24
 8001706:	d501      	bpl.n	800170c <_printf_i+0xec>
 8001708:	681e      	ldr	r6, [r3, #0]
 800170a:	e002      	b.n	8001712 <_printf_i+0xf2>
 800170c:	0646      	lsls	r6, r0, #25
 800170e:	d5fb      	bpl.n	8001708 <_printf_i+0xe8>
 8001710:	881e      	ldrh	r6, [r3, #0]
 8001712:	4854      	ldr	r0, [pc, #336]	; (8001864 <_printf_i+0x244>)
 8001714:	2f6f      	cmp	r7, #111	; 0x6f
 8001716:	bf0c      	ite	eq
 8001718:	2308      	moveq	r3, #8
 800171a:	230a      	movne	r3, #10
 800171c:	2100      	movs	r1, #0
 800171e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001722:	6865      	ldr	r5, [r4, #4]
 8001724:	60a5      	str	r5, [r4, #8]
 8001726:	2d00      	cmp	r5, #0
 8001728:	bfa2      	ittt	ge
 800172a:	6821      	ldrge	r1, [r4, #0]
 800172c:	f021 0104 	bicge.w	r1, r1, #4
 8001730:	6021      	strge	r1, [r4, #0]
 8001732:	b90e      	cbnz	r6, 8001738 <_printf_i+0x118>
 8001734:	2d00      	cmp	r5, #0
 8001736:	d04d      	beq.n	80017d4 <_printf_i+0x1b4>
 8001738:	4615      	mov	r5, r2
 800173a:	fbb6 f1f3 	udiv	r1, r6, r3
 800173e:	fb03 6711 	mls	r7, r3, r1, r6
 8001742:	5dc7      	ldrb	r7, [r0, r7]
 8001744:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001748:	4637      	mov	r7, r6
 800174a:	42bb      	cmp	r3, r7
 800174c:	460e      	mov	r6, r1
 800174e:	d9f4      	bls.n	800173a <_printf_i+0x11a>
 8001750:	2b08      	cmp	r3, #8
 8001752:	d10b      	bne.n	800176c <_printf_i+0x14c>
 8001754:	6823      	ldr	r3, [r4, #0]
 8001756:	07de      	lsls	r6, r3, #31
 8001758:	d508      	bpl.n	800176c <_printf_i+0x14c>
 800175a:	6923      	ldr	r3, [r4, #16]
 800175c:	6861      	ldr	r1, [r4, #4]
 800175e:	4299      	cmp	r1, r3
 8001760:	bfde      	ittt	le
 8001762:	2330      	movle	r3, #48	; 0x30
 8001764:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001768:	f105 35ff 	addle.w	r5, r5, #4294967295
 800176c:	1b52      	subs	r2, r2, r5
 800176e:	6122      	str	r2, [r4, #16]
 8001770:	f8cd a000 	str.w	sl, [sp]
 8001774:	464b      	mov	r3, r9
 8001776:	aa03      	add	r2, sp, #12
 8001778:	4621      	mov	r1, r4
 800177a:	4640      	mov	r0, r8
 800177c:	f7ff fee2 	bl	8001544 <_printf_common>
 8001780:	3001      	adds	r0, #1
 8001782:	d14c      	bne.n	800181e <_printf_i+0x1fe>
 8001784:	f04f 30ff 	mov.w	r0, #4294967295
 8001788:	b004      	add	sp, #16
 800178a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800178e:	4835      	ldr	r0, [pc, #212]	; (8001864 <_printf_i+0x244>)
 8001790:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001794:	6829      	ldr	r1, [r5, #0]
 8001796:	6823      	ldr	r3, [r4, #0]
 8001798:	f851 6b04 	ldr.w	r6, [r1], #4
 800179c:	6029      	str	r1, [r5, #0]
 800179e:	061d      	lsls	r5, r3, #24
 80017a0:	d514      	bpl.n	80017cc <_printf_i+0x1ac>
 80017a2:	07df      	lsls	r7, r3, #31
 80017a4:	bf44      	itt	mi
 80017a6:	f043 0320 	orrmi.w	r3, r3, #32
 80017aa:	6023      	strmi	r3, [r4, #0]
 80017ac:	b91e      	cbnz	r6, 80017b6 <_printf_i+0x196>
 80017ae:	6823      	ldr	r3, [r4, #0]
 80017b0:	f023 0320 	bic.w	r3, r3, #32
 80017b4:	6023      	str	r3, [r4, #0]
 80017b6:	2310      	movs	r3, #16
 80017b8:	e7b0      	b.n	800171c <_printf_i+0xfc>
 80017ba:	6823      	ldr	r3, [r4, #0]
 80017bc:	f043 0320 	orr.w	r3, r3, #32
 80017c0:	6023      	str	r3, [r4, #0]
 80017c2:	2378      	movs	r3, #120	; 0x78
 80017c4:	4828      	ldr	r0, [pc, #160]	; (8001868 <_printf_i+0x248>)
 80017c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80017ca:	e7e3      	b.n	8001794 <_printf_i+0x174>
 80017cc:	0659      	lsls	r1, r3, #25
 80017ce:	bf48      	it	mi
 80017d0:	b2b6      	uxthmi	r6, r6
 80017d2:	e7e6      	b.n	80017a2 <_printf_i+0x182>
 80017d4:	4615      	mov	r5, r2
 80017d6:	e7bb      	b.n	8001750 <_printf_i+0x130>
 80017d8:	682b      	ldr	r3, [r5, #0]
 80017da:	6826      	ldr	r6, [r4, #0]
 80017dc:	6961      	ldr	r1, [r4, #20]
 80017de:	1d18      	adds	r0, r3, #4
 80017e0:	6028      	str	r0, [r5, #0]
 80017e2:	0635      	lsls	r5, r6, #24
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	d501      	bpl.n	80017ec <_printf_i+0x1cc>
 80017e8:	6019      	str	r1, [r3, #0]
 80017ea:	e002      	b.n	80017f2 <_printf_i+0x1d2>
 80017ec:	0670      	lsls	r0, r6, #25
 80017ee:	d5fb      	bpl.n	80017e8 <_printf_i+0x1c8>
 80017f0:	8019      	strh	r1, [r3, #0]
 80017f2:	2300      	movs	r3, #0
 80017f4:	6123      	str	r3, [r4, #16]
 80017f6:	4615      	mov	r5, r2
 80017f8:	e7ba      	b.n	8001770 <_printf_i+0x150>
 80017fa:	682b      	ldr	r3, [r5, #0]
 80017fc:	1d1a      	adds	r2, r3, #4
 80017fe:	602a      	str	r2, [r5, #0]
 8001800:	681d      	ldr	r5, [r3, #0]
 8001802:	6862      	ldr	r2, [r4, #4]
 8001804:	2100      	movs	r1, #0
 8001806:	4628      	mov	r0, r5
 8001808:	f7fe fd22 	bl	8000250 <memchr>
 800180c:	b108      	cbz	r0, 8001812 <_printf_i+0x1f2>
 800180e:	1b40      	subs	r0, r0, r5
 8001810:	6060      	str	r0, [r4, #4]
 8001812:	6863      	ldr	r3, [r4, #4]
 8001814:	6123      	str	r3, [r4, #16]
 8001816:	2300      	movs	r3, #0
 8001818:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800181c:	e7a8      	b.n	8001770 <_printf_i+0x150>
 800181e:	6923      	ldr	r3, [r4, #16]
 8001820:	462a      	mov	r2, r5
 8001822:	4649      	mov	r1, r9
 8001824:	4640      	mov	r0, r8
 8001826:	47d0      	blx	sl
 8001828:	3001      	adds	r0, #1
 800182a:	d0ab      	beq.n	8001784 <_printf_i+0x164>
 800182c:	6823      	ldr	r3, [r4, #0]
 800182e:	079b      	lsls	r3, r3, #30
 8001830:	d413      	bmi.n	800185a <_printf_i+0x23a>
 8001832:	68e0      	ldr	r0, [r4, #12]
 8001834:	9b03      	ldr	r3, [sp, #12]
 8001836:	4298      	cmp	r0, r3
 8001838:	bfb8      	it	lt
 800183a:	4618      	movlt	r0, r3
 800183c:	e7a4      	b.n	8001788 <_printf_i+0x168>
 800183e:	2301      	movs	r3, #1
 8001840:	4632      	mov	r2, r6
 8001842:	4649      	mov	r1, r9
 8001844:	4640      	mov	r0, r8
 8001846:	47d0      	blx	sl
 8001848:	3001      	adds	r0, #1
 800184a:	d09b      	beq.n	8001784 <_printf_i+0x164>
 800184c:	3501      	adds	r5, #1
 800184e:	68e3      	ldr	r3, [r4, #12]
 8001850:	9903      	ldr	r1, [sp, #12]
 8001852:	1a5b      	subs	r3, r3, r1
 8001854:	42ab      	cmp	r3, r5
 8001856:	dcf2      	bgt.n	800183e <_printf_i+0x21e>
 8001858:	e7eb      	b.n	8001832 <_printf_i+0x212>
 800185a:	2500      	movs	r5, #0
 800185c:	f104 0619 	add.w	r6, r4, #25
 8001860:	e7f5      	b.n	800184e <_printf_i+0x22e>
 8001862:	bf00      	nop
 8001864:	08001d43 	.word	0x08001d43
 8001868:	08001d54 	.word	0x08001d54

0800186c <_read_r>:
 800186c:	b538      	push	{r3, r4, r5, lr}
 800186e:	4d07      	ldr	r5, [pc, #28]	; (800188c <_read_r+0x20>)
 8001870:	4604      	mov	r4, r0
 8001872:	4608      	mov	r0, r1
 8001874:	4611      	mov	r1, r2
 8001876:	2200      	movs	r2, #0
 8001878:	602a      	str	r2, [r5, #0]
 800187a:	461a      	mov	r2, r3
 800187c:	f7fe fe8d 	bl	800059a <_read>
 8001880:	1c43      	adds	r3, r0, #1
 8001882:	d102      	bne.n	800188a <_read_r+0x1e>
 8001884:	682b      	ldr	r3, [r5, #0]
 8001886:	b103      	cbz	r3, 800188a <_read_r+0x1e>
 8001888:	6023      	str	r3, [r4, #0]
 800188a:	bd38      	pop	{r3, r4, r5, pc}
 800188c:	20000148 	.word	0x20000148

08001890 <__swbuf_r>:
 8001890:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001892:	460e      	mov	r6, r1
 8001894:	4614      	mov	r4, r2
 8001896:	4605      	mov	r5, r0
 8001898:	b118      	cbz	r0, 80018a2 <__swbuf_r+0x12>
 800189a:	6983      	ldr	r3, [r0, #24]
 800189c:	b90b      	cbnz	r3, 80018a2 <__swbuf_r+0x12>
 800189e:	f7ff f965 	bl	8000b6c <__sinit>
 80018a2:	4b21      	ldr	r3, [pc, #132]	; (8001928 <__swbuf_r+0x98>)
 80018a4:	429c      	cmp	r4, r3
 80018a6:	d12b      	bne.n	8001900 <__swbuf_r+0x70>
 80018a8:	686c      	ldr	r4, [r5, #4]
 80018aa:	69a3      	ldr	r3, [r4, #24]
 80018ac:	60a3      	str	r3, [r4, #8]
 80018ae:	89a3      	ldrh	r3, [r4, #12]
 80018b0:	071a      	lsls	r2, r3, #28
 80018b2:	d52f      	bpl.n	8001914 <__swbuf_r+0x84>
 80018b4:	6923      	ldr	r3, [r4, #16]
 80018b6:	b36b      	cbz	r3, 8001914 <__swbuf_r+0x84>
 80018b8:	6923      	ldr	r3, [r4, #16]
 80018ba:	6820      	ldr	r0, [r4, #0]
 80018bc:	1ac0      	subs	r0, r0, r3
 80018be:	6963      	ldr	r3, [r4, #20]
 80018c0:	b2f6      	uxtb	r6, r6
 80018c2:	4283      	cmp	r3, r0
 80018c4:	4637      	mov	r7, r6
 80018c6:	dc04      	bgt.n	80018d2 <__swbuf_r+0x42>
 80018c8:	4621      	mov	r1, r4
 80018ca:	4628      	mov	r0, r5
 80018cc:	f7ff fc20 	bl	8001110 <_fflush_r>
 80018d0:	bb30      	cbnz	r0, 8001920 <__swbuf_r+0x90>
 80018d2:	68a3      	ldr	r3, [r4, #8]
 80018d4:	3b01      	subs	r3, #1
 80018d6:	60a3      	str	r3, [r4, #8]
 80018d8:	6823      	ldr	r3, [r4, #0]
 80018da:	1c5a      	adds	r2, r3, #1
 80018dc:	6022      	str	r2, [r4, #0]
 80018de:	701e      	strb	r6, [r3, #0]
 80018e0:	6963      	ldr	r3, [r4, #20]
 80018e2:	3001      	adds	r0, #1
 80018e4:	4283      	cmp	r3, r0
 80018e6:	d004      	beq.n	80018f2 <__swbuf_r+0x62>
 80018e8:	89a3      	ldrh	r3, [r4, #12]
 80018ea:	07db      	lsls	r3, r3, #31
 80018ec:	d506      	bpl.n	80018fc <__swbuf_r+0x6c>
 80018ee:	2e0a      	cmp	r6, #10
 80018f0:	d104      	bne.n	80018fc <__swbuf_r+0x6c>
 80018f2:	4621      	mov	r1, r4
 80018f4:	4628      	mov	r0, r5
 80018f6:	f7ff fc0b 	bl	8001110 <_fflush_r>
 80018fa:	b988      	cbnz	r0, 8001920 <__swbuf_r+0x90>
 80018fc:	4638      	mov	r0, r7
 80018fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001900:	4b0a      	ldr	r3, [pc, #40]	; (800192c <__swbuf_r+0x9c>)
 8001902:	429c      	cmp	r4, r3
 8001904:	d101      	bne.n	800190a <__swbuf_r+0x7a>
 8001906:	68ac      	ldr	r4, [r5, #8]
 8001908:	e7cf      	b.n	80018aa <__swbuf_r+0x1a>
 800190a:	4b09      	ldr	r3, [pc, #36]	; (8001930 <__swbuf_r+0xa0>)
 800190c:	429c      	cmp	r4, r3
 800190e:	bf08      	it	eq
 8001910:	68ec      	ldreq	r4, [r5, #12]
 8001912:	e7ca      	b.n	80018aa <__swbuf_r+0x1a>
 8001914:	4621      	mov	r1, r4
 8001916:	4628      	mov	r0, r5
 8001918:	f000 f80c 	bl	8001934 <__swsetup_r>
 800191c:	2800      	cmp	r0, #0
 800191e:	d0cb      	beq.n	80018b8 <__swbuf_r+0x28>
 8001920:	f04f 37ff 	mov.w	r7, #4294967295
 8001924:	e7ea      	b.n	80018fc <__swbuf_r+0x6c>
 8001926:	bf00      	nop
 8001928:	08001c40 	.word	0x08001c40
 800192c:	08001c60 	.word	0x08001c60
 8001930:	08001c20 	.word	0x08001c20

08001934 <__swsetup_r>:
 8001934:	4b32      	ldr	r3, [pc, #200]	; (8001a00 <__swsetup_r+0xcc>)
 8001936:	b570      	push	{r4, r5, r6, lr}
 8001938:	681d      	ldr	r5, [r3, #0]
 800193a:	4606      	mov	r6, r0
 800193c:	460c      	mov	r4, r1
 800193e:	b125      	cbz	r5, 800194a <__swsetup_r+0x16>
 8001940:	69ab      	ldr	r3, [r5, #24]
 8001942:	b913      	cbnz	r3, 800194a <__swsetup_r+0x16>
 8001944:	4628      	mov	r0, r5
 8001946:	f7ff f911 	bl	8000b6c <__sinit>
 800194a:	4b2e      	ldr	r3, [pc, #184]	; (8001a04 <__swsetup_r+0xd0>)
 800194c:	429c      	cmp	r4, r3
 800194e:	d10f      	bne.n	8001970 <__swsetup_r+0x3c>
 8001950:	686c      	ldr	r4, [r5, #4]
 8001952:	89a3      	ldrh	r3, [r4, #12]
 8001954:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001958:	0719      	lsls	r1, r3, #28
 800195a:	d42c      	bmi.n	80019b6 <__swsetup_r+0x82>
 800195c:	06dd      	lsls	r5, r3, #27
 800195e:	d411      	bmi.n	8001984 <__swsetup_r+0x50>
 8001960:	2309      	movs	r3, #9
 8001962:	6033      	str	r3, [r6, #0]
 8001964:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001968:	81a3      	strh	r3, [r4, #12]
 800196a:	f04f 30ff 	mov.w	r0, #4294967295
 800196e:	e03e      	b.n	80019ee <__swsetup_r+0xba>
 8001970:	4b25      	ldr	r3, [pc, #148]	; (8001a08 <__swsetup_r+0xd4>)
 8001972:	429c      	cmp	r4, r3
 8001974:	d101      	bne.n	800197a <__swsetup_r+0x46>
 8001976:	68ac      	ldr	r4, [r5, #8]
 8001978:	e7eb      	b.n	8001952 <__swsetup_r+0x1e>
 800197a:	4b24      	ldr	r3, [pc, #144]	; (8001a0c <__swsetup_r+0xd8>)
 800197c:	429c      	cmp	r4, r3
 800197e:	bf08      	it	eq
 8001980:	68ec      	ldreq	r4, [r5, #12]
 8001982:	e7e6      	b.n	8001952 <__swsetup_r+0x1e>
 8001984:	0758      	lsls	r0, r3, #29
 8001986:	d512      	bpl.n	80019ae <__swsetup_r+0x7a>
 8001988:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800198a:	b141      	cbz	r1, 800199e <__swsetup_r+0x6a>
 800198c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001990:	4299      	cmp	r1, r3
 8001992:	d002      	beq.n	800199a <__swsetup_r+0x66>
 8001994:	4630      	mov	r0, r6
 8001996:	f7ff fc2f 	bl	80011f8 <_free_r>
 800199a:	2300      	movs	r3, #0
 800199c:	6363      	str	r3, [r4, #52]	; 0x34
 800199e:	89a3      	ldrh	r3, [r4, #12]
 80019a0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80019a4:	81a3      	strh	r3, [r4, #12]
 80019a6:	2300      	movs	r3, #0
 80019a8:	6063      	str	r3, [r4, #4]
 80019aa:	6923      	ldr	r3, [r4, #16]
 80019ac:	6023      	str	r3, [r4, #0]
 80019ae:	89a3      	ldrh	r3, [r4, #12]
 80019b0:	f043 0308 	orr.w	r3, r3, #8
 80019b4:	81a3      	strh	r3, [r4, #12]
 80019b6:	6923      	ldr	r3, [r4, #16]
 80019b8:	b94b      	cbnz	r3, 80019ce <__swsetup_r+0x9a>
 80019ba:	89a3      	ldrh	r3, [r4, #12]
 80019bc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80019c0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80019c4:	d003      	beq.n	80019ce <__swsetup_r+0x9a>
 80019c6:	4621      	mov	r1, r4
 80019c8:	4630      	mov	r0, r6
 80019ca:	f000 f84d 	bl	8001a68 <__smakebuf_r>
 80019ce:	89a0      	ldrh	r0, [r4, #12]
 80019d0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80019d4:	f010 0301 	ands.w	r3, r0, #1
 80019d8:	d00a      	beq.n	80019f0 <__swsetup_r+0xbc>
 80019da:	2300      	movs	r3, #0
 80019dc:	60a3      	str	r3, [r4, #8]
 80019de:	6963      	ldr	r3, [r4, #20]
 80019e0:	425b      	negs	r3, r3
 80019e2:	61a3      	str	r3, [r4, #24]
 80019e4:	6923      	ldr	r3, [r4, #16]
 80019e6:	b943      	cbnz	r3, 80019fa <__swsetup_r+0xc6>
 80019e8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80019ec:	d1ba      	bne.n	8001964 <__swsetup_r+0x30>
 80019ee:	bd70      	pop	{r4, r5, r6, pc}
 80019f0:	0781      	lsls	r1, r0, #30
 80019f2:	bf58      	it	pl
 80019f4:	6963      	ldrpl	r3, [r4, #20]
 80019f6:	60a3      	str	r3, [r4, #8]
 80019f8:	e7f4      	b.n	80019e4 <__swsetup_r+0xb0>
 80019fa:	2000      	movs	r0, #0
 80019fc:	e7f7      	b.n	80019ee <__swsetup_r+0xba>
 80019fe:	bf00      	nop
 8001a00:	2000000c 	.word	0x2000000c
 8001a04:	08001c40 	.word	0x08001c40
 8001a08:	08001c60 	.word	0x08001c60
 8001a0c:	08001c20 	.word	0x08001c20

08001a10 <abort>:
 8001a10:	b508      	push	{r3, lr}
 8001a12:	2006      	movs	r0, #6
 8001a14:	f000 f890 	bl	8001b38 <raise>
 8001a18:	2001      	movs	r0, #1
 8001a1a:	f000 f8d3 	bl	8001bc4 <_exit>

08001a1e <__swhatbuf_r>:
 8001a1e:	b570      	push	{r4, r5, r6, lr}
 8001a20:	460e      	mov	r6, r1
 8001a22:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001a26:	2900      	cmp	r1, #0
 8001a28:	b096      	sub	sp, #88	; 0x58
 8001a2a:	4614      	mov	r4, r2
 8001a2c:	461d      	mov	r5, r3
 8001a2e:	da08      	bge.n	8001a42 <__swhatbuf_r+0x24>
 8001a30:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8001a34:	2200      	movs	r2, #0
 8001a36:	602a      	str	r2, [r5, #0]
 8001a38:	061a      	lsls	r2, r3, #24
 8001a3a:	d410      	bmi.n	8001a5e <__swhatbuf_r+0x40>
 8001a3c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001a40:	e00e      	b.n	8001a60 <__swhatbuf_r+0x42>
 8001a42:	466a      	mov	r2, sp
 8001a44:	f000 f894 	bl	8001b70 <_fstat_r>
 8001a48:	2800      	cmp	r0, #0
 8001a4a:	dbf1      	blt.n	8001a30 <__swhatbuf_r+0x12>
 8001a4c:	9a01      	ldr	r2, [sp, #4]
 8001a4e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001a52:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001a56:	425a      	negs	r2, r3
 8001a58:	415a      	adcs	r2, r3
 8001a5a:	602a      	str	r2, [r5, #0]
 8001a5c:	e7ee      	b.n	8001a3c <__swhatbuf_r+0x1e>
 8001a5e:	2340      	movs	r3, #64	; 0x40
 8001a60:	2000      	movs	r0, #0
 8001a62:	6023      	str	r3, [r4, #0]
 8001a64:	b016      	add	sp, #88	; 0x58
 8001a66:	bd70      	pop	{r4, r5, r6, pc}

08001a68 <__smakebuf_r>:
 8001a68:	898b      	ldrh	r3, [r1, #12]
 8001a6a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001a6c:	079d      	lsls	r5, r3, #30
 8001a6e:	4606      	mov	r6, r0
 8001a70:	460c      	mov	r4, r1
 8001a72:	d507      	bpl.n	8001a84 <__smakebuf_r+0x1c>
 8001a74:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001a78:	6023      	str	r3, [r4, #0]
 8001a7a:	6123      	str	r3, [r4, #16]
 8001a7c:	2301      	movs	r3, #1
 8001a7e:	6163      	str	r3, [r4, #20]
 8001a80:	b002      	add	sp, #8
 8001a82:	bd70      	pop	{r4, r5, r6, pc}
 8001a84:	ab01      	add	r3, sp, #4
 8001a86:	466a      	mov	r2, sp
 8001a88:	f7ff ffc9 	bl	8001a1e <__swhatbuf_r>
 8001a8c:	9900      	ldr	r1, [sp, #0]
 8001a8e:	4605      	mov	r5, r0
 8001a90:	4630      	mov	r0, r6
 8001a92:	f7ff f959 	bl	8000d48 <_malloc_r>
 8001a96:	b948      	cbnz	r0, 8001aac <__smakebuf_r+0x44>
 8001a98:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001a9c:	059a      	lsls	r2, r3, #22
 8001a9e:	d4ef      	bmi.n	8001a80 <__smakebuf_r+0x18>
 8001aa0:	f023 0303 	bic.w	r3, r3, #3
 8001aa4:	f043 0302 	orr.w	r3, r3, #2
 8001aa8:	81a3      	strh	r3, [r4, #12]
 8001aaa:	e7e3      	b.n	8001a74 <__smakebuf_r+0xc>
 8001aac:	4b0d      	ldr	r3, [pc, #52]	; (8001ae4 <__smakebuf_r+0x7c>)
 8001aae:	62b3      	str	r3, [r6, #40]	; 0x28
 8001ab0:	89a3      	ldrh	r3, [r4, #12]
 8001ab2:	6020      	str	r0, [r4, #0]
 8001ab4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001ab8:	81a3      	strh	r3, [r4, #12]
 8001aba:	9b00      	ldr	r3, [sp, #0]
 8001abc:	6163      	str	r3, [r4, #20]
 8001abe:	9b01      	ldr	r3, [sp, #4]
 8001ac0:	6120      	str	r0, [r4, #16]
 8001ac2:	b15b      	cbz	r3, 8001adc <__smakebuf_r+0x74>
 8001ac4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001ac8:	4630      	mov	r0, r6
 8001aca:	f000 f863 	bl	8001b94 <_isatty_r>
 8001ace:	b128      	cbz	r0, 8001adc <__smakebuf_r+0x74>
 8001ad0:	89a3      	ldrh	r3, [r4, #12]
 8001ad2:	f023 0303 	bic.w	r3, r3, #3
 8001ad6:	f043 0301 	orr.w	r3, r3, #1
 8001ada:	81a3      	strh	r3, [r4, #12]
 8001adc:	89a0      	ldrh	r0, [r4, #12]
 8001ade:	4305      	orrs	r5, r0
 8001ae0:	81a5      	strh	r5, [r4, #12]
 8001ae2:	e7cd      	b.n	8001a80 <__smakebuf_r+0x18>
 8001ae4:	08000b05 	.word	0x08000b05

08001ae8 <_raise_r>:
 8001ae8:	291f      	cmp	r1, #31
 8001aea:	b538      	push	{r3, r4, r5, lr}
 8001aec:	4604      	mov	r4, r0
 8001aee:	460d      	mov	r5, r1
 8001af0:	d904      	bls.n	8001afc <_raise_r+0x14>
 8001af2:	2316      	movs	r3, #22
 8001af4:	6003      	str	r3, [r0, #0]
 8001af6:	f04f 30ff 	mov.w	r0, #4294967295
 8001afa:	bd38      	pop	{r3, r4, r5, pc}
 8001afc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8001afe:	b112      	cbz	r2, 8001b06 <_raise_r+0x1e>
 8001b00:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8001b04:	b94b      	cbnz	r3, 8001b1a <_raise_r+0x32>
 8001b06:	4620      	mov	r0, r4
 8001b08:	f000 f830 	bl	8001b6c <_getpid_r>
 8001b0c:	462a      	mov	r2, r5
 8001b0e:	4601      	mov	r1, r0
 8001b10:	4620      	mov	r0, r4
 8001b12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001b16:	f000 b817 	b.w	8001b48 <_kill_r>
 8001b1a:	2b01      	cmp	r3, #1
 8001b1c:	d00a      	beq.n	8001b34 <_raise_r+0x4c>
 8001b1e:	1c59      	adds	r1, r3, #1
 8001b20:	d103      	bne.n	8001b2a <_raise_r+0x42>
 8001b22:	2316      	movs	r3, #22
 8001b24:	6003      	str	r3, [r0, #0]
 8001b26:	2001      	movs	r0, #1
 8001b28:	e7e7      	b.n	8001afa <_raise_r+0x12>
 8001b2a:	2400      	movs	r4, #0
 8001b2c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8001b30:	4628      	mov	r0, r5
 8001b32:	4798      	blx	r3
 8001b34:	2000      	movs	r0, #0
 8001b36:	e7e0      	b.n	8001afa <_raise_r+0x12>

08001b38 <raise>:
 8001b38:	4b02      	ldr	r3, [pc, #8]	; (8001b44 <raise+0xc>)
 8001b3a:	4601      	mov	r1, r0
 8001b3c:	6818      	ldr	r0, [r3, #0]
 8001b3e:	f7ff bfd3 	b.w	8001ae8 <_raise_r>
 8001b42:	bf00      	nop
 8001b44:	2000000c 	.word	0x2000000c

08001b48 <_kill_r>:
 8001b48:	b538      	push	{r3, r4, r5, lr}
 8001b4a:	4d07      	ldr	r5, [pc, #28]	; (8001b68 <_kill_r+0x20>)
 8001b4c:	2300      	movs	r3, #0
 8001b4e:	4604      	mov	r4, r0
 8001b50:	4608      	mov	r0, r1
 8001b52:	4611      	mov	r1, r2
 8001b54:	602b      	str	r3, [r5, #0]
 8001b56:	f000 f82d 	bl	8001bb4 <_kill>
 8001b5a:	1c43      	adds	r3, r0, #1
 8001b5c:	d102      	bne.n	8001b64 <_kill_r+0x1c>
 8001b5e:	682b      	ldr	r3, [r5, #0]
 8001b60:	b103      	cbz	r3, 8001b64 <_kill_r+0x1c>
 8001b62:	6023      	str	r3, [r4, #0]
 8001b64:	bd38      	pop	{r3, r4, r5, pc}
 8001b66:	bf00      	nop
 8001b68:	20000148 	.word	0x20000148

08001b6c <_getpid_r>:
 8001b6c:	f7fe bdd6 	b.w	800071c <_getpid>

08001b70 <_fstat_r>:
 8001b70:	b538      	push	{r3, r4, r5, lr}
 8001b72:	4d07      	ldr	r5, [pc, #28]	; (8001b90 <_fstat_r+0x20>)
 8001b74:	2300      	movs	r3, #0
 8001b76:	4604      	mov	r4, r0
 8001b78:	4608      	mov	r0, r1
 8001b7a:	4611      	mov	r1, r2
 8001b7c:	602b      	str	r3, [r5, #0]
 8001b7e:	f7fe fe14 	bl	80007aa <_fstat>
 8001b82:	1c43      	adds	r3, r0, #1
 8001b84:	d102      	bne.n	8001b8c <_fstat_r+0x1c>
 8001b86:	682b      	ldr	r3, [r5, #0]
 8001b88:	b103      	cbz	r3, 8001b8c <_fstat_r+0x1c>
 8001b8a:	6023      	str	r3, [r4, #0]
 8001b8c:	bd38      	pop	{r3, r4, r5, pc}
 8001b8e:	bf00      	nop
 8001b90:	20000148 	.word	0x20000148

08001b94 <_isatty_r>:
 8001b94:	b538      	push	{r3, r4, r5, lr}
 8001b96:	4d06      	ldr	r5, [pc, #24]	; (8001bb0 <_isatty_r+0x1c>)
 8001b98:	2300      	movs	r3, #0
 8001b9a:	4604      	mov	r4, r0
 8001b9c:	4608      	mov	r0, r1
 8001b9e:	602b      	str	r3, [r5, #0]
 8001ba0:	f7fe ff6a 	bl	8000a78 <_isatty>
 8001ba4:	1c43      	adds	r3, r0, #1
 8001ba6:	d102      	bne.n	8001bae <_isatty_r+0x1a>
 8001ba8:	682b      	ldr	r3, [r5, #0]
 8001baa:	b103      	cbz	r3, 8001bae <_isatty_r+0x1a>
 8001bac:	6023      	str	r3, [r4, #0]
 8001bae:	bd38      	pop	{r3, r4, r5, pc}
 8001bb0:	20000148 	.word	0x20000148

08001bb4 <_kill>:
 8001bb4:	4b02      	ldr	r3, [pc, #8]	; (8001bc0 <_kill+0xc>)
 8001bb6:	2258      	movs	r2, #88	; 0x58
 8001bb8:	601a      	str	r2, [r3, #0]
 8001bba:	f04f 30ff 	mov.w	r0, #4294967295
 8001bbe:	4770      	bx	lr
 8001bc0:	20000148 	.word	0x20000148

08001bc4 <_exit>:
 8001bc4:	e7fe      	b.n	8001bc4 <_exit>
	...

08001bc8 <_init>:
 8001bc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001bca:	bf00      	nop
 8001bcc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001bce:	bc08      	pop	{r3}
 8001bd0:	469e      	mov	lr, r3
 8001bd2:	4770      	bx	lr

08001bd4 <_fini>:
 8001bd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001bd6:	bf00      	nop
 8001bd8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001bda:	bc08      	pop	{r3}
 8001bdc:	469e      	mov	lr, r3
 8001bde:	4770      	bx	lr
